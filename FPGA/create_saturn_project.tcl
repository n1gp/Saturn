#*****************************************************************************************
# Vivado (TM) v2023.1 (64-bit)
#
# create_saturn_project.tcl: Tcl script for re-creating project 'saturn_project'
#
# Generated by Vivado on Sat Dec 07 19:58:11 +0000 2024
# IP Build 3864474 on Sun May  7 20:36:21 MDT 2023
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (create_saturn_project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/iambic.v"
#    "C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v"
#    "C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/utils_1/imports/synth_2/synth_2_copy_1/saturn_top_wrapper.dcp"
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/ltc2208_derand.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/d-register.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/stream_reader_writer.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axi_stream_resizer_64to48.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/FIFO_Monitor.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_read64_reg.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/usr_reg_access.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_config256_reg.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_config64_reg.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axi_spi_adc.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_SPIWriter.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/AXI_FIFO_overflow_latch_reader.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/pwm_dac.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/Attenuator.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/PTTATUGate.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/clockdivider.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/debounce.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/AXILite_Alex_SPI.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_constant.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/DDCMux.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/clock-monitor.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/wideband_collect.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_64bit.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/cvt_offsetbinary.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axi_stream_deinterleaver.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_4.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/cw_key_ramp.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_adder.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/i2s_clk_lrclk_gen.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/I2S_xmit.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/I2S_rcv.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_32bit.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_multiplier.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/AXI_ADC_overrange_latch_reader.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axi_cfg_register.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axi_stream_interleaver.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axi_stream_resizer.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/coefficientfiles/cwkeyershape_960points.coe"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/coefficientfiles/512TapLPF_corner_20KHz_tfilter.coe"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/coefficientfiles/cwkeyershape_240points.coe"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/coefficientfiles/512tap_TX_filter_tfilter.coe"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/coefficientfiles/tx1024cfirImpulse.coe"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/coefficientfiles/TX CW Ramp_24bit_960points.coe"
#    "C:/xilinxdesigns/Saturn/FPGA/constraints/pinconstraints.xdc"
#    "C:/xilinxdesigns/Saturn/FPGA/constraints/timingconstraints.xdc"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/testbenches/TX_DUC_tb.v"
#    "C:/xilinxdesigns/Saturn/FPGA/sources/testbenches/tx_duc_tb_behav.wcfg"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/iambic.v"]"\
 "[file normalize "$origin_dir/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v"]"\
 "[file normalize "$origin_dir/saturn_project/saturn_project.srcs/utils_1/imports/synth_2/synth_2_copy_1/saturn_top_wrapper.dcp"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set files [list \
 "[file normalize "$origin_dir/sources/verilogmodules/ltc2208_derand.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/d-register.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/stream_reader_writer.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axi_stream_resizer_64to48.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/FIFO_Monitor.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axil_read64_reg.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/register.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/double_register.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/usr_reg_access.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axil_config256_reg.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axil_config64_reg.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axi_spi_adc.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axil_SPIWriter.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/AXI_FIFO_overflow_latch_reader.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/pwm_dac.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/Attenuator.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/regmux_2_1.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/PTTATUGate.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/clockdivider.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/debounce.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/AXILite_Alex_SPI.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axis_constant.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/DDCMux.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axis_variable.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/clock-monitor.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/wideband_collect.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/byteswap_64bit.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/reg_to_axis.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/regmux_4_1.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/regmux_8_1.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axis_mux_2.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/byteswap_48bit.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/cvt_offsetbinary.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axi_stream_deinterleaver.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axis_mux_4.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/cw_key_ramp.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axis_adder.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/i2s_clk_lrclk_gen.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/I2S_xmit.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/I2S_rcv.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/byteswap_32bit.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axis_multiplier.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/AXI_ADC_overrange_latch_reader.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axi_cfg_register.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axi_stream_interleaver.v"]"\
 "[file normalize "$origin_dir/sources/verilogmodules/axi_stream_resizer.v"]"\
 "[file normalize "$origin_dir/sources/coefficientfiles/cwkeyershape_960points.coe"]"\
 "[file normalize "$origin_dir/sources/coefficientfiles/512TapLPF_corner_20KHz_tfilter.coe"]"\
 "[file normalize "$origin_dir/sources/coefficientfiles/cwkeyershape_240points.coe"]"\
 "[file normalize "$origin_dir/sources/coefficientfiles/512tap_TX_filter_tfilter.coe"]"\
 "[file normalize "$origin_dir/sources/coefficientfiles/tx1024cfirImpulse.coe"]"\
 "[file normalize "$origin_dir/sources/coefficientfiles/TX CW Ramp_24bit_960points.coe"]"\
 "[file normalize "$origin_dir/constraints/pinconstraints.xdc"]"\
 "[file normalize "$origin_dir/constraints/timingconstraints.xdc"]"\
 "[file normalize "$origin_dir/sources/testbenches/TX_DUC_tb.v"]"\
 "[file normalize "$origin_dir/sources/testbenches/tx_duc_tb_behav.wcfg"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "saturn_project"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "create_saturn_project.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/saturn_project"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a200tfbg676-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "platform.description" -value "Vivado generated DSA" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "25" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "3" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "25" -objects $obj
set_property -name "webtalk.modelsim_launch_sim" -value "1" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "25" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "25" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "25" -objects $obj
set_property -name "webtalk.xcelium_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "25" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "32" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/sources/verilogmodules/ltc2208_derand.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/d-register.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/stream_reader_writer.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axi_stream_resizer_64to48.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/FIFO_Monitor.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axil_read64_reg.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/register.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/double_register.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/usr_reg_access.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axil_config256_reg.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axil_config64_reg.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axi_spi_adc.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axil_SPIWriter.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/AXI_FIFO_overflow_latch_reader.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/pwm_dac.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/Attenuator.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/regmux_2_1.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/PTTATUGate.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/clockdivider.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/debounce.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/AXILite_Alex_SPI.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_constant.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/DDCMux.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_variable.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/clock-monitor.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/wideband_collect.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/byteswap_64bit.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/reg_to_axis.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/regmux_4_1.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/regmux_8_1.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_mux_2.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/byteswap_48bit.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/cvt_offsetbinary.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axi_stream_deinterleaver.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_mux_4.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/cw_key_ramp.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_adder.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/i2s_clk_lrclk_gen.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/I2S_xmit.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/I2S_rcv.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/byteswap_32bit.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axis_multiplier.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/AXI_ADC_overrange_latch_reader.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axi_cfg_register.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axi_stream_interleaver.v"] \
 [file normalize "${origin_dir}/sources/verilogmodules/axi_stream_resizer.v"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/cwkeyershape_960points.coe"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/512TapLPF_corner_20KHz_tfilter.coe"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/cwkeyershape_240points.coe"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/512tap_TX_filter_tfilter.coe"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/tx1024cfirImpulse.coe"] \
 [file normalize "${origin_dir}/sources/coefficientfiles/TX CW Ramp_24bit_960points.coe"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/iambic.v"]\
 [file normalize "${origin_dir}/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "saturn_top_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/pinconstraints.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/pinconstraints.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/timingconstraints.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/constraints/timingconstraints.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/constraints/pinconstraints.xdc"]" -objects $obj
set_property -name "target_part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/constraints/pinconstraints.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/sources/testbenches/TX_DUC_tb.v"] \
 [file normalize "${origin_dir}/sources/testbenches/tx_duc_tb_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "tx_duc_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/saturn_project/saturn_project.srcs/utils_1/imports/synth_2/synth_2_copy_1/saturn_top_wrapper.dcp" ]\
]
set imported_files [import_files -fileset utils_1 $files]

# Set 'utils_1' fileset file properties for remote files
# None

# Set 'utils_1' fileset file properties for local files
set file "synth_2_copy_1/saturn_top_wrapper.dcp"
set file_obj [get_files -of_objects [get_filesets utils_1] [list "*$file"]]
set_property -name "netlist_only" -value "0" -objects $file_obj


# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}


# Proc to create BD DDC_Block
proc cr_bd_DDC_Block { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# Double_D_register, axis_variable, axis_variable, reg_to_axis, reg_to_axis, regmux_4_1, regmux_8_1, axis_mux_2, byteswap_48, LFSR_Random_Number_Generator



  # CHANGE DESIGN NAME HERE
  set design_name DDC_Block

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:axis_broadcaster:1.1\
  xilinx.com:ip:axis_combiner:1.1\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:axis_subset_converter:1.1\
  xilinx.com:ip:cic_compiler:4.0\
  xilinx.com:ip:cmpy:6.0\
  xilinx.com:ip:dds_compiler:6.0\
  xilinx.com:ip:fir_compiler:7.2\
  xilinx.com:ip:xlconstant:1.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  Double_D_register\
  axis_variable\
  axis_variable\
  reg_to_axis\
  reg_to_axis\
  regmux_4_1\
  regmux_8_1\
  axis_mux_2\
  byteswap_48\
  LFSR_Random_Number_Generator\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set M_AXIS_DATA [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_DATA ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {122880000} \
   ] $M_AXIS_DATA

  set LOIQOut [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 LOIQOut ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {122880000} \
   ] $LOIQOut

  set LOIQIn [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 LOIQIn ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {122880000} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $LOIQIn


  # Create ports
  set ChanConfig [ create_bd_port -dir I -from 1 -to 0 ChanConfig ]
  set ChanFreq [ create_bd_port -dir I -from 31 -to 0 ChanFreq ]
  set CicInterp [ create_bd_port -dir I -from 2 -to 0 CicInterp ]
  set aclk [ create_bd_port -dir I -type clk -freq_hz 122880000 aclk ]
  set adc1 [ create_bd_port -dir I -from 15 -to 0 adc1 ]
  set adc2 [ create_bd_port -dir I -from 15 -to 0 adc2 ]
  set rstn [ create_bd_port -dir I -type rst rstn ]
  set test_source [ create_bd_port -dir I -from 15 -to 0 test_source ]
  set tx_samples [ create_bd_port -dir I -from 15 -to 0 tx_samples ]
  set LOIQSel [ create_bd_port -dir I LOIQSel ]
  set Byteswap [ create_bd_port -dir I Byteswap ]

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]

  # Create instance: Double_D_register_0, and set properties
  set block_name Double_D_register
  set block_cell_name Double_D_register_0
  if { [catch {set Double_D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Double_D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {9} $Double_D_register_0


  # Create instance: axis_variable_0, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_0
  if { [catch {set axis_variable_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXIS_TDATA_WIDTH {16} $axis_variable_0


  # Create instance: axis_variable_1, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_1
  if { [catch {set axis_variable_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXIS_TDATA_WIDTH {16} $axis_variable_1


  # Create instance: reg_to_axis_0, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_0
  if { [catch {set reg_to_axis_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DIN_WIDTH {32} $reg_to_axis_0


  # Create instance: reg_to_axis_1, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_1
  if { [catch {set reg_to_axis_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DIN_WIDTH {32} $reg_to_axis_1


  # Create instance: regmux_4_1_0, and set properties
  set block_name regmux_4_1
  set block_cell_name regmux_4_1_0
  if { [catch {set regmux_4_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_4_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: regmux_8_1_0, and set properties
  set block_name regmux_8_1
  set block_cell_name regmux_8_1_0
  if { [catch {set regmux_8_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_8_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {9} $regmux_8_1_0


  # Create instance: axis_mux_2_0, and set properties
  set block_name axis_mux_2
  set block_cell_name axis_mux_2_0
  if { [catch {set axis_mux_2_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_mux_2_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.CONSUME_ALL {1} \
    CONFIG.DATA_WIDTH {32} \
    CONFIG.DEST_WIDTH {0} \
    CONFIG.KEEP_ENABLE {false} \
  ] $axis_mux_2_0


  # Create instance: byteswap_48_0, and set properties
  set block_name byteswap_48
  set block_cell_name byteswap_48_0
  if { [catch {set byteswap_48_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $byteswap_48_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: LFSR_Random_Number_G_0, and set properties
  set block_name LFSR_Random_Number_Generator
  set block_cell_name LFSR_Random_Number_G_0
  if { [catch {set LFSR_Random_Number_G_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $LFSR_Random_Number_G_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_broadcaster_0, and set properties
  set axis_broadcaster_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_0 ]
  set_property -dict [list \
    CONFIG.M00_TDATA_REMAP {tdata[31:0]} \
    CONFIG.M01_TDATA_REMAP {tdata[31:0]} \
  ] $axis_broadcaster_0


  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [list \
    CONFIG.HAS_TREADY {0} \
    CONFIG.M00_TDATA_REMAP {tdata[23:0]} \
    CONFIG.M01_TDATA_REMAP {tdata[47:24]} \
    CONFIG.M_TDATA_NUM_BYTES {3} \
    CONFIG.S_TDATA_NUM_BYTES {6} \
  ] $axis_broadcaster_1


  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]
  set_property CONFIG.NUM_SI {2} $axis_combiner_0


  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {4} \
    CONFIG.S_TDATA_NUM_BYTES {8} \
  ] $axis_dwidth_converter_0


  # Create instance: axis_dwidth_converter_1, and set properties
  set axis_dwidth_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_1 ]
  set_property -dict [list \
    CONFIG.HAS_MI_TKEEP {0} \
    CONFIG.M_TDATA_NUM_BYTES {6} \
    CONFIG.S_TDATA_NUM_BYTES {3} \
  ] $axis_dwidth_converter_1


  # Create instance: axis_subset_converter_0, and set properties
  set axis_subset_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_0 ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {3} \
    CONFIG.S_TDATA_NUM_BYTES {4} \
    CONFIG.TDATA_REMAP {tdata[23:0]} \
  ] $axis_subset_converter_0


  # Create instance: axis_subset_converter_1, and set properties
  set axis_subset_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_1 ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {4} \
    CONFIG.S_TDATA_NUM_BYTES {4} \
    CONFIG.TDATA_REMAP {tdata[29],tdata[29], tdata[29], tdata[29], tdata[29], tdata[29], tdata[29], tdata[29:5]} \
  ] $axis_subset_converter_1


  # Create instance: axis_subset_converter_2, and set properties
  set axis_subset_converter_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_2 ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {4} \
    CONFIG.S_TDATA_NUM_BYTES {4} \
    CONFIG.TDATA_REMAP {tdata[29],tdata[29], tdata[29], tdata[29], tdata[29], tdata[29], tdata[29], tdata[29:5]} \
  ] $axis_subset_converter_2


  # Create instance: cic_compiler_0, and set properties
  set cic_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_0 ]
  set_property -dict [list \
    CONFIG.Clock_Frequency {122.88} \
    CONFIG.Filter_Type {Decimation} \
    CONFIG.Fixed_Or_Initial_Rate {40} \
    CONFIG.HAS_ARESETN {true} \
    CONFIG.Input_Data_Width {24} \
    CONFIG.Input_Sample_Frequency {122.88} \
    CONFIG.Maximum_Rate {320} \
    CONFIG.Minimum_Rate {10} \
    CONFIG.Number_Of_Stages {6} \
    CONFIG.Output_Data_Width {32} \
    CONFIG.Quantization {Truncation} \
    CONFIG.RateSpecification {Frequency_Specification} \
    CONFIG.SamplePeriod {1} \
    CONFIG.Sample_Rate_Changes {Programmable} \
    CONFIG.Use_Xtreme_DSP_Slice {false} \
  ] $cic_compiler_0


  # Create instance: cic_compiler_1, and set properties
  set cic_compiler_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_1 ]
  set_property -dict [list \
    CONFIG.Clock_Frequency {122.88} \
    CONFIG.Filter_Type {Decimation} \
    CONFIG.Fixed_Or_Initial_Rate {40} \
    CONFIG.HAS_ARESETN {true} \
    CONFIG.Input_Data_Width {24} \
    CONFIG.Input_Sample_Frequency {122.88} \
    CONFIG.Maximum_Rate {320} \
    CONFIG.Minimum_Rate {10} \
    CONFIG.Number_Of_Stages {6} \
    CONFIG.Output_Data_Width {32} \
    CONFIG.Quantization {Truncation} \
    CONFIG.RateSpecification {Frequency_Specification} \
    CONFIG.SamplePeriod {1} \
    CONFIG.Sample_Rate_Changes {Programmable} \
    CONFIG.Use_Xtreme_DSP_Slice {false} \
  ] $cic_compiler_1


  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [list \
    CONFIG.MinimumLatency {6} \
    CONFIG.OptimizeGoal {Resources} \
    CONFIG.OutputWidth {24} \
    CONFIG.RoundMode {Random_Rounding} \
  ] $cmpy_0


  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [list \
    CONFIG.Amplitude_Mode {Full_Range} \
    CONFIG.DATA_Has_TLAST {Not_Required} \
    CONFIG.DDS_Clock_Rate {122.88} \
    CONFIG.Frequency_Resolution {0.05} \
    CONFIG.Has_ARESETn {true} \
    CONFIG.Has_Phase_Out {false} \
    CONFIG.Latency {8} \
    CONFIG.M_DATA_Has_TUSER {Not_Required} \
    CONFIG.Noise_Shaping {Auto} \
    CONFIG.Output_Frequency1 {0} \
    CONFIG.Output_Width {16} \
    CONFIG.PINC1 {0} \
    CONFIG.Parameter_Entry {System_Parameters} \
    CONFIG.Phase_Increment {Streaming} \
    CONFIG.Phase_Width {32} \
    CONFIG.S_PHASE_Has_TUSER {Not_Required} \
    CONFIG.Spurious_Free_Dynamic_Range {95} \
  ] $dds_compiler_0


  # Create instance: fir_compiler_0, and set properties
  set fir_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 fir_compiler_0 ]
  set_property -dict [list \
    CONFIG.Clock_Frequency {122.88} \
    CONFIG.CoefficientSource {COE_File} \
    CONFIG.CoefficientVector {6,0,-4,-3,5,6,-6,-13,7,44,64,44,7,-13,-6,6,5,-3,-4,0,6} \
    CONFIG.Coefficient_Fanout {true} \
    CONFIG.Coefficient_File {c:/xilinxdesigns/Saturn/FPGA/sources/coefficientfiles/tx1024cfirImpulse.coe} \
    CONFIG.Coefficient_Fractional_Bits {20} \
    CONFIG.Coefficient_Sets {1} \
    CONFIG.Coefficient_Sign {Signed} \
    CONFIG.Coefficient_Structure {Inferred} \
    CONFIG.Coefficient_Width {18} \
    CONFIG.ColumnConfig {13} \
    CONFIG.Control_Broadcast_Fanout {true} \
    CONFIG.Control_Column_Fanout {true} \
    CONFIG.Control_LUT_Pipeline {true} \
    CONFIG.Control_Path_Fanout {true} \
    CONFIG.DATA_Has_TLAST {Not_Required} \
    CONFIG.Data_Fractional_Bits {0} \
    CONFIG.Data_Path_Broadcast {false} \
    CONFIG.Data_Path_Fanout {true} \
    CONFIG.Data_Width {25} \
    CONFIG.Decimation_Rate {8} \
    CONFIG.Disable_Half_Band_Centre_Tap {false} \
    CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
    CONFIG.Filter_Type {Decimation} \
    CONFIG.Has_ARESETn {true} \
    CONFIG.Interpolation_Rate {1} \
    CONFIG.M_DATA_Has_TREADY {true} \
    CONFIG.M_DATA_Has_TUSER {Not_Required} \
    CONFIG.No_BRAM_Read_First_Mode {true} \
    CONFIG.No_SRL_Attributes {false} \
    CONFIG.Number_Channels {2} \
    CONFIG.Optimal_Column_Lengths {true} \
    CONFIG.Optimization_Goal {Speed} \
    CONFIG.Optimization_List {Data_Path_Fanout,Pre-Adder_Pipeline,Coefficient_Fanout,Control_Path_Fanout,Control_Column_Fanout,Control_Broadcast_Fanout,Control_LUT_Pipeline,No_BRAM_Read_First_Mode,Optimal_Column_Lengths,Other}\
\
    CONFIG.Optimization_Selection {All} \
    CONFIG.Other {true} \
    CONFIG.Output_Rounding_Mode {Non_Symmetric_Rounding_Up} \
    CONFIG.Output_Width {27} \
    CONFIG.Pre_Adder_Pipeline {true} \
    CONFIG.Quantization {Quantize_Only} \
    CONFIG.RateSpecification {Frequency_Specification} \
    CONFIG.S_DATA_Has_TUSER {Not_Required} \
    CONFIG.Sample_Frequency {12.288} \
    CONFIG.Select_Pattern {All} \
    CONFIG.Zero_Pack_Factor {1} \
  ] $fir_compiler_0


  # Create instance: xlconstant_10, and set properties
  set xlconstant_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_10 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {10} \
    CONFIG.CONST_WIDTH {9} \
  ] $xlconstant_10


  # Create instance: xlconstant_160, and set properties
  set xlconstant_160 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_160 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {160} \
    CONFIG.CONST_WIDTH {9} \
  ] $xlconstant_160


  # Create instance: xlconstant_16bits0, and set properties
  set xlconstant_16bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_16bits0 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {0} \
    CONFIG.CONST_WIDTH {16} \
  ] $xlconstant_16bits0


  # Create instance: xlconstant_20, and set properties
  set xlconstant_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_20 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {20} \
    CONFIG.CONST_WIDTH {9} \
  ] $xlconstant_20


  # Create instance: xlconstant_320, and set properties
  set xlconstant_320 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_320 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {320} \
    CONFIG.CONST_WIDTH {9} \
  ] $xlconstant_320


  # Create instance: xlconstant_40, and set properties
  set xlconstant_40 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_40 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {40} \
    CONFIG.CONST_WIDTH {9} \
  ] $xlconstant_40


  # Create instance: xlconstant_7bits0, and set properties
  set xlconstant_7bits0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_7bits0 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {0} \
    CONFIG.CONST_WIDTH {7} \
  ] $xlconstant_7bits0


  # Create instance: xlconstant_80, and set properties
  set xlconstant_80 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_80 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {80} \
    CONFIG.CONST_WIDTH {9} \
  ] $xlconstant_80


  # Create interface connections
  connect_bd_intf_net -intf_net LFSR_Random_Number_G_0_m_axis [get_bd_intf_pins LFSR_Random_Number_G_0/m_axis] [get_bd_intf_pins cmpy_0/S_AXIS_CTRL]
  connect_bd_intf_net -intf_net LOIQIn_1 [get_bd_intf_ports LOIQIn] [get_bd_intf_pins axis_mux_2_0/input_1_axis]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_broadcaster_0/M00_AXIS] [get_bd_intf_pins axis_mux_2_0/input_0_axis]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_ports LOIQOut] [get_bd_intf_pins axis_broadcaster_0/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_broadcaster_1/M00_AXIS] [get_bd_intf_pins cic_compiler_1/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins axis_broadcaster_1/M01_AXIS] [get_bd_intf_pins cic_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins axis_combiner_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS] [get_bd_intf_pins fir_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_dwidth_converter_1_M_AXIS [get_bd_intf_pins axis_dwidth_converter_1/M_AXIS] [get_bd_intf_pins byteswap_48_0/s_axis]
  connect_bd_intf_net -intf_net axis_mux_2_0_output_axis [get_bd_intf_pins axis_mux_2_0/output_axis] [get_bd_intf_pins cmpy_0/S_AXIS_B]
  connect_bd_intf_net -intf_net axis_subset_converter_0_M_AXIS [get_bd_intf_pins axis_subset_converter_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_subset_converter_1_M_AXIS [get_bd_intf_pins axis_subset_converter_1/M_AXIS] [get_bd_intf_pins axis_combiner_0/S00_AXIS]
  connect_bd_intf_net -intf_net axis_subset_converter_2_M_AXIS [get_bd_intf_pins axis_subset_converter_2/M_AXIS] [get_bd_intf_pins axis_combiner_0/S01_AXIS]
  connect_bd_intf_net -intf_net axis_variable_0_m_axis [get_bd_intf_pins axis_variable_0/m_axis] [get_bd_intf_pins cic_compiler_1/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net axis_variable_1_m_axis [get_bd_intf_pins axis_variable_1/m_axis] [get_bd_intf_pins cic_compiler_0/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net byteswap_48_0_m_axis [get_bd_intf_ports M_AXIS_DATA] [get_bd_intf_pins byteswap_48_0/m_axis]
  connect_bd_intf_net -intf_net cic_compiler_0_M_AXIS_DATA [get_bd_intf_pins cic_compiler_0/M_AXIS_DATA] [get_bd_intf_pins axis_subset_converter_2/S_AXIS]
  connect_bd_intf_net -intf_net cic_compiler_1_M_AXIS_DATA [get_bd_intf_pins cic_compiler_1/M_AXIS_DATA] [get_bd_intf_pins axis_subset_converter_1/S_AXIS]
  connect_bd_intf_net -intf_net cmpy_0_M_AXIS_DOUT [get_bd_intf_pins cmpy_0/M_AXIS_DOUT] [get_bd_intf_pins axis_broadcaster_1/S_AXIS]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins dds_compiler_0/M_AXIS_DATA] [get_bd_intf_pins axis_broadcaster_0/S_AXIS]
  connect_bd_intf_net -intf_net fir_compiler_0_M_AXIS_DATA [get_bd_intf_pins fir_compiler_0/M_AXIS_DATA] [get_bd_intf_pins axis_subset_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net reg_to_axis_0_m_axis [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE] [get_bd_intf_pins reg_to_axis_0/m_axis]
  connect_bd_intf_net -intf_net reg_to_axis_1_m_axis [get_bd_intf_pins cmpy_0/S_AXIS_A] [get_bd_intf_pins reg_to_axis_1/m_axis]

  # Create port connections
  connect_bd_net -net Byteswap_1 [get_bd_ports Byteswap] [get_bd_pins byteswap_48_0/swap]
  connect_bd_net -net ChanFreq_1 [get_bd_ports ChanFreq] [get_bd_pins reg_to_axis_0/data_in]
  connect_bd_net -net CicInterp_1 [get_bd_ports CicInterp] [get_bd_pins regmux_8_1_0/sel]
  connect_bd_net -net Double_D_register_0_dout [get_bd_pins Double_D_register_0/dout] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net LOIQSel_1 [get_bd_ports LOIQSel] [get_bd_pins axis_mux_2_0/sel]
  connect_bd_net -net aclk_1 [get_bd_ports aclk] [get_bd_pins Double_D_register_0/aclk] [get_bd_pins axis_variable_0/aclk] [get_bd_pins axis_variable_1/aclk] [get_bd_pins reg_to_axis_0/aclk] [get_bd_pins reg_to_axis_1/aclk] [get_bd_pins regmux_4_1_0/aclk] [get_bd_pins regmux_8_1_0/aclk] [get_bd_pins axis_mux_2_0/clk] [get_bd_pins byteswap_48_0/aclk] [get_bd_pins LFSR_Random_Number_G_0/aclk] [get_bd_pins axis_broadcaster_0/aclk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_dwidth_converter_1/aclk] [get_bd_pins axis_subset_converter_0/aclk] [get_bd_pins axis_subset_converter_1/aclk] [get_bd_pins axis_subset_converter_2/aclk] [get_bd_pins cic_compiler_0/aclk] [get_bd_pins cic_compiler_1/aclk] [get_bd_pins cmpy_0/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins fir_compiler_0/aclk]
  connect_bd_net -net adc1_1 [get_bd_ports adc1] [get_bd_pins regmux_4_1_0/din0]
  connect_bd_net -net adc2_1 [get_bd_ports adc2] [get_bd_pins regmux_4_1_0/din1]
  connect_bd_net -net regmux_4_1_0_dout [get_bd_pins regmux_4_1_0/dout] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net regmux_8_1_0_dout [get_bd_pins regmux_8_1_0/dout] [get_bd_pins Double_D_register_0/din]
  connect_bd_net -net rstn_1 [get_bd_ports rstn] [get_bd_pins axis_variable_0/aresetn] [get_bd_pins axis_variable_1/aresetn] [get_bd_pins regmux_4_1_0/resetn] [get_bd_pins regmux_8_1_0/resetn] [get_bd_pins axis_mux_2_0/rstn] [get_bd_pins byteswap_48_0/aresetn] [get_bd_pins LFSR_Random_Number_G_0/aresetn] [get_bd_pins axis_broadcaster_0/aresetn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_dwidth_converter_1/aresetn] [get_bd_pins axis_subset_converter_0/aresetn] [get_bd_pins axis_subset_converter_1/aresetn] [get_bd_pins axis_subset_converter_2/aresetn] [get_bd_pins cic_compiler_0/aresetn] [get_bd_pins cic_compiler_1/aresetn] [get_bd_pins dds_compiler_0/aresetn] [get_bd_pins fir_compiler_0/aresetn]
  connect_bd_net -net sel_0_1 [get_bd_ports ChanConfig] [get_bd_pins regmux_4_1_0/sel]
  connect_bd_net -net test_source_1 [get_bd_ports test_source] [get_bd_pins regmux_4_1_0/din2]
  connect_bd_net -net tx_samples_1 [get_bd_ports tx_samples] [get_bd_pins regmux_4_1_0/din3]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins xlconcat_1/dout] [get_bd_pins axis_variable_0/cfg_data] [get_bd_pins axis_variable_1/cfg_data]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins xlconcat_2/dout] [get_bd_pins reg_to_axis_1/data_in]
  connect_bd_net -net xlconstant_10_dout [get_bd_pins xlconstant_10/dout] [get_bd_pins regmux_8_1_0/din6] [get_bd_pins regmux_8_1_0/din7]
  connect_bd_net -net xlconstant_160_dout [get_bd_pins xlconstant_160/dout] [get_bd_pins regmux_8_1_0/din2]
  connect_bd_net -net xlconstant_16bits0_dout [get_bd_pins xlconstant_16bits0/dout] [get_bd_pins xlconcat_2/In1]
  connect_bd_net -net xlconstant_20_dout [get_bd_pins xlconstant_20/dout] [get_bd_pins regmux_8_1_0/din5]
  connect_bd_net -net xlconstant_320_dout [get_bd_pins xlconstant_320/dout] [get_bd_pins regmux_8_1_0/din0] [get_bd_pins regmux_8_1_0/din1]
  connect_bd_net -net xlconstant_40_dout [get_bd_pins xlconstant_40/dout] [get_bd_pins regmux_8_1_0/din4]
  connect_bd_net -net xlconstant_7bits0_dout [get_bd_pins xlconstant_7bits0/dout] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net xlconstant_80_dout [get_bd_pins xlconstant_80/dout] [get_bd_pins regmux_8_1_0/din3]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_DDC_Block()
cr_bd_DDC_Block ""
set_property REGISTERED_WITH_MANAGER "1" [get_files DDC_Block.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files DDC_Block.bd ] 

if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}
if { [get_files axi_stream_deinterleaver.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axi_stream_deinterleaver.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files axis_mux_4.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_4.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files cw_key_ramp.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/cw_key_ramp.v
}
if { [get_files clockdivider.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/clockdivider.v
}
if { [get_files axi_stream_deinterleaver.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axi_stream_deinterleaver.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files axis_mux_4.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_4.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files cw_key_ramp.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/cw_key_ramp.v
}
if { [get_files cw_key_ramp.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/cw_key_ramp.v
}
if { [get_files clockdivider.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/clockdivider.v
}


# Proc to create BD IQ_Modulation_Select
proc cr_bd_IQ_Modulation_Select { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# AXIS_Deinterleaver, axis_constant, axis_mux_4, reg_to_axis, byteswap_48, cw_key_ramp, cw_key_ramp, ClockDivider



  # CHANGE DESIGN NAME HERE
  set design_name IQ_Modulation_Select

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:util_reduced_logic:2.0\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:axi_bram_ctrl:4.1\
  xilinx.com:ip:axis_subset_converter:1.1\
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:ip:dds_compiler:6.0\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:xlconstant:1.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  AXIS_Deinterleaver\
  axis_constant\
  axis_mux_4\
  reg_to_axis\
  byteswap_48\
  cw_key_ramp\
  cw_key_ramp\
  ClockDivider\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set S_AXI_keyerBRAM [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_keyerBRAM ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {15} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {122880000} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {1} \
   CONFIG.HAS_CACHE {1} \
   CONFIG.HAS_LOCK {1} \
   CONFIG.HAS_PROT {1} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $S_AXI_keyerBRAM

  set TX_IQ_in [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 TX_IQ_in ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {122880000} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {6} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $TX_IQ_in

  set m_axis_TXMod [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_TXMod ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {122880000} \
   ] $m_axis_TXMod

  set m_axis_envelope [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_envelope ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {122880000} \
   ] $m_axis_envelope

  set m_axis_sidetoneampl [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_sidetoneampl ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {122880000} \
   ] $m_axis_sidetoneampl


  # Create ports
  set CWSampleSelect [ create_bd_port -dir O CWSampleSelect ]
  set Deinterleave [ create_bd_port -dir I Deinterleave ]
  set IQEnable [ create_bd_port -dir I IQEnable ]
  set Modulation_Setup [ create_bd_port -dir I -from 2 -to 0 Modulation_Setup ]
  set TXTestFreq [ create_bd_port -dir I -from 31 -to 0 TXTestFreq ]
  set TX_ENABLE [ create_bd_port -dir I TX_ENABLE ]
  set TX_OUTPUTENABLE [ create_bd_port -dir O -from 0 -to 0 TX_OUTPUTENABLE ]
  set TX_Strobe [ create_bd_port -dir I TX_Strobe ]
  set clk122 [ create_bd_port -dir I -type clk -freq_hz 122880000 clk122 ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {m_axis_TXMod:S_AXI_keyerBRAM:TX_IQ_in:m_axis_envelope:m_axis_sidetoneampl} \
 ] $clk122
  set cw_key_down [ create_bd_port -dir I cw_key_down ]
  set cw_ptt [ create_bd_port -dir O cw_ptt ]
  set keyer_config [ create_bd_port -dir I -from 31 -to 0 keyer_config ]
  set protocol_2 [ create_bd_port -dir I protocol_2 ]
  set resetn [ create_bd_port -dir I -type rst resetn ]
  set Byteswap [ create_bd_port -dir I Byteswap ]

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property CONFIG.C_SIZE {2} $util_reduced_logic_0


  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {30} \
    CONFIG.DIN_TO {18} \
    CONFIG.DOUT_WIDTH {13} \
  ] $xlslice_0


  # Create instance: xlslice_TXsel, and set properties
  set xlslice_TXsel [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_TXsel ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {3} \
    CONFIG.DOUT_WIDTH {2} \
  ] $xlslice_TXsel


  # Create instance: xlslice_keyerdelay, and set properties
  set xlslice_keyerdelay [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyerdelay ]
  set_property -dict [list \
    CONFIG.DIN_FROM {7} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {8} \
  ] $xlslice_keyerdelay


  # Create instance: xlslice_keyeren, and set properties
  set xlslice_keyeren [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyeren ]
  set_property -dict [list \
    CONFIG.DIN_FROM {31} \
    CONFIG.DIN_TO {31} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_keyeren


  # Create instance: xlslice_keyerhang, and set properties
  set xlslice_keyerhang [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_keyerhang ]
  set_property -dict [list \
    CONFIG.DIN_FROM {17} \
    CONFIG.DIN_TO {8} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {10} \
  ] $xlslice_keyerhang


  # Create instance: xlslice_opgate, and set properties
  set xlslice_opgate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_opgate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DIN_TO {2} \
    CONFIG.DIN_WIDTH {3} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_opgate


  # Create instance: AXIS_Deinterleaver_0, and set properties
  set block_name AXIS_Deinterleaver
  set block_cell_name AXIS_Deinterleaver_0
  if { [catch {set AXIS_Deinterleaver_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Deinterleaver_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_constant_1, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_1
  if { [catch {set axis_constant_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXIS_TDATA_WIDTH {32} $axis_constant_1


  # Create instance: axis_mux_4_0, and set properties
  set block_name axis_mux_4
  set block_cell_name axis_mux_4_0
  if { [catch {set axis_mux_4_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_mux_4_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.CONSUME_ALL {1} \
    CONFIG.DATA_WIDTH {48} \
    CONFIG.DEST_WIDTH {0} \
    CONFIG.ID_WIDTH {0} \
    CONFIG.KEEP_ENABLE {false} \
    CONFIG.KEEP_WIDTH {0} \
    CONFIG.USER_ENABLE {0} \
    CONFIG.USER_WIDTH {0} \
  ] $axis_mux_4_0


  # Create instance: reg_to_axis_0, and set properties
  set block_name reg_to_axis
  set block_cell_name reg_to_axis_0
  if { [catch {set reg_to_axis_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_to_axis_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DIN_WIDTH {48} $reg_to_axis_0


  # Create instance: byteswap_48_0, and set properties
  set block_name byteswap_48
  set block_cell_name byteswap_48_0
  if { [catch {set byteswap_48_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $byteswap_48_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_bram_ctrl_0, and set properties
  set axi_bram_ctrl_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_bram_ctrl:4.1 axi_bram_ctrl_0 ]
  set_property CONFIG.SINGLE_PORT_BRAM {1} $axi_bram_ctrl_0


  # Create instance: axis_subset_converter_32to48bit, and set properties
  set axis_subset_converter_32to48bit [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_32to48bit ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {6} \
    CONFIG.S_TDATA_NUM_BYTES {4} \
    CONFIG.TDATA_REMAP {tdata[31:16],8'b00000000,tdata[15:0], 8'b00000000} \
  ] $axis_subset_converter_32to48bit


  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property -dict [list \
    CONFIG.EN_SAFETY_CKT {false} \
    CONFIG.Enable_32bit_Address {true} \
    CONFIG.Enable_B {Use_ENB_Pin} \
    CONFIG.Memory_Type {True_Dual_Port_RAM} \
    CONFIG.Port_A_Write_Rate {50} \
    CONFIG.Port_B_Clock {100} \
    CONFIG.Port_B_Enable_Rate {100} \
    CONFIG.Port_B_Write_Rate {50} \
    CONFIG.Read_Width_A {32} \
    CONFIG.Read_Width_B {32} \
    CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
    CONFIG.Use_RSTA_Pin {true} \
    CONFIG.Use_RSTB_Pin {true} \
    CONFIG.Write_Width_A {32} \
    CONFIG.Write_Width_B {32} \
    CONFIG.use_bram_block {BRAM_Controller} \
  ] $blk_mem_gen_0


  # Create instance: dds_compiler_testsource, and set properties
  set dds_compiler_testsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_testsource ]
  set_property -dict [list \
    CONFIG.Amplitude_Mode {Full_Range} \
    CONFIG.DATA_Has_TLAST {Not_Required} \
    CONFIG.DDS_Clock_Rate {122.88} \
    CONFIG.Frequency_Resolution {0.4} \
    CONFIG.Has_ARESETn {true} \
    CONFIG.Has_Phase_Out {false} \
    CONFIG.Has_TREADY {true} \
    CONFIG.Latency {13} \
    CONFIG.M_DATA_Has_TUSER {Not_Required} \
    CONFIG.Negative_Cosine {false} \
    CONFIG.Noise_Shaping {None} \
    CONFIG.Output_Frequency1 {0} \
    CONFIG.Output_Width {16} \
    CONFIG.PINC1 {0} \
    CONFIG.Parameter_Entry {Hardware_Parameters} \
    CONFIG.Phase_Increment {Streaming} \
    CONFIG.Phase_Width {32} \
    CONFIG.S_PHASE_Has_TUSER {Not_Required} \
    CONFIG.Spurious_Free_Dynamic_Range {45} \
  ] $dds_compiler_testsource


  # Create instance: util_vector_OR_TXgate, and set properties
  set util_vector_OR_TXgate [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_OR_TXgate ]
  set_property -dict [list \
    CONFIG.C_OPERATION {or} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_OR_TXgate


  # Create instance: util_vector_TXgate1, and set properties
  set util_vector_TXgate1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_TXgate1 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {and} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_TXgate1


  # Create instance: xlconst_amplQ, and set properties
  set xlconst_amplQ [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconst_amplQ ]
  set_property -dict [list \
    CONFIG.CONST_VAL {0x00007FFFFF} \
    CONFIG.CONST_WIDTH {48} \
  ] $xlconst_amplQ


  # Create instance: cw_key_ramp_0, and set properties
  set block_name cw_key_ramp
  set block_cell_name cw_key_ramp_0
  if { [catch {set cw_key_ramp_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cw_key_ramp_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: cw_key_ramp_1, and set properties
  set block_name cw_key_ramp
  set block_cell_name cw_key_ramp_1
  if { [catch {set cw_key_ramp_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cw_key_ramp_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: ClockDivider_0, and set properties
  set block_name ClockDivider
  set block_cell_name ClockDivider_0
  if { [catch {set ClockDivider_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ClockDivider_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.Divisor {2560} $ClockDivider_0


  # Create instance: blk_mem_gen_1, and set properties
  set blk_mem_gen_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_1 ]
  set_property -dict [list \
    CONFIG.Coe_File {c:/xilinxdesigns/Saturn/FPGA/sources/coefficientfiles/TX CW Ramp_24bit_960points.coe} \
    CONFIG.Enable_32bit_Address {true} \
    CONFIG.Load_Init_File {true} \
    CONFIG.Memory_Type {Single_Port_ROM} \
    CONFIG.Use_RSTA_Pin {false} \
    CONFIG.Write_Depth_A {1024} \
    CONFIG.Write_Width_A {32} \
    CONFIG.use_bram_block {Stand_Alone} \
  ] $blk_mem_gen_1


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {960} \
    CONFIG.CONST_WIDTH {13} \
  ] $xlconstant_1


  # Create interface connections
  connect_bd_intf_net -intf_net AXIS_Deinterleaver_0_m00_axis [get_bd_intf_pins AXIS_Deinterleaver_0/m00_axis] [get_bd_intf_pins axis_mux_4_0/input_0_axis]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_ports S_AXI_keyerBRAM] [get_bd_intf_pins axi_bram_ctrl_0/S_AXI]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_ports m_axis_envelope] [get_bd_intf_pins AXIS_Deinterleaver_0/m01_axis]
  connect_bd_intf_net -intf_net TX_IQ_in_1 [get_bd_intf_ports TX_IQ_in] [get_bd_intf_pins byteswap_48_0/s_axis]
  connect_bd_intf_net -intf_net axi_bram_ctrl_0_BRAM_PORTA [get_bd_intf_pins axi_bram_ctrl_0/BRAM_PORTA] [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTB]
  connect_bd_intf_net -intf_net axis_constant_1_m_axis [get_bd_intf_pins axis_constant_1/m_axis] [get_bd_intf_pins dds_compiler_testsource/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net axis_mux_4_0_output_axis [get_bd_intf_ports m_axis_TXMod] [get_bd_intf_pins axis_mux_4_0/output_axis]
  connect_bd_intf_net -intf_net axis_subset_converter_32to48bit_M_AXIS [get_bd_intf_pins axis_mux_4_0/input_2_axis] [get_bd_intf_pins axis_subset_converter_32to48bit/M_AXIS]
  connect_bd_intf_net -intf_net byteswap_48_0_m_axis [get_bd_intf_pins byteswap_48_0/m_axis] [get_bd_intf_pins AXIS_Deinterleaver_0/s_axis]
  connect_bd_intf_net -intf_net cw_key_ramp_0_m0_axis [get_bd_intf_pins axis_mux_4_0/input_3_axis] [get_bd_intf_pins cw_key_ramp_0/m0_axis]
  connect_bd_intf_net -intf_net cw_key_ramp_1_m1_axis [get_bd_intf_ports m_axis_sidetoneampl] [get_bd_intf_pins cw_key_ramp_1/m1_axis]
  connect_bd_intf_net -intf_net dds_compiler_testsource_M_AXIS_DATA [get_bd_intf_pins axis_subset_converter_32to48bit/S_AXIS] [get_bd_intf_pins dds_compiler_testsource/M_AXIS_DATA]
  connect_bd_intf_net -intf_net reg_to_axis_0_m_axis [get_bd_intf_pins axis_mux_4_0/input_1_axis] [get_bd_intf_pins reg_to_axis_0/m_axis]

  # Create port connections
  connect_bd_net -net Byteswap_1 [get_bd_ports Byteswap] [get_bd_pins byteswap_48_0/swap]
  connect_bd_net -net ClockDivider_0_TC [get_bd_pins ClockDivider_0/TC] [get_bd_pins cw_key_ramp_1/m0_axis_tready]
  connect_bd_net -net Deinterleave_1 [get_bd_ports Deinterleave] [get_bd_pins AXIS_Deinterleaver_0/deinterleave]
  connect_bd_net -net IQEnable_1 [get_bd_ports IQEnable] [get_bd_pins AXIS_Deinterleaver_0/enabled]
  connect_bd_net -net Net [get_bd_ports Modulation_Setup] [get_bd_pins xlslice_TXsel/Din] [get_bd_pins xlslice_opgate/Din]
  connect_bd_net -net Net1 [get_bd_ports clk122] [get_bd_pins AXIS_Deinterleaver_0/aclk] [get_bd_pins axis_constant_1/aclk] [get_bd_pins axis_mux_4_0/clk] [get_bd_pins reg_to_axis_0/aclk] [get_bd_pins byteswap_48_0/aclk] [get_bd_pins axi_bram_ctrl_0/s_axi_aclk] [get_bd_pins axis_subset_converter_32to48bit/aclk] [get_bd_pins blk_mem_gen_0/clka] [get_bd_pins dds_compiler_testsource/aclk] [get_bd_pins cw_key_ramp_0/aclk] [get_bd_pins cw_key_ramp_1/aclk] [get_bd_pins ClockDivider_0/aclk] [get_bd_pins blk_mem_gen_1/clka]
  connect_bd_net -net TX_ENABLE_1 [get_bd_ports TX_ENABLE] [get_bd_pins util_vector_TXgate1/Op2]
  connect_bd_net -net TX_Strobe_1 [get_bd_ports TX_Strobe] [get_bd_pins util_vector_OR_TXgate/Op2]
  connect_bd_net -net TX_Test_Freq_1 [get_bd_ports TXTestFreq] [get_bd_pins axis_constant_1/cfg_data]
  connect_bd_net -net blk_mem_gen_0_douta [get_bd_pins blk_mem_gen_0/douta] [get_bd_pins cw_key_ramp_0/bram_data]
  connect_bd_net -net blk_mem_gen_1_douta [get_bd_pins blk_mem_gen_1/douta] [get_bd_pins cw_key_ramp_1/bram_data]
  connect_bd_net -net cw_key_down_1 [get_bd_ports cw_key_down] [get_bd_pins cw_key_ramp_0/key_down] [get_bd_pins cw_key_ramp_1/key_down]
  connect_bd_net -net cw_key_ramp_0_CW_PTT [get_bd_pins cw_key_ramp_0/CW_PTT] [get_bd_ports cw_ptt]
  connect_bd_net -net cw_key_ramp_0_bram_addr [get_bd_pins cw_key_ramp_0/bram_addr] [get_bd_pins blk_mem_gen_0/addra]
  connect_bd_net -net cw_key_ramp_0_bram_enable [get_bd_pins cw_key_ramp_0/bram_enable] [get_bd_pins blk_mem_gen_0/ena]
  connect_bd_net -net cw_key_ramp_0_bram_web [get_bd_pins cw_key_ramp_0/bram_web] [get_bd_pins blk_mem_gen_0/wea]
  connect_bd_net -net cw_key_ramp_1_bram_addr [get_bd_pins cw_key_ramp_1/bram_addr] [get_bd_pins blk_mem_gen_1/addra]
  connect_bd_net -net cw_key_ramp_1_bram_enable [get_bd_pins cw_key_ramp_1/bram_enable] [get_bd_pins blk_mem_gen_1/ena]
  connect_bd_net -net keyer_config_1 [get_bd_ports keyer_config] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_keyerdelay/Din] [get_bd_pins xlslice_keyeren/Din] [get_bd_pins xlslice_keyerhang/Din]
  connect_bd_net -net resetn_1 [get_bd_ports resetn] [get_bd_pins AXIS_Deinterleaver_0/aresetn] [get_bd_pins axis_mux_4_0/rstn] [get_bd_pins byteswap_48_0/aresetn] [get_bd_pins axi_bram_ctrl_0/s_axi_aresetn] [get_bd_pins axis_subset_converter_32to48bit/aresetn] [get_bd_pins dds_compiler_testsource/aresetn] [get_bd_pins cw_key_ramp_0/aresetn] [get_bd_pins cw_key_ramp_1/aresetn] [get_bd_pins ClockDivider_0/resetn]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins util_reduced_logic_0/Res] [get_bd_ports CWSampleSelect]
  connect_bd_net -net util_vector_OR_TXgate_Res [get_bd_pins util_vector_OR_TXgate/Res] [get_bd_pins util_vector_TXgate1/Op1]
  connect_bd_net -net util_vector_TXgate1_Res [get_bd_pins util_vector_TXgate1/Res] [get_bd_ports TX_OUTPUTENABLE]
  connect_bd_net -net xlconst_amplQ_dout [get_bd_pins xlconst_amplQ/dout] [get_bd_pins reg_to_axis_0/data_in]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconstant_0/dout] [get_bd_pins cw_key_ramp_1/protocol_2]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins xlconstant_1/dout] [get_bd_pins cw_key_ramp_1/ramp_length]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlslice_0/Dout] [get_bd_pins cw_key_ramp_0/ramp_length]
  connect_bd_net -net xlslice_TXsel_Dout [get_bd_pins xlslice_TXsel/Dout] [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins axis_mux_4_0/sel]
  connect_bd_net -net xlslice_keyerdelay_Dout [get_bd_pins xlslice_keyerdelay/Dout] [get_bd_pins cw_key_ramp_0/delay_time] [get_bd_pins cw_key_ramp_1/delay_time]
  connect_bd_net -net xlslice_keyeren_Dout [get_bd_pins xlslice_keyeren/Dout] [get_bd_pins cw_key_ramp_0/keyer_enable] [get_bd_pins cw_key_ramp_1/keyer_enable]
  connect_bd_net -net xlslice_keyerhang_Dout [get_bd_pins xlslice_keyerhang/Dout] [get_bd_pins cw_key_ramp_0/hang_time] [get_bd_pins cw_key_ramp_1/hang_time]
  connect_bd_net -net xlslice_opgate_Dout [get_bd_pins xlslice_opgate/Dout] [get_bd_pins util_vector_OR_TXgate/Op1]
  connect_bd_net -net xlslice_rate_Dout [get_bd_ports protocol_2] [get_bd_pins cw_key_ramp_0/protocol_2]

  # Create address segments
  assign_bd_address -offset 0x00005000 -range 0x00001000 -target_address_space [get_bd_addr_spaces S_AXI_keyerBRAM] [get_bd_addr_segs axi_bram_ctrl_0/S_AXI/Mem0] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_IQ_Modulation_Select()
cr_bd_IQ_Modulation_Select ""
set_property REGISTERED_WITH_MANAGER "1" [get_files IQ_Modulation_Select.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files IQ_Modulation_Select.bd ] 

if { [get_files axis_adder.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_adder.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files i2s_clk_lrclk_gen.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/i2s_clk_lrclk_gen.v
}
if { [get_files I2S_xmit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/I2S_xmit.v
}
if { [get_files I2S_rcv.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/I2S_rcv.v
}
if { [get_files byteswap_32bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_32bit.v
}
if { [get_files axis_multiplier.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_multiplier.v
}
if { [get_files axis_adder.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_adder.v
}
if { [get_files axis_adder.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_adder.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files i2s_clk_lrclk_gen.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/i2s_clk_lrclk_gen.v
}
if { [get_files I2S_xmit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/I2S_xmit.v
}
if { [get_files I2S_rcv.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/I2S_rcv.v
}
if { [get_files byteswap_32bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_32bit.v
}
if { [get_files axis_multiplier.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_multiplier.v
}
if { [get_files axis_multiplier.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_multiplier.v
}
if { [get_files byteswap_32bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_32bit.v
}


# Proc to create BD audio_codec
proc cr_bd_audio_codec { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# axis_adder, axis_adder, axis_constant, axis_constant, i2s_clk_lrclk_gen, I2S_xmit, I2S_rcv, byteswap_32, axis_multiplier, axis_multiplier, byteswap_32



  # CHANGE DESIGN NAME HERE
  set design_name audio_codec

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:axis_broadcaster:1.1\
  xilinx.com:ip:axis_combiner:1.1\
  xilinx.com:ip:axis_subset_converter:1.1\
  xilinx.com:ip:dds_compiler:6.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  axis_adder\
  axis_adder\
  axis_constant\
  axis_constant\
  i2s_clk_lrclk_gen\
  I2S_xmit\
  I2S_rcv\
  byteswap_32\
  axis_multiplier\
  axis_multiplier\
  byteswap_32\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set LR_Spkr_data [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 LR_Spkr_data ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {12288000} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $LR_Spkr_data

  set RX_Audio_Data [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 RX_Audio_Data ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {12288000} \
   ] $RX_Audio_Data

  set S_AXIS_KeyerAmpl [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_KeyerAmpl ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {12288000} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {2} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_KeyerAmpl


  # Create ports
  set BCLK [ create_bd_port -dir O -type clk BCLK ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {5000000} \
 ] $BCLK
  set CodecConfig [ create_bd_port -dir I -from 31 -to 0 CodecConfig ]
  set LRCLK [ create_bd_port -dir O -type clk LRCLK ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {1000000} \
 ] $LRCLK
  set MCLK [ create_bd_port -dir O MCLK ]
  set arstn [ create_bd_port -dir I -type rst arstn ]
  set clk12 [ create_bd_port -dir I -type clk -freq_hz 12288000 clk12 ]
  set i2srxd [ create_bd_port -dir I i2srxd ]
  set i2stxd [ create_bd_port -dir O i2stxd ]
  set Byteswap [ create_bd_port -dir I Byteswap ]

  # Create instance: xlslice_sidetonefreq, and set properties
  set xlslice_sidetonefreq [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_sidetonefreq ]
  set_property -dict [list \
    CONFIG.DIN_FROM {15} \
    CONFIG.DOUT_WIDTH {16} \
  ] $xlslice_sidetonefreq


  # Create instance: xlslice_sidetonevol, and set properties
  set xlslice_sidetonevol [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_sidetonevol ]
  set_property -dict [list \
    CONFIG.DIN_FROM {31} \
    CONFIG.DIN_TO {16} \
    CONFIG.DOUT_WIDTH {16} \
  ] $xlslice_sidetonevol


  # Create instance: axis_adder_0, and set properties
  set block_name axis_adder
  set block_cell_name axis_adder_0
  if { [catch {set axis_adder_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_adder_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.AXIS_TDATA_SIGNED {TRUE} \
    CONFIG.AXIS_TDATA_WIDTH {16} \
  ] $axis_adder_0


  # Create instance: axis_adder_1, and set properties
  set block_name axis_adder
  set block_cell_name axis_adder_1
  if { [catch {set axis_adder_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_adder_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.AXIS_TDATA_SIGNED {TRUE} \
    CONFIG.AXIS_TDATA_WIDTH {16} \
  ] $axis_adder_1


  # Create instance: axis_constant_2, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_2
  if { [catch {set axis_constant_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXIS_TDATA_WIDTH {16} $axis_constant_2


  # Create instance: axis_constant_3, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_3
  if { [catch {set axis_constant_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXIS_TDATA_WIDTH {16} $axis_constant_3


  # Create instance: i2s_clk_lrclk_gen_0, and set properties
  set block_name i2s_clk_lrclk_gen
  set block_cell_name i2s_clk_lrclk_gen_0
  if { [catch {set i2s_clk_lrclk_gen_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $i2s_clk_lrclk_gen_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: I2S_xmit_0, and set properties
  set block_name I2S_xmit
  set block_cell_name I2S_xmit_0
  if { [catch {set I2S_xmit_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $I2S_xmit_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: I2S_rcv_0, and set properties
  set block_name I2S_rcv
  set block_cell_name I2S_rcv_0
  if { [catch {set I2S_rcv_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $I2S_rcv_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: byteswap_32_1, and set properties
  set block_name byteswap_32
  set block_cell_name byteswap_32_1
  if { [catch {set byteswap_32_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $byteswap_32_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_multiplier_vol_star_sine, and set properties
  set block_name axis_multiplier
  set block_cell_name axis_multiplier_vol_star_sine
  if { [catch {set axis_multiplier_vol_star_sine [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_multiplier_vol_star_sine eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_multiplier_vol_star_sine_star_ramp, and set properties
  set block_name axis_multiplier
  set block_cell_name axis_multiplier_vol_star_sine_star_ramp
  if { [catch {set axis_multiplier_vol_star_sine_star_ramp [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_multiplier_vol_star_sine_star_ramp eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_broadcaster_0, and set properties
  set axis_broadcaster_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_0 ]
  set_property -dict [list \
    CONFIG.HAS_TREADY {1} \
    CONFIG.M00_TDATA_REMAP {tdata[15:0]} \
    CONFIG.M01_TDATA_REMAP {tdata[31:16]} \
    CONFIG.M_TDATA_NUM_BYTES {2} \
    CONFIG.S_TDATA_NUM_BYTES {4} \
  ] $axis_broadcaster_0


  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [list \
    CONFIG.HAS_TREADY {1} \
    CONFIG.M00_TDATA_REMAP {tdata[15:0]} \
    CONFIG.M01_TDATA_REMAP {tdata[15:0]} \
    CONFIG.M_TDATA_NUM_BYTES {2} \
    CONFIG.S_TDATA_NUM_BYTES {2} \
  ] $axis_broadcaster_1


  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]

  # Create instance: axis_subset_converter_0, and set properties
  set axis_subset_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_0 ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {2} \
    CONFIG.S_TDATA_NUM_BYTES {4} \
    CONFIG.TDATA_REMAP {tdata[31:16]} \
  ] $axis_subset_converter_0


  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [list \
    CONFIG.DATA_Has_TLAST {Not_Required} \
    CONFIG.DDS_Clock_Rate {0.048} \
    CONFIG.Frequency_Resolution {1} \
    CONFIG.Has_ARESETn {true} \
    CONFIG.Has_Phase_Out {false} \
    CONFIG.Has_TREADY {true} \
    CONFIG.Latency {14} \
    CONFIG.M_DATA_Has_TUSER {Not_Required} \
    CONFIG.Noise_Shaping {Auto} \
    CONFIG.Output_Frequency1 {0} \
    CONFIG.Output_Selection {Sine} \
    CONFIG.Output_Width {16} \
    CONFIG.PINC1 {0} \
    CONFIG.Phase_Increment {Streaming} \
    CONFIG.Phase_Width {16} \
    CONFIG.S_PHASE_Has_TUSER {Not_Required} \
    CONFIG.Spurious_Free_Dynamic_Range {96} \
  ] $dds_compiler_0


  # Create instance: byteswap_32_0, and set properties
  set block_name byteswap_32
  set block_cell_name byteswap_32_0
  if { [catch {set byteswap_32_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $byteswap_32_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net I2S_rcv_0_mrecv_axis [get_bd_intf_pins I2S_rcv_0/mrecv_axis] [get_bd_intf_pins byteswap_32_1/s_axis]
  connect_bd_intf_net -intf_net LR_Spkr_data_1 [get_bd_intf_ports LR_Spkr_data] [get_bd_intf_pins byteswap_32_0/s_axis]
  connect_bd_intf_net -intf_net S_AXIS_KeyerAmpl_1 [get_bd_intf_ports S_AXIS_KeyerAmpl] [get_bd_intf_pins axis_multiplier_vol_star_sine_star_ramp/s01_axis]
  connect_bd_intf_net -intf_net axis_adder_0_m_axis [get_bd_intf_pins axis_adder_0/m_axis] [get_bd_intf_pins axis_combiner_0/S01_AXIS]
  connect_bd_intf_net -intf_net axis_adder_1_m_axis [get_bd_intf_pins axis_adder_1/m_axis] [get_bd_intf_pins axis_combiner_0/S00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_adder_1/s_axis_a] [get_bd_intf_pins axis_broadcaster_0/M00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins axis_adder_0/s_axis_a] [get_bd_intf_pins axis_broadcaster_0/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_adder_1/s_axis_b] [get_bd_intf_pins axis_broadcaster_1/M00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins axis_adder_0/s_axis_b] [get_bd_intf_pins axis_broadcaster_1/M01_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins axis_combiner_0/M_AXIS] [get_bd_intf_pins I2S_xmit_0/sxmit_axis]
  connect_bd_intf_net -intf_net axis_constant_2_m_axis [get_bd_intf_pins axis_constant_2/m_axis] [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net axis_constant_3_m_axis [get_bd_intf_pins axis_constant_3/m_axis] [get_bd_intf_pins axis_multiplier_vol_star_sine/s01_axis]
  connect_bd_intf_net -intf_net axis_multiplier_vol_star_sine_m_axis [get_bd_intf_pins axis_multiplier_vol_star_sine/m_axis] [get_bd_intf_pins axis_multiplier_vol_star_sine_star_ramp/s00_axis]
  connect_bd_intf_net -intf_net axis_multiplier_vol_star_sine_star_ramp_m_axis [get_bd_intf_pins axis_broadcaster_1/S_AXIS] [get_bd_intf_pins axis_multiplier_vol_star_sine_star_ramp/m_axis]
  connect_bd_intf_net -intf_net axis_subset_converter_0_M_AXIS [get_bd_intf_ports RX_Audio_Data] [get_bd_intf_pins axis_subset_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net byteswap_32_0_m_axis [get_bd_intf_pins byteswap_32_0/m_axis] [get_bd_intf_pins axis_broadcaster_0/S_AXIS]
  connect_bd_intf_net -intf_net byteswap_32_1_m_axis [get_bd_intf_pins byteswap_32_1/m_axis] [get_bd_intf_pins axis_subset_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net dds_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_multiplier_vol_star_sine/s00_axis] [get_bd_intf_pins dds_compiler_0/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net Byteswap_1 [get_bd_ports Byteswap] [get_bd_pins byteswap_32_1/swap] [get_bd_pins byteswap_32_0/swap]
  connect_bd_net -net CodecConfig_1 [get_bd_ports CodecConfig] [get_bd_pins xlslice_sidetonefreq/Din] [get_bd_pins xlslice_sidetonevol/Din]
  connect_bd_net -net I2S_xmit_0_outbit [get_bd_pins I2S_xmit_0/outbit] [get_bd_ports i2stxd]
  connect_bd_net -net Net3 [get_bd_ports clk12] [get_bd_ports MCLK] [get_bd_pins axis_adder_0/aclk] [get_bd_pins axis_adder_1/aclk] [get_bd_pins axis_constant_2/aclk] [get_bd_pins axis_constant_3/aclk] [get_bd_pins i2s_clk_lrclk_gen_0/CLK_IN] [get_bd_pins I2S_xmit_0/aclk] [get_bd_pins I2S_rcv_0/aclk] [get_bd_pins byteswap_32_1/aclk] [get_bd_pins axis_multiplier_vol_star_sine/aclk] [get_bd_pins axis_multiplier_vol_star_sine_star_ramp/aclk] [get_bd_pins axis_broadcaster_0/aclk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_subset_converter_0/aclk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins byteswap_32_0/aclk]
  connect_bd_net -net arstn_1 [get_bd_ports arstn] [get_bd_pins i2s_clk_lrclk_gen_0/resetn] [get_bd_pins I2S_xmit_0/resetn] [get_bd_pins I2S_rcv_0/resetn] [get_bd_pins byteswap_32_1/aresetn] [get_bd_pins axis_multiplier_vol_star_sine/aresetn] [get_bd_pins axis_multiplier_vol_star_sine_star_ramp/aresetn] [get_bd_pins axis_broadcaster_0/aresetn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_subset_converter_0/aresetn] [get_bd_pins dds_compiler_0/aresetn] [get_bd_pins byteswap_32_0/aresetn]
  connect_bd_net -net i2s_clk_lrclk_gen_0_BCLK [get_bd_pins i2s_clk_lrclk_gen_0/BCLK] [get_bd_ports BCLK] [get_bd_pins I2S_rcv_0/BCLK]
  connect_bd_net -net i2s_clk_lrclk_gen_0_Bfall [get_bd_pins i2s_clk_lrclk_gen_0/Bfall] [get_bd_pins I2S_xmit_0/CBfall] [get_bd_pins I2S_rcv_0/Bfall]
  connect_bd_net -net i2s_clk_lrclk_gen_0_Brise [get_bd_pins i2s_clk_lrclk_gen_0/Brise] [get_bd_pins I2S_xmit_0/CBrise] [get_bd_pins I2S_rcv_0/Brise]
  connect_bd_net -net i2s_clk_lrclk_gen_0_LRCLK [get_bd_pins i2s_clk_lrclk_gen_0/LRCLK] [get_bd_ports LRCLK] [get_bd_pins I2S_xmit_0/lrclk] [get_bd_pins I2S_rcv_0/LRCLK]
  connect_bd_net -net i2s_clk_lrclk_gen_0_LRfall [get_bd_pins i2s_clk_lrclk_gen_0/LRfall] [get_bd_pins I2S_rcv_0/LRfall]
  connect_bd_net -net i2s_clk_lrclk_gen_0_LRrise [get_bd_pins i2s_clk_lrclk_gen_0/LRrise] [get_bd_pins I2S_rcv_0/LRrise]
  connect_bd_net -net is2rxd_1 [get_bd_ports i2srxd] [get_bd_pins I2S_rcv_0/din]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlslice_sidetonefreq/Dout] [get_bd_pins axis_constant_2/cfg_data]
  connect_bd_net -net xlslice_sidetonevol_Dout [get_bd_pins xlslice_sidetonevol/Dout] [get_bd_pins axis_constant_3/cfg_data]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_audio_codec()
cr_bd_audio_codec ""
set_property REGISTERED_WITH_MANAGER "1" [get_files audio_codec.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files audio_codec.bd ] 

if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files cvt_offsetbinary.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/cvt_offsetbinary.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files cvt_offsetbinary.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/cvt_offsetbinary.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}


# Proc to create BD TX_DUC
proc cr_bd_TX_DUC { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# D_register, axis_constant, axis_variable, axis_variable, cvt_offset_binary, regmux_2_1, LFSR_Random_Number_Generator



  # CHANGE DESIGN NAME HERE
  set design_name TX_DUC

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:axis_broadcaster:1.1\
  xilinx.com:ip:axis_combiner:1.1\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:cic_compiler:4.0\
  xilinx.com:ip:cmpy:6.0\
  xilinx.com:ip:dds_compiler:6.0\
  xilinx.com:ip:fir_compiler:7.2\
  xilinx.com:ip:mult_gen:12.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  D_register\
  axis_constant\
  axis_variable\
  axis_variable\
  cvt_offset_binary\
  regmux_2_1\
  LFSR_Random_Number_Generator\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set S_AXIS [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {122880000} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {6} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS


  # Create ports
  set TXConfig [ create_bd_port -dir I -from 31 -to 0 TXConfig ]
  set TXDACData [ create_bd_port -dir O -from 15 -to 0 TXDACData ]
  set TXLOTune [ create_bd_port -dir I -from 31 -to 0 TXLOTune ]
  set TXSamplesToRX [ create_bd_port -dir O -from 15 -to 0 TXSamplesToRX ]
  set cic_rate [ create_bd_port -dir I -from 15 -to 0 cic_rate ]
  set clk122 [ create_bd_port -dir I -type clk -freq_hz 122880000 clk122 ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_RESET {resetn1} \
 ] $clk122
  set resetn1 [ create_bd_port -dir I -type rst resetn1 ]
  set sel [ create_bd_port -dir I sel ]

  # Create instance: xlconstant_16x0, and set properties
  set xlconstant_16x0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_16x0 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {0} \
    CONFIG.CONST_WIDTH {16} \
  ] $xlconstant_16x0


  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {19} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {48} \
    CONFIG.DOUT_WIDTH {20} \
  ] $xlslice_2


  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {21} \
    CONFIG.DIN_TO {4} \
    CONFIG.DOUT_WIDTH {18} \
  ] $xlslice_3


  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {16} $D_register_2


  # Create instance: axis_constant_0, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_0
  if { [catch {set axis_constant_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_variable_0, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_0
  if { [catch {set axis_variable_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXIS_TDATA_WIDTH {16} $axis_variable_0


  # Create instance: axis_variable_1, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_1
  if { [catch {set axis_variable_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXIS_TDATA_WIDTH {16} $axis_variable_1


  # Create instance: cvt_offset_binary_0, and set properties
  set block_name cvt_offset_binary
  set block_cell_name cvt_offset_binary_0
  if { [catch {set cvt_offset_binary_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cvt_offset_binary_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {16} $regmux_2_1_0


  # Create instance: axis_broadcaster_cic_path_split, and set properties
  set axis_broadcaster_cic_path_split [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_cic_path_split ]
  set_property -dict [list \
    CONFIG.M00_TDATA_REMAP {tdata[31:0]} \
    CONFIG.M01_TDATA_REMAP {tdata[63:32]} \
    CONFIG.M_TDATA_NUM_BYTES {4} \
    CONFIG.S_TDATA_NUM_BYTES {8} \
  ] $axis_broadcaster_cic_path_split


  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]
  set_property CONFIG.TDATA_NUM_BYTES {4} $axis_combiner_0


  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [list \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.M_TDATA_NUM_BYTES {3} \
    CONFIG.S_TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
  ] $axis_dwidth_converter_0


  # Create instance: axis_dwidth_converter_fir_to_IQ, and set properties
  set axis_dwidth_converter_fir_to_IQ [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_fir_to_IQ ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {8} \
    CONFIG.S_TDATA_NUM_BYTES {4} \
  ] $axis_dwidth_converter_fir_to_IQ


  # Create instance: cic_compiler_0, and set properties
  set cic_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_0 ]
  set_property -dict [list \
    CONFIG.Clock_Frequency {122.88} \
    CONFIG.Fixed_Or_Initial_Rate {80} \
    CONFIG.HAS_ARESETN {true} \
    CONFIG.HAS_DOUT_TREADY {false} \
    CONFIG.Input_Data_Width {27} \
    CONFIG.Input_Sample_Frequency {1.536} \
    CONFIG.Maximum_Rate {320} \
    CONFIG.Minimum_Rate {80} \
    CONFIG.Number_Of_Stages {6} \
    CONFIG.Output_Data_Width {32} \
    CONFIG.Quantization {Truncation} \
    CONFIG.SamplePeriod {80} \
    CONFIG.Sample_Rate_Changes {Programmable} \
    CONFIG.Use_Xtreme_DSP_Slice {false} \
  ] $cic_compiler_0


  # Create instance: cic_compiler_1, and set properties
  set cic_compiler_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_1 ]
  set_property -dict [list \
    CONFIG.Clock_Frequency {122.88} \
    CONFIG.Fixed_Or_Initial_Rate {80} \
    CONFIG.HAS_ARESETN {true} \
    CONFIG.HAS_DOUT_TREADY {false} \
    CONFIG.Input_Data_Width {27} \
    CONFIG.Input_Sample_Frequency {1.536} \
    CONFIG.Maximum_Rate {320} \
    CONFIG.Minimum_Rate {80} \
    CONFIG.Number_Of_Stages {6} \
    CONFIG.Output_Data_Width {32} \
    CONFIG.Quantization {Truncation} \
    CONFIG.SamplePeriod {80} \
    CONFIG.Sample_Rate_Changes {Programmable} \
    CONFIG.Use_Xtreme_DSP_Slice {false} \
  ] $cic_compiler_1


  # Create instance: cmpy_0, and set properties
  set cmpy_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmpy:6.0 cmpy_0 ]
  set_property -dict [list \
    CONFIG.APortWidth {32} \
    CONFIG.BPortWidth {23} \
    CONFIG.FlowControl {NonBlocking} \
    CONFIG.MinimumLatency {9} \
    CONFIG.OutputWidth {24} \
    CONFIG.RoundMode {Truncate} \
  ] $cmpy_0


  # Create instance: dds_compiler_txfreq, and set properties
  set dds_compiler_txfreq [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_txfreq ]
  set_property -dict [list \
    CONFIG.Amplitude_Mode {Full_Range} \
    CONFIG.DATA_Has_TLAST {Not_Required} \
    CONFIG.DDS_Clock_Rate {122.88} \
    CONFIG.DSP48_Use {Minimal} \
    CONFIG.Frequency_Resolution {0.05} \
    CONFIG.Has_ARESETn {true} \
    CONFIG.Has_Phase_Out {false} \
    CONFIG.Latency {10} \
    CONFIG.M_DATA_Has_TUSER {Not_Required} \
    CONFIG.Noise_Shaping {Auto} \
    CONFIG.Output_Frequency1 {0} \
    CONFIG.Output_Width {23} \
    CONFIG.PINC1 {0} \
    CONFIG.Phase_Increment {Streaming} \
    CONFIG.Phase_Width {32} \
    CONFIG.S_PHASE_Has_TUSER {Not_Required} \
    CONFIG.Spurious_Free_Dynamic_Range {130} \
  ] $dds_compiler_txfreq


  # Create instance: fir_compiler_0, and set properties
  set fir_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 fir_compiler_0 ]
  set_property -dict [list \
    CONFIG.BestPrecision {true} \
    CONFIG.Clock_Frequency {122.88} \
    CONFIG.CoefficientSource {COE_File} \
    CONFIG.Coefficient_File {c:/xilinxdesigns/Saturn/FPGA/sources/coefficientfiles/tx1024cfirImpulse.coe} \
    CONFIG.Coefficient_Fractional_Bits {24} \
    CONFIG.Coefficient_Sets {1} \
    CONFIG.Coefficient_Sign {Signed} \
    CONFIG.Coefficient_Structure {Inferred} \
    CONFIG.Coefficient_Width {22} \
    CONFIG.ColumnConfig {2} \
    CONFIG.DATA_Has_TLAST {Not_Required} \
    CONFIG.Data_Fractional_Bits {0} \
    CONFIG.Data_Width {24} \
    CONFIG.Decimation_Rate {1} \
    CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
    CONFIG.Filter_Type {Interpolation} \
    CONFIG.Has_ARESETn {true} \
    CONFIG.Interpolation_Rate {8} \
    CONFIG.M_DATA_Has_TREADY {true} \
    CONFIG.M_DATA_Has_TUSER {Not_Required} \
    CONFIG.Number_Channels {2} \
    CONFIG.Output_Rounding_Mode {Non_Symmetric_Rounding_Down} \
    CONFIG.Output_Width {27} \
    CONFIG.Quantization {Quantize_Only} \
    CONFIG.RateSpecification {Frequency_Specification} \
    CONFIG.S_DATA_Has_TUSER {Not_Required} \
    CONFIG.Sample_Frequency {0.192} \
    CONFIG.Select_Pattern {All} \
    CONFIG.Zero_Pack_Factor {1} \
  ] $fir_compiler_0


  # Create instance: mult_gen_0, and set properties
  set mult_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mult_gen:12.0 mult_gen_0 ]
  set_property -dict [list \
    CONFIG.MultType {Parallel_Multiplier} \
    CONFIG.Multiplier_Construction {Use_Mults} \
    CONFIG.OptGoal {Speed} \
    CONFIG.OutputWidthHigh {32} \
    CONFIG.OutputWidthLow {17} \
    CONFIG.PipeStages {4} \
    CONFIG.PortAWidth {20} \
    CONFIG.PortBType {Unsigned} \
    CONFIG.Use_Custom_Output_Width {true} \
  ] $mult_gen_0


  # Create instance: LFSR_Random_Number_G_0, and set properties
  set block_name LFSR_Random_Number_Generator
  set block_cell_name LFSR_Random_Number_G_0
  if { [catch {set LFSR_Random_Number_G_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $LFSR_Random_Number_G_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_1 [get_bd_intf_ports S_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_broadcaster_cic_path_split/M00_AXIS] [get_bd_intf_pins cic_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins axis_broadcaster_cic_path_split/M01_AXIS] [get_bd_intf_pins cic_compiler_1/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins axis_combiner_0/M_AXIS] [get_bd_intf_pins cmpy_0/S_AXIS_A]
  connect_bd_intf_net -intf_net axis_constant_0_m_axis [get_bd_intf_pins axis_constant_0/m_axis] [get_bd_intf_pins dds_compiler_txfreq/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS] [get_bd_intf_pins fir_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_dwidth_converter_fir_to_IQ_M_AXIS [get_bd_intf_pins axis_broadcaster_cic_path_split/S_AXIS] [get_bd_intf_pins axis_dwidth_converter_fir_to_IQ/M_AXIS]
  connect_bd_intf_net -intf_net axis_variable_0_m_axis [get_bd_intf_pins axis_variable_0/m_axis] [get_bd_intf_pins cic_compiler_0/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net axis_variable_1_m_axis [get_bd_intf_pins axis_variable_1/m_axis] [get_bd_intf_pins cic_compiler_1/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net cic_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_combiner_0/S00_AXIS] [get_bd_intf_pins cic_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net cic_compiler_1_M_AXIS_DATA [get_bd_intf_pins axis_combiner_0/S01_AXIS] [get_bd_intf_pins cic_compiler_1/M_AXIS_DATA]
  connect_bd_intf_net -intf_net dds_compiler_txfreq_M_AXIS_DATA [get_bd_intf_pins cmpy_0/S_AXIS_B] [get_bd_intf_pins dds_compiler_txfreq/M_AXIS_DATA]
  connect_bd_intf_net -intf_net fir_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_dwidth_converter_fir_to_IQ/S_AXIS] [get_bd_intf_pins fir_compiler_0/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net D_register_2_dout [get_bd_pins D_register_2/dout] [get_bd_ports TXSamplesToRX]
  connect_bd_net -net IQ_Modulation_Select_TX_OPENABLE [get_bd_ports sel] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net Net5 [get_bd_ports clk122] [get_bd_pins D_register_2/aclk] [get_bd_pins axis_constant_0/aclk] [get_bd_pins axis_variable_0/aclk] [get_bd_pins axis_variable_1/aclk] [get_bd_pins cvt_offset_binary_0/clk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins axis_broadcaster_cic_path_split/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_dwidth_converter_fir_to_IQ/aclk] [get_bd_pins cic_compiler_0/aclk] [get_bd_pins cic_compiler_1/aclk] [get_bd_pins cmpy_0/aclk] [get_bd_pins dds_compiler_txfreq/aclk] [get_bd_pins fir_compiler_0/aclk] [get_bd_pins mult_gen_0/CLK] [get_bd_pins LFSR_Random_Number_G_0/aclk]
  connect_bd_net -net TXConfig_1 [get_bd_ports TXConfig] [get_bd_pins xlslice_3/Din]
  connect_bd_net -net TX_LO_Tune_1 [get_bd_ports TXLOTune] [get_bd_pins axis_constant_0/cfg_data]
  connect_bd_net -net cmpy_0_m_axis_dout_tdata [get_bd_pins cmpy_0/m_axis_dout_tdata] [get_bd_pins xlslice_2/Din]
  connect_bd_net -net cvt_offset_binary_0_dout [get_bd_pins cvt_offset_binary_0/dout] [get_bd_ports TXDACData]
  connect_bd_net -net mult_gen_0_P [get_bd_pins mult_gen_0/P] [get_bd_pins D_register_2/din] [get_bd_pins regmux_2_1_0/din1]
  connect_bd_net -net regmux_2_1_0_dout [get_bd_pins regmux_2_1_0/dout] [get_bd_pins cvt_offset_binary_0/din]
  connect_bd_net -net regmux_2_1_1_dout1 [get_bd_ports cic_rate] [get_bd_pins axis_variable_0/cfg_data] [get_bd_pins axis_variable_1/cfg_data]
  connect_bd_net -net resetn_2 [get_bd_ports resetn1] [get_bd_pins D_register_2/resetn] [get_bd_pins axis_variable_0/aresetn] [get_bd_pins axis_variable_1/aresetn] [get_bd_pins regmux_2_1_0/resetn] [get_bd_pins axis_broadcaster_cic_path_split/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_dwidth_converter_fir_to_IQ/aresetn] [get_bd_pins cic_compiler_0/aresetn] [get_bd_pins cic_compiler_1/aresetn] [get_bd_pins dds_compiler_txfreq/aresetn] [get_bd_pins fir_compiler_0/aresetn] [get_bd_pins LFSR_Random_Number_G_0/aresetn]
  connect_bd_net -net xlconstant_16x0_dout [get_bd_pins xlconstant_16x0/dout] [get_bd_pins regmux_2_1_0/din0]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlslice_2/Dout] [get_bd_pins mult_gen_0/A]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlslice_3/Dout] [get_bd_pins mult_gen_0/B]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_TX_DUC()
cr_bd_TX_DUC ""
set_property REGISTERED_WITH_MANAGER "1" [get_files TX_DUC.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files TX_DUC.bd ] 

if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files reg_to_axis.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/reg_to_axis.v
}
if { [get_files regmux_4_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_4_1.v
}
if { [get_files regmux_8_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_8_1.v
}
if { [get_files axis_mux_2.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_mux_2.v
}
if { [get_files byteswap_48bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_48bit.v
}
if { [get_files lfsr.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/lfsr.v
}
if { [get_files ltc2208_derand.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/ltc2208_derand.v
}
if { [get_files ltc2208_derand.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/ltc2208_derand.v
}
if { [get_files d-register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/d-register.v
}
if { [get_files d-register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/d-register.v
}
if { [get_files d-register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/d-register.v
}
if { [get_files d-register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/d-register.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files axi_stream_resizer_64to48.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axi_stream_resizer_64to48.v
}
if { [get_files FIFO_Monitor.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/FIFO_Monitor.v
}
if { [get_files stream_reader_writer.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/stream_reader_writer.v
}
if { [get_files axil_read64_reg.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_read64_reg.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files double_register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/double_register.v
}
if { [get_files usr_reg_access.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/usr_reg_access.v
}
if { [get_files axil_config256_reg.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_config256_reg.v
}
if { [get_files axil_config64_reg.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_config64_reg.v
}
if { [get_files axil_read64_reg.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_read64_reg.v
}
if { [get_files axi_spi_adc.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axi_spi_adc.v
}
if { [get_files axil_SPIWriter.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_SPIWriter.v
}
if { [get_files AXI_FIFO_overflow_latch_reader.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/AXI_FIFO_overflow_latch_reader.v
}
if { [get_files axil_config64_reg.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_config64_reg.v
}
if { [get_files pwm_dac.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/pwm_dac.v
}
if { [get_files Attenuator.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/Attenuator.v
}
if { [get_files Attenuator.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/Attenuator.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files PTTATUGate.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/PTTATUGate.v
}
if { [get_files clockdivider.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/clockdivider.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files debounce.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/debounce.v
}
if { [get_files AXILite_Alex_SPI.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/AXILite_Alex_SPI.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files d-register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/d-register.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_constant.v
}
if { [get_files axil_config256_reg.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_config256_reg.v
}
if { [get_files axil_config256_reg.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axil_config256_reg.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files d-register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/d-register.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files d-register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/d-register.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files d-register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/d-register.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files d-register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/d-register.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files AXI_FIFO_overflow_latch_reader.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/AXI_FIFO_overflow_latch_reader.v
}
if { [get_files DDCMux.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/DDCMux.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files axis_variable.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/axis_variable.v
}
if { [get_files regmux_2_1.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/regmux_2_1.v
}
if { [get_files clockdivider.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/clockdivider.v
}
if { [get_files clockdivider.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/clockdivider.v
}
if { [get_files clock-monitor.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/clock-monitor.v
}
if { [get_files clockdivider.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/clockdivider.v
}
if { [get_files iambic.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/saturn_project/saturn_project.srcs/sources_1/imports/verilogmodules/iambic.v
}
if { [get_files register.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/register.v
}
if { [get_files wideband_collect.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/wideband_collect.v
}
if { [get_files byteswap_64bit.v] == "" } {
  import_files -quiet -fileset sources_1 C:/xilinxdesigns/Saturn/FPGA/sources/verilogmodules/byteswap_64bit.v
}


# Proc to create BD saturn_top
proc cr_bd_saturn_top { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# clock_monitor, Wideband_Collect, byteswap_64, LTC2208_derandomise, LTC2208_derandomise, D_register_norst, D_register_norst, D_register_norst, D_register_norst, AXI_Stream_Reader_Writer, AXI_Stream_Reader_Writer, AXIS_Sizer_64to48, FIFO_Monitor, AXI_Stream_Reader_Writer, AXIL_ReadReg_64, D_register, D_register, Double_D_register, Double_D_register, Usr_Reg_Access, AXIL_ConfigReg_256, AXIL_ConfigReg_64, AXIL_ReadReg_64, AXI_SPI_ADC, AXIL_SPIWriter, AXI_FIFO_overflow_reader, AXIL_ConfigReg_64, AXILite_Alex_SPI, axis_constant, AXIL_ConfigReg_256, AXIL_ConfigReg_256, AXI_FIFO_overflow_reader, AXIS_DDC_Multiplexer, regmux_2_1, ClockDivider, ClockDivider, ClockDivider, iambic, D_register, PWM_DAC, SerialAtten, SerialAtten, regmux_2_1, regmux_2_1, regmux_2_1, regmux_2_1, PTTATUGate, ClockDivider, debounce, debounce, debounce, debounce, debounce, debounce, debounce, debounce, debounce, D_register, D_register, D_register, D_register, D_register_norst, regmux_2_1, D_register, D_register, D_register, D_register, D_register_norst, regmux_2_1, D_register, D_register, D_register, D_register, D_register_norst, regmux_2_1, D_register, D_register, D_register, D_register, D_register_norst, regmux_2_1, D_register, D_register, D_register, D_register, D_register_norst, regmux_2_1, D_register, axis_variable, axis_variable


# The design that will be created by this Tcl proc contains the following 
# block design container source references:
# audio_codec, IQ_Modulation_Select, TX_DUC, DDC_Block



  # CHANGE DESIGN NAME HERE
  set design_name saturn_top

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:axis_data_fifo:2.0\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:selectio_wiz:5.1\
  xilinx.com:ip:util_ds_buf:2.2\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:xadc_wiz:3.3\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:axi_quad_spi:3.2\
  xilinx.com:ip:xdma:4.1\
  xilinx.com:ip:c_addsub:12.0\
  xilinx.com:ip:dds_compiler:6.0\
  xilinx.com:ip:util_reduced_logic:2.0\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:axis_broadcaster:1.1\
  xilinx.com:ip:axis_combiner:1.1\
  xilinx.com:ip:cic_compiler:4.0\
  xilinx.com:ip:cordic:6.0\
  xilinx.com:ip:fir_compiler:7.2\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  clock_monitor\
  Wideband_Collect\
  byteswap_64\
  LTC2208_derandomise\
  LTC2208_derandomise\
  D_register_norst\
  D_register_norst\
  D_register_norst\
  D_register_norst\
  AXI_Stream_Reader_Writer\
  AXI_Stream_Reader_Writer\
  AXIS_Sizer_64to48\
  FIFO_Monitor\
  AXI_Stream_Reader_Writer\
  AXIL_ReadReg_64\
  D_register\
  D_register\
  Double_D_register\
  Double_D_register\
  Usr_Reg_Access\
  AXIL_ConfigReg_256\
  AXIL_ConfigReg_64\
  AXIL_ReadReg_64\
  AXI_SPI_ADC\
  AXIL_SPIWriter\
  AXI_FIFO_overflow_reader\
  AXIL_ConfigReg_64\
  AXILite_Alex_SPI\
  axis_constant\
  AXIL_ConfigReg_256\
  AXIL_ConfigReg_256\
  AXI_FIFO_overflow_reader\
  AXIS_DDC_Multiplexer\
  regmux_2_1\
  ClockDivider\
  ClockDivider\
  ClockDivider\
  iambic\
  D_register\
  PWM_DAC\
  SerialAtten\
  SerialAtten\
  regmux_2_1\
  regmux_2_1\
  regmux_2_1\
  regmux_2_1\
  PTTATUGate\
  ClockDivider\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  debounce\
  D_register\
  D_register\
  D_register\
  D_register\
  D_register_norst\
  regmux_2_1\
  D_register\
  D_register\
  D_register\
  D_register\
  D_register_norst\
  regmux_2_1\
  D_register\
  D_register\
  D_register\
  D_register\
  D_register_norst\
  regmux_2_1\
  D_register\
  D_register\
  D_register\
  D_register\
  D_register_norst\
  regmux_2_1\
  D_register\
  D_register\
  D_register\
  D_register\
  D_register_norst\
  regmux_2_1\
  D_register\
  axis_variable\
  axis_variable\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  ##################################################################
  # CHECK Block Design Container Sources
  ##################################################################
  set bCheckSources 1
  set list_bdc_active "audio_codec, IQ_Modulation_Select, TX_DUC, DDC_Block"

  array set map_bdc_missing {}
  set map_bdc_missing(ACTIVE) ""
  set map_bdc_missing(BDC) ""

  if { $bCheckSources == 1 } {
     set list_check_srcs "\ 
  audio_codec \
  IQ_Modulation_Select \
  TX_DUC \
  DDC_Block \
  "

   common::send_gid_msg -ssname BD::TCL -id 2056 -severity "INFO" "Checking if the following sources for block design container exist in the project: $list_check_srcs .\n\n"

   foreach src $list_check_srcs {
      if { [can_resolve_reference $src] == 0 } {
         if { [lsearch $list_bdc_active $src] != -1 } {
            set map_bdc_missing(ACTIVE) "$map_bdc_missing(ACTIVE) $src"
         } else {
            set map_bdc_missing(BDC) "$map_bdc_missing(BDC) $src"
         }
      }
   }

   if { [llength $map_bdc_missing(ACTIVE)] > 0 } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2057 -severity "ERROR" "The following source(s) of Active variants are not found in the project: $map_bdc_missing(ACTIVE)" }
      common::send_gid_msg -ssname BD::TCL -id 2060 -severity "INFO" "Please add source files for the missing source(s) above."
      set bCheckIPsPassed 0
   }
   if { [llength $map_bdc_missing(BDC)] > 0 } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2059 -severity "WARNING" "The following source(s) of variants are not found in the project: $map_bdc_missing(BDC)" }
      common::send_gid_msg -ssname BD::TCL -id 2060 -severity "INFO" "Please add source files for the missing source(s) above."
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: TX_Envelope
proc create_hier_cell_TX_Envelope { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_TX_Envelope() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS


  # Create pins
  create_bd_pin -dir O -from 15 -to 0 TXMagnitude
  create_bd_pin -dir I -from 15 -to 0 cfg_data
  create_bd_pin -dir I -type clk clk122
  create_bd_pin -dir I -type rst resetn1

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {15} \
    CONFIG.DOUT_WIDTH {16} \
  ] $xlslice_1


  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_variable_0, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_0
  if { [catch {set axis_variable_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXIS_TDATA_WIDTH {16} $axis_variable_0


  # Create instance: axis_variable_1, and set properties
  set block_name axis_variable
  set block_cell_name axis_variable_1
  if { [catch {set axis_variable_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_variable_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXIS_TDATA_WIDTH {16} $axis_variable_1


  # Create instance: axis_broadcaster_cic_path_split, and set properties
  set axis_broadcaster_cic_path_split [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_cic_path_split ]
  set_property -dict [list \
    CONFIG.M00_TDATA_REMAP {tdata[23:0]} \
    CONFIG.M01_TDATA_REMAP {tdata[47:24]} \
    CONFIG.M_TDATA_NUM_BYTES {3} \
    CONFIG.S_TDATA_NUM_BYTES {6} \
  ] $axis_broadcaster_cic_path_split


  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]
  set_property CONFIG.TDATA_NUM_BYTES {3} $axis_combiner_0


  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [list \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.M_TDATA_NUM_BYTES {3} \
    CONFIG.S_TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
  ] $axis_dwidth_converter_0


  # Create instance: axis_dwidth_converter_fir_to_IQ, and set properties
  set axis_dwidth_converter_fir_to_IQ [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_fir_to_IQ ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {6} \
    CONFIG.S_TDATA_NUM_BYTES {3} \
  ] $axis_dwidth_converter_fir_to_IQ


  # Create instance: cic_compiler_0, and set properties
  set cic_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_0 ]
  set_property -dict [list \
    CONFIG.Clock_Frequency {122.88} \
    CONFIG.Fixed_Or_Initial_Rate {80} \
    CONFIG.HAS_ARESETN {true} \
    CONFIG.HAS_DOUT_TREADY {false} \
    CONFIG.Input_Data_Width {24} \
    CONFIG.Input_Sample_Frequency {1.536} \
    CONFIG.Maximum_Rate {320} \
    CONFIG.Minimum_Rate {80} \
    CONFIG.Number_Of_Stages {6} \
    CONFIG.Output_Data_Width {24} \
    CONFIG.Quantization {Truncation} \
    CONFIG.SamplePeriod {80} \
    CONFIG.Sample_Rate_Changes {Programmable} \
    CONFIG.Use_Xtreme_DSP_Slice {false} \
  ] $cic_compiler_0


  # Create instance: cic_compiler_1, and set properties
  set cic_compiler_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_1 ]
  set_property -dict [list \
    CONFIG.Clock_Frequency {122.88} \
    CONFIG.Fixed_Or_Initial_Rate {80} \
    CONFIG.HAS_ARESETN {true} \
    CONFIG.HAS_DOUT_TREADY {false} \
    CONFIG.Input_Data_Width {24} \
    CONFIG.Input_Sample_Frequency {1.536} \
    CONFIG.Maximum_Rate {320} \
    CONFIG.Minimum_Rate {80} \
    CONFIG.Number_Of_Stages {6} \
    CONFIG.Output_Data_Width {24} \
    CONFIG.Quantization {Truncation} \
    CONFIG.SamplePeriod {80} \
    CONFIG.Sample_Rate_Changes {Programmable} \
    CONFIG.Use_Xtreme_DSP_Slice {false} \
  ] $cic_compiler_1


  # Create instance: cordic_0, and set properties
  set cordic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cordic:6.0 cordic_0 ]
  set_property -dict [list \
    CONFIG.Compensation_Scaling {No_Scale_Compensation} \
    CONFIG.Data_Format {SignedFraction} \
    CONFIG.Functional_Selection {Translate} \
    CONFIG.Input_Width {23} \
    CONFIG.Output_Width {16} \
    CONFIG.flow_control {NonBlocking} \
  ] $cordic_0


  # Create instance: fir_compiler_0, and set properties
  set fir_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 fir_compiler_0 ]
  set_property -dict [list \
    CONFIG.BestPrecision {true} \
    CONFIG.Clock_Frequency {122.88} \
    CONFIG.CoefficientSource {COE_File} \
    CONFIG.Coefficient_File {c:/xilinxdesigns/Saturn/FPGA/sources/coefficientfiles/tx1024cfirImpulse.coe} \
    CONFIG.Coefficient_Fractional_Bits {24} \
    CONFIG.Coefficient_Sets {1} \
    CONFIG.Coefficient_Sign {Signed} \
    CONFIG.Coefficient_Structure {Inferred} \
    CONFIG.Coefficient_Width {22} \
    CONFIG.ColumnConfig {2} \
    CONFIG.DATA_Has_TLAST {Not_Required} \
    CONFIG.Data_Fractional_Bits {0} \
    CONFIG.Data_Width {24} \
    CONFIG.Decimation_Rate {1} \
    CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
    CONFIG.Filter_Type {Interpolation} \
    CONFIG.Has_ARESETn {true} \
    CONFIG.Interpolation_Rate {8} \
    CONFIG.M_DATA_Has_TREADY {true} \
    CONFIG.M_DATA_Has_TUSER {Not_Required} \
    CONFIG.Number_Channels {2} \
    CONFIG.Output_Rounding_Mode {Truncate_LSBs} \
    CONFIG.Output_Width {24} \
    CONFIG.Quantization {Quantize_Only} \
    CONFIG.RateSpecification {Frequency_Specification} \
    CONFIG.S_DATA_Has_TUSER {Not_Required} \
    CONFIG.Sample_Frequency {0.192} \
    CONFIG.Select_Pattern {All} \
    CONFIG.Zero_Pack_Factor {1} \
  ] $fir_compiler_0


  # Create interface connections
  connect_bd_intf_net -intf_net IQ_Modulation_Select_m_axis_envelope [get_bd_intf_pins S_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_broadcaster_cic_path_split/M00_AXIS] [get_bd_intf_pins cic_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins axis_combiner_0/M_AXIS] [get_bd_intf_pins cordic_0/S_AXIS_CARTESIAN]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS] [get_bd_intf_pins fir_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_dwidth_converter_fir_to_IQ_M_AXIS [get_bd_intf_pins axis_broadcaster_cic_path_split/S_AXIS] [get_bd_intf_pins axis_dwidth_converter_fir_to_IQ/M_AXIS]
  connect_bd_intf_net -intf_net axis_variable_0_m_axis [get_bd_intf_pins axis_variable_0/m_axis] [get_bd_intf_pins cic_compiler_0/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net axis_variable_1_m_axis [get_bd_intf_pins axis_variable_1/m_axis] [get_bd_intf_pins cic_compiler_1/S_AXIS_CONFIG]
  connect_bd_intf_net -intf_net cic_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_combiner_0/S00_AXIS] [get_bd_intf_pins cic_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net cic_compiler_1_M_AXIS_DATA [get_bd_intf_pins axis_combiner_0/S01_AXIS] [get_bd_intf_pins cic_compiler_1/M_AXIS_DATA]
  connect_bd_intf_net -intf_net fir_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_dwidth_converter_fir_to_IQ/S_AXIS] [get_bd_intf_pins fir_compiler_0/M_AXIS_DATA]

  # Create port connections
  connect_bd_net -net D_register_1_dout [get_bd_pins D_register_1/dout] [get_bd_pins TXMagnitude]
  connect_bd_net -net Net5 [get_bd_pins clk122] [get_bd_pins D_register_1/aclk] [get_bd_pins axis_variable_0/aclk] [get_bd_pins axis_variable_1/aclk] [get_bd_pins axis_broadcaster_cic_path_split/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_dwidth_converter_fir_to_IQ/aclk] [get_bd_pins cic_compiler_0/aclk] [get_bd_pins cic_compiler_1/aclk] [get_bd_pins cordic_0/aclk] [get_bd_pins fir_compiler_0/aclk]
  connect_bd_net -net cordic_0_m_axis_dout_tdata [get_bd_pins cordic_0/m_axis_dout_tdata] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net regmux_2_1_1_dout1 [get_bd_pins cfg_data] [get_bd_pins axis_variable_0/cfg_data] [get_bd_pins axis_variable_1/cfg_data]
  connect_bd_net -net resetn_2 [get_bd_pins resetn1] [get_bd_pins D_register_1/resetn] [get_bd_pins axis_variable_0/aresetn] [get_bd_pins axis_variable_1/aresetn] [get_bd_pins axis_broadcaster_cic_path_split/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_dwidth_converter_fir_to_IQ/aresetn] [get_bd_pins cic_compiler_0/aresetn] [get_bd_pins cic_compiler_1/aresetn] [get_bd_pins fir_compiler_0/aresetn]
  connect_bd_net -net xlslice_1_Dout1 [get_bd_pins xlslice_1/Dout] [get_bd_pins D_register_1/din]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dualDDC76
proc create_hier_cell_dualDDC76 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dualDDC76() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_1


  # Create pins
  create_bd_pin -dir I -from 15 -to 0 ADC1
  create_bd_pin -dir I -from 15 -to 0 ADC2
  create_bd_pin -dir O DDC0_ovr
  create_bd_pin -dir O DDC1_ovr
  create_bd_pin -dir I -from 31 -to 0 DDCAFreq
  create_bd_pin -dir I -from 31 -to 0 DDCBFreq
  create_bd_pin -dir I -from 5 -to 0 DualDDCRate
  create_bd_pin -dir I InputFIFO_rstn
  create_bd_pin -dir I -from 15 -to 0 RX_Test
  create_bd_pin -dir I -from 15 -to 0 TX_samples
  create_bd_pin -dir I aclk
  create_bd_pin -dir I aresetn
  create_bd_pin -dir I -from 3 -to 0 DualDDCConfig
  create_bd_pin -dir I Byteswap

  # Create instance: DDC_Block_0, and set properties
  set DDC_Block_0 [ create_bd_cell -type container -reference DDC_Block DDC_Block_0 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
    CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {DDC_Block.bd} \
    CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $DDC_Block_0


  # Create instance: DDC_Block_1, and set properties
  set DDC_Block_1 [ create_bd_cell -type container -reference DDC_Block DDC_Block_1 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
    CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {DDC_Block.bd} \
    CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $DDC_Block_1


  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_3, and set properties
  set block_name D_register
  set block_cell_name D_register_3
  if { [catch {set D_register_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_Arate, and set properties
  set xlslice_Arate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Arate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {6} \
    CONFIG.DOUT_WIDTH {3} \
  ] $xlslice_Arate


  # Create instance: xlslice_Asource, and set properties
  set xlslice_Asource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Asource ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_WIDTH {4} \
    CONFIG.DOUT_WIDTH {2} \
  ] $xlslice_Asource


  # Create instance: xlslice_Brate, and set properties
  set xlslice_Brate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Brate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {5} \
    CONFIG.DIN_TO {3} \
    CONFIG.DIN_WIDTH {6} \
    CONFIG.DOUT_WIDTH {3} \
  ] $xlslice_Brate


  # Create instance: xlslice_Bsource, and set properties
  set xlslice_Bsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Bsource ]
  set_property -dict [list \
    CONFIG.DIN_FROM {3} \
    CONFIG.DIN_TO {2} \
    CONFIG.DIN_WIDTH {4} \
    CONFIG.DOUT_WIDTH {2} \
  ] $xlslice_Bsource


  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property CONFIG.C_SIZE {3} $util_reduced_logic_0


  # Create instance: D_register_norst_0, and set properties
  set block_name D_register_norst
  set block_cell_name D_register_norst_0
  if { [catch {set D_register_norst_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_norst_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {3} $D_register_norst_0


  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {3} $regmux_2_1_0


  # Create instance: axis_data_fifo_0, and set properties
  set axis_data_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_0 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {128} \
    CONFIG.HAS_AFULL {1} \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
    CONFIG.TUSER_WIDTH {0} \
  ] $axis_data_fifo_0


  # Create instance: axis_data_fifo_1, and set properties
  set axis_data_fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_1 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {128} \
    CONFIG.HAS_AFULL {1} \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
    CONFIG.TUSER_WIDTH {0} \
  ] $axis_data_fifo_1


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {0} \
    CONFIG.CONST_WIDTH {32} \
  ] $xlconstant_1


  # Create interface connections
  connect_bd_intf_net -intf_net DDC_Block_0_LOIQOut [get_bd_intf_pins DDC_Block_0/LOIQOut] [get_bd_intf_pins DDC_Block_1/LOIQIn]
  connect_bd_intf_net -intf_net DDC_Block_0_M_AXIS_DATA [get_bd_intf_pins DDC_Block_0/M_AXIS_DATA] [get_bd_intf_pins axis_data_fifo_0/S_AXIS]
  connect_bd_intf_net -intf_net DDC_Block_1_M_AXIS_DATA [get_bd_intf_pins DDC_Block_1/M_AXIS_DATA] [get_bd_intf_pins axis_data_fifo_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_pins m_axis_0] [get_bd_intf_pins axis_data_fifo_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_1_M_AXIS [get_bd_intf_pins m_axis_1] [get_bd_intf_pins axis_data_fifo_1/M_AXIS]

  # Create port connections
  connect_bd_net -net ADC1_1 [get_bd_pins ADC1] [get_bd_pins D_register_0/din]
  connect_bd_net -net ADC2_1 [get_bd_pins ADC2] [get_bd_pins D_register_1/din]
  connect_bd_net -net Byteswap_1 [get_bd_pins Byteswap] [get_bd_pins DDC_Block_0/Byteswap] [get_bd_pins DDC_Block_1/Byteswap]
  connect_bd_net -net CicInterp_1 [get_bd_pins regmux_2_1_0/dout] [get_bd_pins DDC_Block_0/CicInterp]
  connect_bd_net -net DDCAFreq_1 [get_bd_pins DDCAFreq] [get_bd_pins DDC_Block_0/ChanFreq]
  connect_bd_net -net DDCBFreq_1 [get_bd_pins DDCBFreq] [get_bd_pins DDC_Block_1/ChanFreq]
  connect_bd_net -net D_register_norst_0_dout [get_bd_pins D_register_norst_0/dout] [get_bd_pins DDC_Block_1/CicInterp]
  connect_bd_net -net InputFIFO_rstn_1 [get_bd_pins InputFIFO_rstn] [get_bd_pins axis_data_fifo_0/s_axis_aresetn] [get_bd_pins axis_data_fifo_1/s_axis_aresetn]
  connect_bd_net -net LOIQSel_1 [get_bd_pins xlconstant_0/dout] [get_bd_pins DDC_Block_0/LOIQSel] [get_bd_pins DDC_Block_0/LOIQIn_tvalid]
  connect_bd_net -net Net [get_bd_pins aclk] [get_bd_pins DDC_Block_1/aclk] [get_bd_pins DDC_Block_0/aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins D_register_3/aclk] [get_bd_pins D_register_norst_0/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins axis_data_fifo_0/s_axis_aclk] [get_bd_pins axis_data_fifo_1/s_axis_aclk]
  connect_bd_net -net Net1 [get_bd_pins aresetn] [get_bd_pins D_register_3/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_0/resetn] [get_bd_pins DDC_Block_0/rstn] [get_bd_pins DDC_Block_1/rstn] [get_bd_pins regmux_2_1_0/resetn]
  connect_bd_net -net Net2 [get_bd_pins DualDDCRate] [get_bd_pins xlslice_Arate/Din] [get_bd_pins xlslice_Brate/Din]
  connect_bd_net -net Net3 [get_bd_pins DualDDCConfig] [get_bd_pins xlslice_Asource/Din] [get_bd_pins xlslice_Bsource/Din]
  connect_bd_net -net RX_Test_1 [get_bd_pins RX_Test] [get_bd_pins D_register_3/din]
  connect_bd_net -net TX_samples_1 [get_bd_pins TX_samples] [get_bd_pins D_register_2/din]
  connect_bd_net -net adc1_2 [get_bd_pins D_register_0/dout] [get_bd_pins DDC_Block_0/adc1] [get_bd_pins DDC_Block_1/adc1]
  connect_bd_net -net adc2_2 [get_bd_pins D_register_1/dout] [get_bd_pins DDC_Block_1/adc2] [get_bd_pins DDC_Block_0/adc2]
  connect_bd_net -net axis_data_fifo_0_almost_full [get_bd_pins axis_data_fifo_0/almost_full] [get_bd_pins DDC0_ovr]
  connect_bd_net -net axis_data_fifo_1_almost_full [get_bd_pins axis_data_fifo_1/almost_full] [get_bd_pins DDC1_ovr]
  connect_bd_net -net test_source_1 [get_bd_pins D_register_3/dout] [get_bd_pins DDC_Block_0/test_source] [get_bd_pins DDC_Block_1/test_source]
  connect_bd_net -net tx_samples_2 [get_bd_pins D_register_2/dout] [get_bd_pins DDC_Block_0/tx_samples] [get_bd_pins DDC_Block_1/tx_samples]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins util_reduced_logic_0/Res] [get_bd_pins DDC_Block_1/LOIQSel] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins xlconstant_1/dout] [get_bd_pins DDC_Block_0/LOIQIn_tdata]
  connect_bd_net -net xlslice_Arate_Dout [get_bd_pins xlslice_Arate/Dout] [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins regmux_2_1_0/din0]
  connect_bd_net -net xlslice_Asource_Dout [get_bd_pins xlslice_Asource/Dout] [get_bd_pins DDC_Block_0/ChanConfig]
  connect_bd_net -net xlslice_Brate_Dout [get_bd_pins xlslice_Brate/Dout] [get_bd_pins D_register_norst_0/din] [get_bd_pins regmux_2_1_0/din1]
  connect_bd_net -net xlslice_Bsource_Dout [get_bd_pins xlslice_Bsource/Dout] [get_bd_pins DDC_Block_1/ChanConfig]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dualDDC54
proc create_hier_cell_dualDDC54 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dualDDC54() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_1


  # Create pins
  create_bd_pin -dir I -from 15 -to 0 ADC1
  create_bd_pin -dir I -from 15 -to 0 ADC2
  create_bd_pin -dir O DDC0_ovr
  create_bd_pin -dir O DDC1_ovr
  create_bd_pin -dir I -from 31 -to 0 DDCAFreq
  create_bd_pin -dir I -from 31 -to 0 DDCBFreq
  create_bd_pin -dir I -from 5 -to 0 DualDDCRate
  create_bd_pin -dir I InputFIFO_rstn
  create_bd_pin -dir I -from 15 -to 0 RX_Test
  create_bd_pin -dir I -from 15 -to 0 TX_samples
  create_bd_pin -dir I aclk
  create_bd_pin -dir I aresetn
  create_bd_pin -dir I -from 3 -to 0 DualDDCConfig
  create_bd_pin -dir I Byteswap

  # Create instance: DDC_Block_0, and set properties
  set DDC_Block_0 [ create_bd_cell -type container -reference DDC_Block DDC_Block_0 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
    CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {DDC_Block.bd} \
    CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $DDC_Block_0


  # Create instance: DDC_Block_1, and set properties
  set DDC_Block_1 [ create_bd_cell -type container -reference DDC_Block DDC_Block_1 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
    CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {DDC_Block.bd} \
    CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $DDC_Block_1


  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_3, and set properties
  set block_name D_register
  set block_cell_name D_register_3
  if { [catch {set D_register_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_Arate, and set properties
  set xlslice_Arate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Arate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {6} \
    CONFIG.DOUT_WIDTH {3} \
  ] $xlslice_Arate


  # Create instance: xlslice_Asource, and set properties
  set xlslice_Asource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Asource ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_WIDTH {4} \
    CONFIG.DOUT_WIDTH {2} \
  ] $xlslice_Asource


  # Create instance: xlslice_Brate, and set properties
  set xlslice_Brate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Brate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {5} \
    CONFIG.DIN_TO {3} \
    CONFIG.DIN_WIDTH {6} \
    CONFIG.DOUT_WIDTH {3} \
  ] $xlslice_Brate


  # Create instance: xlslice_Bsource, and set properties
  set xlslice_Bsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Bsource ]
  set_property -dict [list \
    CONFIG.DIN_FROM {3} \
    CONFIG.DIN_TO {2} \
    CONFIG.DIN_WIDTH {4} \
    CONFIG.DOUT_WIDTH {2} \
  ] $xlslice_Bsource


  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property CONFIG.C_SIZE {3} $util_reduced_logic_0


  # Create instance: D_register_norst_0, and set properties
  set block_name D_register_norst
  set block_cell_name D_register_norst_0
  if { [catch {set D_register_norst_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_norst_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {3} $D_register_norst_0


  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {3} $regmux_2_1_0


  # Create instance: axis_data_fifo_0, and set properties
  set axis_data_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_0 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {128} \
    CONFIG.HAS_AFULL {1} \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
    CONFIG.TUSER_WIDTH {0} \
  ] $axis_data_fifo_0


  # Create instance: axis_data_fifo_1, and set properties
  set axis_data_fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_1 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {128} \
    CONFIG.HAS_AFULL {1} \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
    CONFIG.TUSER_WIDTH {0} \
  ] $axis_data_fifo_1


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {0} \
    CONFIG.CONST_WIDTH {32} \
  ] $xlconstant_1


  # Create interface connections
  connect_bd_intf_net -intf_net DDC_Block_0_LOIQOut [get_bd_intf_pins DDC_Block_0/LOIQOut] [get_bd_intf_pins DDC_Block_1/LOIQIn]
  connect_bd_intf_net -intf_net DDC_Block_0_M_AXIS_DATA [get_bd_intf_pins DDC_Block_0/M_AXIS_DATA] [get_bd_intf_pins axis_data_fifo_0/S_AXIS]
  connect_bd_intf_net -intf_net DDC_Block_1_M_AXIS_DATA [get_bd_intf_pins DDC_Block_1/M_AXIS_DATA] [get_bd_intf_pins axis_data_fifo_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_pins m_axis_0] [get_bd_intf_pins axis_data_fifo_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_1_M_AXIS [get_bd_intf_pins m_axis_1] [get_bd_intf_pins axis_data_fifo_1/M_AXIS]

  # Create port connections
  connect_bd_net -net ADC1_1 [get_bd_pins ADC1] [get_bd_pins D_register_0/din]
  connect_bd_net -net ADC2_1 [get_bd_pins ADC2] [get_bd_pins D_register_1/din]
  connect_bd_net -net Byteswap_1 [get_bd_pins Byteswap] [get_bd_pins DDC_Block_1/Byteswap] [get_bd_pins DDC_Block_0/Byteswap]
  connect_bd_net -net CicInterp_1 [get_bd_pins xlslice_Arate/Dout] [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins regmux_2_1_0/din0]
  connect_bd_net -net CicInterp_2 [get_bd_pins regmux_2_1_0/dout] [get_bd_pins DDC_Block_0/CicInterp]
  connect_bd_net -net DDCAFreq_1 [get_bd_pins DDCAFreq] [get_bd_pins DDC_Block_0/ChanFreq]
  connect_bd_net -net DDCBFreq_1 [get_bd_pins DDCBFreq] [get_bd_pins DDC_Block_1/ChanFreq]
  connect_bd_net -net D_register_norst_0_dout [get_bd_pins D_register_norst_0/dout] [get_bd_pins DDC_Block_1/CicInterp]
  connect_bd_net -net Net [get_bd_pins DualDDCRate] [get_bd_pins xlslice_Arate/Din] [get_bd_pins xlslice_Brate/Din]
  connect_bd_net -net Net1 [get_bd_pins DualDDCConfig] [get_bd_pins xlslice_Asource/Din] [get_bd_pins xlslice_Bsource/Din]
  connect_bd_net -net Net2 [get_bd_pins aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins D_register_3/aclk] [get_bd_pins DDC_Block_1/aclk] [get_bd_pins DDC_Block_0/aclk] [get_bd_pins D_register_norst_0/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins axis_data_fifo_0/s_axis_aclk] [get_bd_pins axis_data_fifo_1/s_axis_aclk]
  connect_bd_net -net Net3 [get_bd_pins InputFIFO_rstn] [get_bd_pins axis_data_fifo_0/s_axis_aresetn] [get_bd_pins axis_data_fifo_1/s_axis_aresetn]
  connect_bd_net -net RX_Test_1 [get_bd_pins RX_Test] [get_bd_pins D_register_3/din]
  connect_bd_net -net TX_samples_1 [get_bd_pins TX_samples] [get_bd_pins D_register_2/din]
  connect_bd_net -net adc1_2 [get_bd_pins D_register_0/dout] [get_bd_pins DDC_Block_0/adc1] [get_bd_pins DDC_Block_1/adc1]
  connect_bd_net -net adc2_2 [get_bd_pins D_register_1/dout] [get_bd_pins DDC_Block_0/adc2] [get_bd_pins DDC_Block_1/adc2]
  connect_bd_net -net aresetn_1 [get_bd_pins aresetn] [get_bd_pins D_register_3/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_0/resetn] [get_bd_pins DDC_Block_0/rstn] [get_bd_pins DDC_Block_1/rstn] [get_bd_pins regmux_2_1_0/resetn]
  connect_bd_net -net axis_data_fifo_0_almost_full [get_bd_pins axis_data_fifo_0/almost_full] [get_bd_pins DDC0_ovr]
  connect_bd_net -net axis_data_fifo_1_almost_full [get_bd_pins axis_data_fifo_1/almost_full] [get_bd_pins DDC1_ovr]
  connect_bd_net -net test_source_1 [get_bd_pins D_register_3/dout] [get_bd_pins DDC_Block_1/test_source] [get_bd_pins DDC_Block_0/test_source]
  connect_bd_net -net tx_samples_2 [get_bd_pins D_register_2/dout] [get_bd_pins DDC_Block_0/tx_samples] [get_bd_pins DDC_Block_1/tx_samples]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins util_reduced_logic_0/Res] [get_bd_pins DDC_Block_1/LOIQSel] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconstant_0/dout] [get_bd_pins DDC_Block_0/LOIQIn_tvalid] [get_bd_pins DDC_Block_0/LOIQSel]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins xlconstant_1/dout] [get_bd_pins DDC_Block_0/LOIQIn_tdata]
  connect_bd_net -net xlslice_Asource_Dout [get_bd_pins xlslice_Asource/Dout] [get_bd_pins DDC_Block_0/ChanConfig]
  connect_bd_net -net xlslice_Brate_Dout [get_bd_pins xlslice_Brate/Dout] [get_bd_pins D_register_norst_0/din] [get_bd_pins regmux_2_1_0/din1]
  connect_bd_net -net xlslice_Bsource_Dout [get_bd_pins xlslice_Bsource/Dout] [get_bd_pins DDC_Block_1/ChanConfig]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dualDDC32
proc create_hier_cell_dualDDC32 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dualDDC32() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_1


  # Create pins
  create_bd_pin -dir I -from 15 -to 0 ADC1
  create_bd_pin -dir I -from 15 -to 0 ADC2
  create_bd_pin -dir O DDC0_ovr
  create_bd_pin -dir O DDC1_ovr
  create_bd_pin -dir I -from 31 -to 0 DDCAFreq
  create_bd_pin -dir I -from 31 -to 0 DDCBFreq
  create_bd_pin -dir I InputFIFO_rstn
  create_bd_pin -dir I -from 15 -to 0 RX_Test
  create_bd_pin -dir I -from 15 -to 0 TX_samples
  create_bd_pin -dir I aclk
  create_bd_pin -dir I aresetn
  create_bd_pin -dir I -from 5 -to 0 DualDDCRate
  create_bd_pin -dir I -from 3 -to 0 DualDDCConfig
  create_bd_pin -dir I Byteswap

  # Create instance: DDC_Block_0, and set properties
  set DDC_Block_0 [ create_bd_cell -type container -reference DDC_Block DDC_Block_0 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
    CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {DDC_Block.bd} \
    CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $DDC_Block_0


  # Create instance: DDC_Block_1, and set properties
  set DDC_Block_1 [ create_bd_cell -type container -reference DDC_Block DDC_Block_1 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
    CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {DDC_Block.bd} \
    CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $DDC_Block_1


  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_3, and set properties
  set block_name D_register
  set block_cell_name D_register_3
  if { [catch {set D_register_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_Arate, and set properties
  set xlslice_Arate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Arate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {6} \
    CONFIG.DOUT_WIDTH {3} \
  ] $xlslice_Arate


  # Create instance: xlslice_Asource, and set properties
  set xlslice_Asource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Asource ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_WIDTH {4} \
    CONFIG.DOUT_WIDTH {2} \
  ] $xlslice_Asource


  # Create instance: xlslice_Brate, and set properties
  set xlslice_Brate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Brate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {5} \
    CONFIG.DIN_TO {3} \
    CONFIG.DIN_WIDTH {6} \
    CONFIG.DOUT_WIDTH {3} \
  ] $xlslice_Brate


  # Create instance: xlslice_Bsource, and set properties
  set xlslice_Bsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Bsource ]
  set_property -dict [list \
    CONFIG.DIN_FROM {3} \
    CONFIG.DIN_TO {2} \
    CONFIG.DIN_WIDTH {4} \
    CONFIG.DOUT_WIDTH {2} \
  ] $xlslice_Bsource


  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property CONFIG.C_SIZE {3} $util_reduced_logic_0


  # Create instance: D_register_norst_0, and set properties
  set block_name D_register_norst
  set block_cell_name D_register_norst_0
  if { [catch {set D_register_norst_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_norst_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {3} $D_register_norst_0


  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {3} $regmux_2_1_0


  # Create instance: axis_data_fifo_0, and set properties
  set axis_data_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_0 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {128} \
    CONFIG.HAS_AFULL {1} \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
    CONFIG.TUSER_WIDTH {0} \
  ] $axis_data_fifo_0


  # Create instance: axis_data_fifo_1, and set properties
  set axis_data_fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_1 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {128} \
    CONFIG.HAS_AFULL {1} \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
    CONFIG.TUSER_WIDTH {0} \
  ] $axis_data_fifo_1


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {0} \
    CONFIG.CONST_WIDTH {32} \
  ] $xlconstant_1


  # Create interface connections
  connect_bd_intf_net -intf_net DDC_Block_0_LOIQOut1 [get_bd_intf_pins DDC_Block_0/LOIQOut] [get_bd_intf_pins DDC_Block_1/LOIQIn]
  connect_bd_intf_net -intf_net DDC_Block_0_M_AXIS_DATA [get_bd_intf_pins axis_data_fifo_0/S_AXIS] [get_bd_intf_pins DDC_Block_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net DDC_Block_1_M_AXIS_DATA [get_bd_intf_pins axis_data_fifo_1/S_AXIS] [get_bd_intf_pins DDC_Block_1/M_AXIS_DATA]
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_pins m_axis_0] [get_bd_intf_pins axis_data_fifo_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_1_M_AXIS [get_bd_intf_pins m_axis_1] [get_bd_intf_pins axis_data_fifo_1/M_AXIS]

  # Create port connections
  connect_bd_net -net Byteswap_1 [get_bd_pins Byteswap] [get_bd_pins DDC_Block_1/Byteswap] [get_bd_pins DDC_Block_0/Byteswap]
  connect_bd_net -net CicInterp_1 [get_bd_pins regmux_2_1_0/dout] [get_bd_pins DDC_Block_0/CicInterp]
  connect_bd_net -net DDCAFreq_1 [get_bd_pins DDCAFreq] [get_bd_pins DDC_Block_0/ChanFreq]
  connect_bd_net -net DDCBFreq_1 [get_bd_pins DDCBFreq] [get_bd_pins DDC_Block_1/ChanFreq]
  connect_bd_net -net D_register_0_dout [get_bd_pins D_register_0/dout] [get_bd_pins DDC_Block_0/adc1] [get_bd_pins DDC_Block_1/adc1]
  connect_bd_net -net D_register_1_dout [get_bd_pins D_register_1/dout] [get_bd_pins DDC_Block_0/adc2] [get_bd_pins DDC_Block_1/adc2]
  connect_bd_net -net D_register_2_dout [get_bd_pins D_register_2/dout] [get_bd_pins DDC_Block_1/tx_samples] [get_bd_pins DDC_Block_0/tx_samples]
  connect_bd_net -net D_register_norst_0_dout [get_bd_pins D_register_norst_0/dout] [get_bd_pins DDC_Block_1/CicInterp]
  connect_bd_net -net DualDDCRate_1 [get_bd_pins DualDDCRate] [get_bd_pins xlslice_Arate/Din] [get_bd_pins xlslice_Brate/Din]
  connect_bd_net -net Net [get_bd_pins DualDDCConfig] [get_bd_pins xlslice_Bsource/Din] [get_bd_pins xlslice_Asource/Din]
  connect_bd_net -net Net1 [get_bd_pins aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins D_register_3/aclk] [get_bd_pins DDC_Block_0/aclk] [get_bd_pins DDC_Block_1/aclk] [get_bd_pins D_register_norst_0/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins axis_data_fifo_0/s_axis_aclk] [get_bd_pins axis_data_fifo_1/s_axis_aclk]
  connect_bd_net -net Net2 [get_bd_pins aresetn] [get_bd_pins D_register_0/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins D_register_3/resetn] [get_bd_pins DDC_Block_0/rstn] [get_bd_pins DDC_Block_1/rstn] [get_bd_pins regmux_2_1_0/resetn]
  connect_bd_net -net Net3 [get_bd_pins InputFIFO_rstn] [get_bd_pins axis_data_fifo_0/s_axis_aresetn] [get_bd_pins axis_data_fifo_1/s_axis_aresetn]
  connect_bd_net -net axis_data_fifo_0_almost_full [get_bd_pins axis_data_fifo_0/almost_full] [get_bd_pins DDC0_ovr]
  connect_bd_net -net axis_data_fifo_1_almost_full [get_bd_pins axis_data_fifo_1/almost_full] [get_bd_pins DDC1_ovr]
  connect_bd_net -net din_0_1 [get_bd_pins ADC1] [get_bd_pins D_register_0/din]
  connect_bd_net -net din_1_1 [get_bd_pins ADC2] [get_bd_pins D_register_1/din]
  connect_bd_net -net din_2_1 [get_bd_pins TX_samples] [get_bd_pins D_register_2/din]
  connect_bd_net -net din_3_1 [get_bd_pins RX_Test] [get_bd_pins D_register_3/din]
  connect_bd_net -net test_source_1 [get_bd_pins D_register_3/dout] [get_bd_pins DDC_Block_0/test_source] [get_bd_pins DDC_Block_1/test_source]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins util_reduced_logic_0/Res] [get_bd_pins DDC_Block_1/LOIQSel] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconstant_0/dout] [get_bd_pins DDC_Block_0/LOIQIn_tvalid] [get_bd_pins DDC_Block_0/LOIQSel]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins xlconstant_1/dout] [get_bd_pins DDC_Block_0/LOIQIn_tdata]
  connect_bd_net -net xlslice_Arate_Dout [get_bd_pins xlslice_Arate/Dout] [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins regmux_2_1_0/din0]
  connect_bd_net -net xlslice_Asource_Dout [get_bd_pins xlslice_Asource/Dout] [get_bd_pins DDC_Block_0/ChanConfig]
  connect_bd_net -net xlslice_Brate_Dout [get_bd_pins xlslice_Brate/Dout] [get_bd_pins D_register_norst_0/din] [get_bd_pins regmux_2_1_0/din1]
  connect_bd_net -net xlslice_Bsource_Dout [get_bd_pins xlslice_Bsource/Dout] [get_bd_pins DDC_Block_1/ChanConfig]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dualDDC98
proc create_hier_cell_dualDDC98 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dualDDC98() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_1


  # Create pins
  create_bd_pin -dir I -from 15 -to 0 ADC1
  create_bd_pin -dir I -from 15 -to 0 ADC2
  create_bd_pin -dir O DDC0_ovr
  create_bd_pin -dir O DDC1_ovr
  create_bd_pin -dir I -from 31 -to 0 DDCAFreq
  create_bd_pin -dir I -from 31 -to 0 DDCBFreq
  create_bd_pin -dir I -from 5 -to 0 DualDDCRate
  create_bd_pin -dir I InputFIFO_rstn
  create_bd_pin -dir I -from 15 -to 0 RX_Test
  create_bd_pin -dir I -from 15 -to 0 TX_samples
  create_bd_pin -dir I aclk
  create_bd_pin -dir I aresetn
  create_bd_pin -dir I -from 3 -to 0 DualDDCConfig
  create_bd_pin -dir I Byteswap

  # Create instance: DDC_Block_0, and set properties
  set DDC_Block_0 [ create_bd_cell -type container -reference DDC_Block DDC_Block_0 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
    CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {DDC_Block.bd} \
    CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $DDC_Block_0


  # Create instance: DDC_Block_1, and set properties
  set DDC_Block_1 [ create_bd_cell -type container -reference DDC_Block DDC_Block_1 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
    CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {DDC_Block.bd} \
    CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $DDC_Block_1


  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_3, and set properties
  set block_name D_register
  set block_cell_name D_register_3
  if { [catch {set D_register_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_Arate, and set properties
  set xlslice_Arate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Arate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {6} \
    CONFIG.DOUT_WIDTH {3} \
  ] $xlslice_Arate


  # Create instance: xlslice_Asource, and set properties
  set xlslice_Asource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Asource ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_WIDTH {4} \
    CONFIG.DOUT_WIDTH {2} \
  ] $xlslice_Asource


  # Create instance: xlslice_Brate, and set properties
  set xlslice_Brate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Brate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {5} \
    CONFIG.DIN_TO {3} \
    CONFIG.DIN_WIDTH {6} \
    CONFIG.DOUT_WIDTH {3} \
  ] $xlslice_Brate


  # Create instance: xlslice_Bsource, and set properties
  set xlslice_Bsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Bsource ]
  set_property -dict [list \
    CONFIG.DIN_FROM {3} \
    CONFIG.DIN_TO {2} \
    CONFIG.DIN_WIDTH {4} \
    CONFIG.DOUT_WIDTH {2} \
  ] $xlslice_Bsource


  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property CONFIG.C_SIZE {3} $util_reduced_logic_0


  # Create instance: D_register_norst_0, and set properties
  set block_name D_register_norst
  set block_cell_name D_register_norst_0
  if { [catch {set D_register_norst_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_norst_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {3} $D_register_norst_0


  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {3} $regmux_2_1_0


  # Create instance: axis_data_fifo_0, and set properties
  set axis_data_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_0 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {128} \
    CONFIG.HAS_AFULL {1} \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
    CONFIG.TUSER_WIDTH {0} \
  ] $axis_data_fifo_0


  # Create instance: axis_data_fifo_1, and set properties
  set axis_data_fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_1 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {128} \
    CONFIG.HAS_AFULL {1} \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
    CONFIG.TUSER_WIDTH {0} \
  ] $axis_data_fifo_1


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {0} \
    CONFIG.CONST_WIDTH {32} \
  ] $xlconstant_1


  # Create interface connections
  connect_bd_intf_net -intf_net DDC_Block_0_LOIQOut [get_bd_intf_pins DDC_Block_0/LOIQOut] [get_bd_intf_pins DDC_Block_1/LOIQIn]
  connect_bd_intf_net -intf_net DDC_Block_0_M_AXIS_DATA [get_bd_intf_pins DDC_Block_0/M_AXIS_DATA] [get_bd_intf_pins axis_data_fifo_0/S_AXIS]
  connect_bd_intf_net -intf_net DDC_Block_1_M_AXIS_DATA [get_bd_intf_pins DDC_Block_1/M_AXIS_DATA] [get_bd_intf_pins axis_data_fifo_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_pins m_axis_0] [get_bd_intf_pins axis_data_fifo_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_1_M_AXIS [get_bd_intf_pins m_axis_1] [get_bd_intf_pins axis_data_fifo_1/M_AXIS]

  # Create port connections
  connect_bd_net -net ADC1_1 [get_bd_pins ADC1] [get_bd_pins D_register_0/din]
  connect_bd_net -net ADC2_1 [get_bd_pins ADC2] [get_bd_pins D_register_1/din]
  connect_bd_net -net Byteswap_1 [get_bd_pins Byteswap] [get_bd_pins DDC_Block_1/Byteswap] [get_bd_pins DDC_Block_0/Byteswap]
  connect_bd_net -net CicInterp_1 [get_bd_pins regmux_2_1_0/dout] [get_bd_pins DDC_Block_0/CicInterp]
  connect_bd_net -net DDCAFreq_1 [get_bd_pins DDCAFreq] [get_bd_pins DDC_Block_0/ChanFreq]
  connect_bd_net -net DDCBFreq_1 [get_bd_pins DDCBFreq] [get_bd_pins DDC_Block_1/ChanFreq]
  connect_bd_net -net D_register_0_dout [get_bd_pins D_register_0/dout] [get_bd_pins DDC_Block_0/adc1] [get_bd_pins DDC_Block_1/adc1]
  connect_bd_net -net D_register_1_dout [get_bd_pins D_register_1/dout] [get_bd_pins DDC_Block_0/adc2] [get_bd_pins DDC_Block_1/adc2]
  connect_bd_net -net D_register_2_dout [get_bd_pins D_register_2/dout] [get_bd_pins DDC_Block_0/tx_samples] [get_bd_pins DDC_Block_1/tx_samples]
  connect_bd_net -net D_register_3_dout [get_bd_pins D_register_3/dout] [get_bd_pins DDC_Block_1/test_source] [get_bd_pins DDC_Block_0/test_source]
  connect_bd_net -net D_register_norst_0_dout [get_bd_pins D_register_norst_0/dout] [get_bd_pins DDC_Block_1/CicInterp]
  connect_bd_net -net Net1 [get_bd_pins aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins D_register_3/aclk] [get_bd_pins DDC_Block_0/aclk] [get_bd_pins DDC_Block_1/aclk] [get_bd_pins D_register_norst_0/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins axis_data_fifo_0/s_axis_aclk] [get_bd_pins axis_data_fifo_1/s_axis_aclk]
  connect_bd_net -net Net2 [get_bd_pins InputFIFO_rstn] [get_bd_pins axis_data_fifo_0/s_axis_aresetn] [get_bd_pins axis_data_fifo_1/s_axis_aresetn]
  connect_bd_net -net Net3 [get_bd_pins DualDDCRate] [get_bd_pins xlslice_Arate/Din] [get_bd_pins xlslice_Brate/Din]
  connect_bd_net -net Net4 [get_bd_pins DualDDCConfig] [get_bd_pins xlslice_Asource/Din] [get_bd_pins xlslice_Bsource/Din]
  connect_bd_net -net RX_Test_1 [get_bd_pins RX_Test] [get_bd_pins D_register_3/din]
  connect_bd_net -net TX_samples_1 [get_bd_pins TX_samples] [get_bd_pins D_register_2/din]
  connect_bd_net -net aresetn_1 [get_bd_pins aresetn] [get_bd_pins D_register_3/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_0/resetn] [get_bd_pins DDC_Block_0/rstn] [get_bd_pins DDC_Block_1/rstn] [get_bd_pins regmux_2_1_0/resetn]
  connect_bd_net -net axis_data_fifo_0_almost_full [get_bd_pins axis_data_fifo_0/almost_full] [get_bd_pins DDC0_ovr]
  connect_bd_net -net axis_data_fifo_1_almost_full [get_bd_pins axis_data_fifo_1/almost_full] [get_bd_pins DDC1_ovr]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins util_reduced_logic_0/Res] [get_bd_pins DDC_Block_1/LOIQSel] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconstant_0/dout] [get_bd_pins DDC_Block_0/LOIQIn_tvalid] [get_bd_pins DDC_Block_0/LOIQSel]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins xlconstant_1/dout] [get_bd_pins DDC_Block_0/LOIQIn_tdata]
  connect_bd_net -net xlslice_Arate_Dout [get_bd_pins xlslice_Arate/Dout] [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins regmux_2_1_0/din0]
  connect_bd_net -net xlslice_Asource_Dout [get_bd_pins xlslice_Asource/Dout] [get_bd_pins DDC_Block_0/ChanConfig]
  connect_bd_net -net xlslice_Brate_Dout [get_bd_pins xlslice_Brate/Dout] [get_bd_pins D_register_norst_0/din] [get_bd_pins regmux_2_1_0/din1]
  connect_bd_net -net xlslice_Bsource_Dout [get_bd_pins xlslice_Bsource/Dout] [get_bd_pins DDC_Block_1/ChanConfig]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dualDDC10
proc create_hier_cell_dualDDC10 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dualDDC10() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_1


  # Create pins
  create_bd_pin -dir I -from 15 -to 0 ADC1
  create_bd_pin -dir I -from 15 -to 0 ADC2
  create_bd_pin -dir I -from 31 -to 0 DDCAFreq
  create_bd_pin -dir I -from 31 -to 0 DDCBFreq
  create_bd_pin -dir I -from 15 -to 0 RX_Test
  create_bd_pin -dir I -from 15 -to 0 TX_samples
  create_bd_pin -dir I aclk
  create_bd_pin -dir I aresetn
  create_bd_pin -dir I -from 5 -to 0 DualDDCRate
  create_bd_pin -dir O DDC0_ovr
  create_bd_pin -dir O DDC1_ovr
  create_bd_pin -dir I InputFIFO_rstn
  create_bd_pin -dir I -from 3 -to 0 DualDDCConfig
  create_bd_pin -dir I Byteswap

  # Create instance: DDC_Block_0, and set properties
  set DDC_Block_0 [ create_bd_cell -type container -reference DDC_Block DDC_Block_0 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
    CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {DDC_Block.bd} \
    CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $DDC_Block_0


  # Create instance: DDC_Block_1, and set properties
  set DDC_Block_1 [ create_bd_cell -type container -reference DDC_Block DDC_Block_1 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {DDC_Block.bd} \
    CONFIG.ACTIVE_SYNTH_BD {DDC_Block.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {DDC_Block.bd} \
    CONFIG.LIST_SYNTH_BD {DDC_Block.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $DDC_Block_1


  # Create instance: xlslice_Arate, and set properties
  set xlslice_Arate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Arate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {6} \
    CONFIG.DOUT_WIDTH {3} \
  ] $xlslice_Arate


  # Create instance: xlslice_Asource, and set properties
  set xlslice_Asource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Asource ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_WIDTH {4} \
    CONFIG.DOUT_WIDTH {2} \
  ] $xlslice_Asource


  # Create instance: xlslice_Brate, and set properties
  set xlslice_Brate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Brate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {5} \
    CONFIG.DIN_TO {3} \
    CONFIG.DIN_WIDTH {6} \
    CONFIG.DOUT_WIDTH {3} \
  ] $xlslice_Brate


  # Create instance: xlslice_Bsource, and set properties
  set xlslice_Bsource [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_Bsource ]
  set_property -dict [list \
    CONFIG.DIN_FROM {3} \
    CONFIG.DIN_TO {2} \
    CONFIG.DIN_WIDTH {4} \
    CONFIG.DOUT_WIDTH {2} \
  ] $xlslice_Bsource


  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_2, and set properties
  set block_name D_register
  set block_cell_name D_register_2
  if { [catch {set D_register_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_3, and set properties
  set block_name D_register
  set block_cell_name D_register_3
  if { [catch {set D_register_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property CONFIG.C_SIZE {3} $util_reduced_logic_0


  # Create instance: D_register_norst_0, and set properties
  set block_name D_register_norst
  set block_cell_name D_register_norst_0
  if { [catch {set D_register_norst_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_norst_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {3} $D_register_norst_0


  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {3} $regmux_2_1_0


  # Create instance: axis_data_fifo_0, and set properties
  set axis_data_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_0 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {128} \
    CONFIG.HAS_AFULL {1} \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
    CONFIG.TUSER_WIDTH {0} \
  ] $axis_data_fifo_0


  # Create instance: axis_data_fifo_1, and set properties
  set axis_data_fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_1 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {128} \
    CONFIG.HAS_AFULL {1} \
    CONFIG.HAS_TKEEP {0} \
    CONFIG.HAS_TLAST {0} \
    CONFIG.HAS_TSTRB {0} \
    CONFIG.TDATA_NUM_BYTES {6} \
    CONFIG.TDEST_WIDTH {0} \
    CONFIG.TID_WIDTH {0} \
    CONFIG.TUSER_WIDTH {0} \
  ] $axis_data_fifo_1


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {0} \
    CONFIG.CONST_WIDTH {32} \
  ] $xlconstant_1


  # Create interface connections
  connect_bd_intf_net -intf_net DDC_Block_0_LOIQOut [get_bd_intf_pins DDC_Block_0/LOIQOut] [get_bd_intf_pins DDC_Block_1/LOIQIn]
  connect_bd_intf_net -intf_net DDC_Block_0_M_AXIS_DATA [get_bd_intf_pins DDC_Block_0/M_AXIS_DATA] [get_bd_intf_pins axis_data_fifo_0/S_AXIS]
  connect_bd_intf_net -intf_net DDC_Block_1_M_AXIS_DATA [get_bd_intf_pins DDC_Block_1/M_AXIS_DATA] [get_bd_intf_pins axis_data_fifo_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_pins m_axis_0] [get_bd_intf_pins axis_data_fifo_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_1_M_AXIS [get_bd_intf_pins m_axis_1] [get_bd_intf_pins axis_data_fifo_1/M_AXIS]

  # Create port connections
  connect_bd_net -net Byteswap_1 [get_bd_pins Byteswap] [get_bd_pins DDC_Block_1/Byteswap] [get_bd_pins DDC_Block_0/Byteswap]
  connect_bd_net -net ChanConfig_1 [get_bd_pins xlslice_Bsource/Dout] [get_bd_pins DDC_Block_1/ChanConfig]
  connect_bd_net -net CicInterp_1 [get_bd_pins regmux_2_1_0/dout] [get_bd_pins DDC_Block_0/CicInterp]
  connect_bd_net -net DDCAFreq_1 [get_bd_pins DDCAFreq] [get_bd_pins DDC_Block_0/ChanFreq]
  connect_bd_net -net DDCBFreq_1 [get_bd_pins DDCBFreq] [get_bd_pins DDC_Block_1/ChanFreq]
  connect_bd_net -net D_register_0_dout [get_bd_pins D_register_0/dout] [get_bd_pins DDC_Block_0/adc1] [get_bd_pins DDC_Block_1/adc1]
  connect_bd_net -net D_register_1_dout [get_bd_pins D_register_1/dout] [get_bd_pins DDC_Block_0/adc2] [get_bd_pins DDC_Block_1/adc2]
  connect_bd_net -net D_register_2_dout [get_bd_pins D_register_2/dout] [get_bd_pins DDC_Block_0/tx_samples] [get_bd_pins DDC_Block_1/tx_samples]
  connect_bd_net -net D_register_3_dout [get_bd_pins D_register_3/dout] [get_bd_pins DDC_Block_0/test_source] [get_bd_pins DDC_Block_1/test_source]
  connect_bd_net -net D_register_norst_0_dout [get_bd_pins D_register_norst_0/dout] [get_bd_pins DDC_Block_1/CicInterp]
  connect_bd_net -net DualDDCRate_1 [get_bd_pins DualDDCRate] [get_bd_pins xlslice_Arate/Din] [get_bd_pins xlslice_Brate/Din]
  connect_bd_net -net Net [get_bd_pins DualDDCConfig] [get_bd_pins xlslice_Bsource/Din] [get_bd_pins xlslice_Asource/Din]
  connect_bd_net -net Net1 [get_bd_pins aclk] [get_bd_pins DDC_Block_0/aclk] [get_bd_pins DDC_Block_1/aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins D_register_2/aclk] [get_bd_pins D_register_3/aclk] [get_bd_pins D_register_norst_0/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins axis_data_fifo_0/s_axis_aclk] [get_bd_pins axis_data_fifo_1/s_axis_aclk]
  connect_bd_net -net Net2 [get_bd_pins aresetn] [get_bd_pins DDC_Block_0/rstn] [get_bd_pins DDC_Block_1/rstn] [get_bd_pins D_register_0/resetn] [get_bd_pins D_register_1/resetn] [get_bd_pins D_register_2/resetn] [get_bd_pins D_register_3/resetn] [get_bd_pins regmux_2_1_0/resetn]
  connect_bd_net -net Net3 [get_bd_pins InputFIFO_rstn] [get_bd_pins axis_data_fifo_0/s_axis_aresetn] [get_bd_pins axis_data_fifo_1/s_axis_aresetn]
  connect_bd_net -net axis_data_fifo_0_almost_full [get_bd_pins axis_data_fifo_0/almost_full] [get_bd_pins DDC0_ovr]
  connect_bd_net -net axis_data_fifo_1_almost_full [get_bd_pins axis_data_fifo_1/almost_full] [get_bd_pins DDC1_ovr]
  connect_bd_net -net din_0_1 [get_bd_pins ADC1] [get_bd_pins D_register_0/din]
  connect_bd_net -net din_1_1 [get_bd_pins ADC2] [get_bd_pins D_register_1/din]
  connect_bd_net -net din_2_1 [get_bd_pins TX_samples] [get_bd_pins D_register_2/din]
  connect_bd_net -net din_3_1 [get_bd_pins RX_Test] [get_bd_pins D_register_3/din]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins util_reduced_logic_0/Res] [get_bd_pins DDC_Block_1/LOIQSel] [get_bd_pins regmux_2_1_0/sel]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconstant_0/dout] [get_bd_pins DDC_Block_0/LOIQSel] [get_bd_pins DDC_Block_0/LOIQIn_tvalid]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins xlconstant_1/dout] [get_bd_pins DDC_Block_0/LOIQIn_tdata]
  connect_bd_net -net xlslice_Arate_Dout [get_bd_pins xlslice_Arate/Dout] [get_bd_pins util_reduced_logic_0/Op1] [get_bd_pins regmux_2_1_0/din0]
  connect_bd_net -net xlslice_Asource_Dout [get_bd_pins xlslice_Asource/Dout] [get_bd_pins DDC_Block_0/ChanConfig]
  connect_bd_net -net xlslice_Brate_Dout [get_bd_pins xlslice_Brate/Dout] [get_bd_pins D_register_norst_0/din] [get_bd_pins regmux_2_1_0/din1]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: debounce
proc create_hier_cell_debounce { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_debounce() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I -from 9 -to 0 status_in
  create_bd_pin -dir O -from 9 -to 0 status_out
  create_bd_pin -dir O Debounced_Key_Dot
  create_bd_pin -dir O Debounced_Key_Dash
  create_bd_pin -dir O IO8
  create_bd_pin -dir O ATU_Tune_Req

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property CONFIG.NUM_PORTS {10} $xlconcat_0


  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {0} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {10} \
  ] $xlslice_0


  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_TO {1} \
    CONFIG.DIN_WIDTH {10} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_1


  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DIN_TO {2} \
    CONFIG.DIN_WIDTH {10} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_2


  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {3} \
    CONFIG.DIN_TO {3} \
    CONFIG.DIN_WIDTH {10} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_3


  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {4} \
    CONFIG.DIN_TO {4} \
    CONFIG.DIN_WIDTH {10} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_4


  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {5} \
    CONFIG.DIN_TO {5} \
    CONFIG.DIN_WIDTH {10} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_5


  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {6} \
    CONFIG.DIN_TO {6} \
    CONFIG.DIN_WIDTH {10} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_6


  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {7} \
    CONFIG.DIN_TO {7} \
    CONFIG.DIN_WIDTH {10} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_7


  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {8} \
    CONFIG.DIN_TO {8} \
    CONFIG.DIN_WIDTH {10} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_8


  # Create instance: ClockDivider_0, and set properties
  set block_name ClockDivider
  set block_cell_name ClockDivider_0
  if { [catch {set ClockDivider_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ClockDivider_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.Divisor {12000} $ClockDivider_0


  # Create instance: debounce_0, and set properties
  set block_name debounce
  set block_cell_name debounce_0
  if { [catch {set debounce_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.debounce_count {10} $debounce_0


  # Create instance: debounce_1, and set properties
  set block_name debounce
  set block_cell_name debounce_1
  if { [catch {set debounce_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.debounce_count {10} $debounce_1


  # Create instance: debounce_2, and set properties
  set block_name debounce
  set block_cell_name debounce_2
  if { [catch {set debounce_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.debounce_count {10} $debounce_2


  # Create instance: debounce_3, and set properties
  set block_name debounce
  set block_cell_name debounce_3
  if { [catch {set debounce_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.debounce_count {10} $debounce_3


  # Create instance: debounce_4, and set properties
  set block_name debounce
  set block_cell_name debounce_4
  if { [catch {set debounce_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_4 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.debounce_count {10} $debounce_4


  # Create instance: debounce_5, and set properties
  set block_name debounce
  set block_cell_name debounce_5
  if { [catch {set debounce_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_5 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.debounce_count {10} $debounce_5


  # Create instance: debounce_6, and set properties
  set block_name debounce
  set block_cell_name debounce_6
  if { [catch {set debounce_6 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_6 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.debounce_count {10} $debounce_6


  # Create instance: debounce_8, and set properties
  set block_name debounce
  set block_cell_name debounce_8
  if { [catch {set debounce_8 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_8 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.debounce_count {10} $debounce_8


  # Create instance: debounce_9, and set properties
  set block_name debounce
  set block_cell_name debounce_9
  if { [catch {set debounce_9 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $debounce_9 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.debounce_count {10} $debounce_9


  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {9} \
    CONFIG.DIN_TO {9} \
    CONFIG.DIN_WIDTH {10} \
  ] $xlslice_9


  # Create port connections
  connect_bd_net -net ClockDivider_0_TCN [get_bd_pins ClockDivider_0/TCN] [get_bd_pins debounce_0/ce_n] [get_bd_pins debounce_1/ce_n] [get_bd_pins debounce_2/ce_n] [get_bd_pins debounce_3/ce_n] [get_bd_pins debounce_4/ce_n] [get_bd_pins debounce_5/ce_n] [get_bd_pins debounce_6/ce_n] [get_bd_pins debounce_8/ce_n] [get_bd_pins debounce_9/ce_n]
  connect_bd_net -net Net3 [get_bd_pins status_in] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net clk_1 [get_bd_pins clk] [get_bd_pins ClockDivider_0/aclk] [get_bd_pins debounce_0/aclk] [get_bd_pins debounce_1/aclk] [get_bd_pins debounce_2/aclk] [get_bd_pins debounce_3/aclk] [get_bd_pins debounce_4/aclk] [get_bd_pins debounce_5/aclk] [get_bd_pins debounce_6/aclk] [get_bd_pins debounce_8/aclk] [get_bd_pins debounce_9/aclk]
  connect_bd_net -net debounce_0_clean_pbn [get_bd_pins debounce_0/clean_pbn] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net debounce_1_clean_pbn [get_bd_pins debounce_1/clean_pbn] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net debounce_2_clean_pbn [get_bd_pins debounce_2/clean_pbn] [get_bd_pins xlconcat_0/In2] [get_bd_pins Debounced_Key_Dot]
  connect_bd_net -net debounce_3_clean_pbn [get_bd_pins debounce_3/clean_pbn] [get_bd_pins xlconcat_0/In3] [get_bd_pins Debounced_Key_Dash]
  connect_bd_net -net debounce_4_clean_pb [get_bd_pins debounce_4/clean_pb] [get_bd_pins xlconcat_0/In4]
  connect_bd_net -net debounce_5_clean_pb [get_bd_pins debounce_5/clean_pb] [get_bd_pins xlconcat_0/In5]
  connect_bd_net -net debounce_6_clean_pb [get_bd_pins debounce_6/clean_pb] [get_bd_pins xlconcat_0/In6]
  connect_bd_net -net debounce_8_clean_pb [get_bd_pins debounce_8/clean_pb] [get_bd_pins xlconcat_0/In7]
  connect_bd_net -net debounce_8_clean_pbn [get_bd_pins debounce_8/clean_pbn] [get_bd_pins IO8]
  connect_bd_net -net debounce_9_clean_pb [get_bd_pins debounce_9/clean_pb] [get_bd_pins xlconcat_0/In9]
  connect_bd_net -net debounce_9_clean_pbn [get_bd_pins debounce_9/clean_pbn] [get_bd_pins ATU_Tune_Req]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins ClockDivider_0/resetn]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins xlconcat_0/dout] [get_bd_pins status_out]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlslice_0/Dout] [get_bd_pins debounce_0/pb_in]
  connect_bd_net -net xlslice_1_Dout1 [get_bd_pins xlslice_1/Dout] [get_bd_pins debounce_1/pb_in]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlslice_2/Dout] [get_bd_pins debounce_2/pb_in]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlslice_3/Dout] [get_bd_pins debounce_3/pb_in]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlslice_4/Dout] [get_bd_pins debounce_4/pb_in]
  connect_bd_net -net xlslice_5_Dout1 [get_bd_pins xlslice_5/Dout] [get_bd_pins debounce_5/pb_in]
  connect_bd_net -net xlslice_6_Dout1 [get_bd_pins xlslice_6/Dout] [get_bd_pins debounce_6/pb_in]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlslice_7/Dout] [get_bd_pins debounce_8/pb_in]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlslice_8/Dout] [get_bd_pins xlconcat_0/In8]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlslice_9/Dout] [get_bd_pins debounce_9/pb_in]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Strobes
proc create_hier_cell_Strobes { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_Strobes() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -from 1 -to 0 ADC_Randomise
  create_bd_pin -dir O -from 0 -to 0 ATU_TUNE
  create_bd_pin -dir O CTRL_TRSW
  create_bd_pin -dir O -from 23 -to 0 GPIO_OUT
  create_bd_pin -dir O -from 0 -to 0 MOX_strobe
  create_bd_pin -dir I -from 31 -to 0 RF_GPIO
  create_bd_pin -dir O TXRX_RELAY
  create_bd_pin -dir I -from 0 -to 0 keyer_PTT
  create_bd_pin -dir O Driver_PA_En
  create_bd_pin -dir I ATU_Tune_Req
  create_bd_pin -dir I aclk
  create_bd_pin -dir I rstn

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {or} \
    CONFIG.C_SIZE {2} \
  ] $util_reduced_logic_0


  # Create instance: util_reduced_logic_1, and set properties
  set util_reduced_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_1 ]
  set_property CONFIG.C_SIZE {2} $util_reduced_logic_1


  # Create instance: util_reduced_logic_2, and set properties
  set util_reduced_logic_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_2 ]
  set_property CONFIG.C_SIZE {2} $util_reduced_logic_2


  # Create instance: util_reduced_logic_3, and set properties
  set util_reduced_logic_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_3 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {and} \
    CONFIG.C_SIZE {2} \
  ] $util_reduced_logic_3


  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [list \
    CONFIG.IN0_WIDTH {1} \
    CONFIG.IN1_WIDTH {1} \
  ] $xlconcat_0


  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [list \
    CONFIG.IN0_WIDTH {1} \
    CONFIG.IN1_WIDTH {1} \
  ] $xlconcat_1


  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [list \
    CONFIG.IN0_WIDTH {1} \
    CONFIG.IN1_WIDTH {1} \
  ] $xlconcat_2


  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [list \
    CONFIG.IN0_WIDTH {1} \
    CONFIG.IN1_WIDTH {1} \
  ] $xlconcat_3


  # Create instance: xlconcat_4, and set properties
  set xlconcat_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_4 ]

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {23} \
    CONFIG.DOUT_WIDTH {24} \
  ] $xlslice_0


  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {25} \
    CONFIG.DIN_TO {25} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_2


  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {24} \
    CONFIG.DIN_TO {24} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_3


  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {30} \
    CONFIG.DIN_TO {30} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_4


  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {29} \
    CONFIG.DIN_TO {29} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_5


  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {27} \
    CONFIG.DIN_TO {27} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_7


  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {8} \
    CONFIG.DIN_TO {8} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_8


  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {11} \
    CONFIG.DIN_TO {11} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_9


  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_0


  # Create instance: PTTATUGate_0, and set properties
  set block_name PTTATUGate
  set block_cell_name PTTATUGate_0
  if { [catch {set PTTATUGate_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $PTTATUGate_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create port connections
  connect_bd_net -net ATU_Tune_Req_1 [get_bd_pins ATU_Tune_Req] [get_bd_pins PTTATUGate_0/ATURequest]
  connect_bd_net -net PTTATUGate_0_PTTOut [get_bd_pins PTTATUGate_0/PTTOut] [get_bd_pins MOX_strobe]
  connect_bd_net -net RF_GPIO_1 [get_bd_pins RF_GPIO] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins PTTATUGate_0/aclk]
  connect_bd_net -net keyer_PTT_1 [get_bd_pins keyer_PTT] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins PTTATUGate_0/aresetn]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins util_reduced_logic_0/Res] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net util_reduced_logic_1_Res [get_bd_pins util_reduced_logic_1/Res] [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconcat_3/In1] [get_bd_pins Driver_PA_En] [get_bd_pins PTTATUGate_0/PTTIn]
  connect_bd_net -net util_reduced_logic_2_Res [get_bd_pins util_reduced_logic_2/Res] [get_bd_pins CTRL_TRSW]
  connect_bd_net -net util_reduced_logic_3_Res [get_bd_pins util_reduced_logic_3/Res] [get_bd_pins TXRX_RELAY]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins util_vector_logic_0/Res] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins xlconcat_0/dout] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins xlconcat_1/dout] [get_bd_pins util_reduced_logic_1/Op1]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins xlconcat_2/dout] [get_bd_pins util_reduced_logic_2/Op1]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins xlconcat_3/dout] [get_bd_pins util_reduced_logic_3/Op1]
  connect_bd_net -net xlconcat_4_dout [get_bd_pins xlconcat_4/dout] [get_bd_pins ADC_Randomise]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlslice_0/Dout] [get_bd_pins GPIO_OUT]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlslice_2/Dout] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlslice_3/Dout] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlslice_4/Dout] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlslice_5/Dout] [get_bd_pins ATU_TUNE]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlslice_7/Dout] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlslice_8/Dout] [get_bd_pins xlconcat_4/In0]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlslice_9/Dout] [get_bd_pins xlconcat_4/In1]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: AttenDrivers
proc create_hier_cell_AttenDrivers { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_AttenDrivers() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -type clk ADC1_ATTEN_CLK
  create_bd_pin -dir O ADC1_ATTEN_DAT
  create_bd_pin -dir O ADC1_ATTEN_LE
  create_bd_pin -dir O -type clk ADC2_ATTEN_CLK
  create_bd_pin -dir O ADC2_ATTEN_DAT
  create_bd_pin -dir O ADC2_ATTEN_LE
  create_bd_pin -dir I -from 31 -to 0 ADC_Ctrl
  create_bd_pin -dir I -from 31 -to 0 DAC_Ctrl
  create_bd_pin -dir O -from 5 -to 0 Dac_Atten
  create_bd_pin -dir O TX_DAC_PWM
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I tx_strobe
  create_bd_pin -dir I clk122

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {7} \
    CONFIG.DOUT_WIDTH {8} \
  ] $xlslice_0


  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {15} \
    CONFIG.DIN_TO {8} \
    CONFIG.DOUT_WIDTH {8} \
  ] $xlslice_1


  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {21} \
    CONFIG.DIN_TO {16} \
    CONFIG.DOUT_WIDTH {6} \
  ] $xlslice_2


  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {29} \
    CONFIG.DIN_TO {24} \
    CONFIG.DOUT_WIDTH {6} \
  ] $xlslice_3


  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {9} \
    CONFIG.DIN_TO {5} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {5} \
  ] $xlslice_4


  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {4} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {5} \
  ] $xlslice_5


  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {14} \
    CONFIG.DIN_TO {10} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {5} \
  ] $xlslice_6


  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {19} \
    CONFIG.DIN_TO {15} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {5} \
  ] $xlslice_7


  # Create instance: PWM_DAC_0, and set properties
  set block_name PWM_DAC
  set block_cell_name PWM_DAC_0
  if { [catch {set PWM_DAC_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $PWM_DAC_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: SerialAtten_0, and set properties
  set block_name SerialAtten
  set block_cell_name SerialAtten_0
  if { [catch {set SerialAtten_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $SerialAtten_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: SerialAtten_1, and set properties
  set block_name SerialAtten
  set block_cell_name SerialAtten_1
  if { [catch {set SerialAtten_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $SerialAtten_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: regmux_2_1_0, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_0
  if { [catch {set regmux_2_1_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {8} $regmux_2_1_0


  # Create instance: regmux_2_1_1, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_1
  if { [catch {set regmux_2_1_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {6} $regmux_2_1_1


  # Create instance: regmux_2_1_2, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_2
  if { [catch {set regmux_2_1_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {5} $regmux_2_1_2


  # Create instance: regmux_2_1_3, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_3
  if { [catch {set regmux_2_1_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {5} $regmux_2_1_3


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create port connections
  connect_bd_net -net Net [get_bd_pins ADC_Ctrl] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din]
  connect_bd_net -net Net1 [get_bd_pins DAC_Ctrl] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din]
  connect_bd_net -net PWM_DAC_0_DAC_bit [get_bd_pins PWM_DAC_0/DAC_bit] [get_bd_pins TX_DAC_PWM]
  connect_bd_net -net SerialAtten_0_ATTN_CLK [get_bd_pins SerialAtten_0/ATTN_CLK] [get_bd_pins ADC1_ATTEN_CLK]
  connect_bd_net -net SerialAtten_0_ATTN_DATA [get_bd_pins SerialAtten_0/ATTN_DATA] [get_bd_pins ADC1_ATTEN_DAT]
  connect_bd_net -net SerialAtten_0_ATTN_LE [get_bd_pins SerialAtten_0/ATTN_LE] [get_bd_pins ADC1_ATTEN_LE]
  connect_bd_net -net SerialAtten_1_ATTN_CLK [get_bd_pins SerialAtten_1/ATTN_CLK] [get_bd_pins ADC2_ATTEN_CLK]
  connect_bd_net -net SerialAtten_1_ATTN_DATA [get_bd_pins SerialAtten_1/ATTN_DATA] [get_bd_pins ADC2_ATTEN_DAT]
  connect_bd_net -net SerialAtten_1_ATTN_LE [get_bd_pins SerialAtten_1/ATTN_LE] [get_bd_pins ADC2_ATTEN_LE]
  connect_bd_net -net clk122_1 [get_bd_pins clk122] [get_bd_pins PWM_DAC_0/aclk]
  connect_bd_net -net clk_1 [get_bd_pins clk] [get_bd_pins SerialAtten_0/aclk] [get_bd_pins SerialAtten_1/aclk] [get_bd_pins regmux_2_1_0/aclk] [get_bd_pins regmux_2_1_1/aclk] [get_bd_pins regmux_2_1_2/aclk] [get_bd_pins regmux_2_1_3/aclk]
  connect_bd_net -net regmux_2_1_0_dout [get_bd_pins regmux_2_1_0/dout] [get_bd_pins PWM_DAC_0/PWM_source]
  connect_bd_net -net regmux_2_1_1_dout [get_bd_pins regmux_2_1_1/dout] [get_bd_pins Dac_Atten]
  connect_bd_net -net regmux_2_1_2_dout [get_bd_pins regmux_2_1_2/dout] [get_bd_pins SerialAtten_0/data]
  connect_bd_net -net regmux_2_1_3_dout [get_bd_pins regmux_2_1_3/dout] [get_bd_pins SerialAtten_1/data]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins SerialAtten_0/resetn] [get_bd_pins SerialAtten_1/resetn] [get_bd_pins regmux_2_1_0/resetn] [get_bd_pins regmux_2_1_1/resetn] [get_bd_pins regmux_2_1_2/resetn] [get_bd_pins regmux_2_1_3/resetn]
  connect_bd_net -net tx_strobe_1 [get_bd_pins tx_strobe] [get_bd_pins regmux_2_1_0/sel] [get_bd_pins regmux_2_1_1/sel] [get_bd_pins regmux_2_1_2/sel] [get_bd_pins regmux_2_1_3/sel]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconstant_0/dout] [get_bd_pins SerialAtten_0/ce_n] [get_bd_pins SerialAtten_1/ce_n]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlslice_0/Dout] [get_bd_pins regmux_2_1_0/din0]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlslice_1/Dout] [get_bd_pins regmux_2_1_0/din1]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlslice_2/Dout] [get_bd_pins regmux_2_1_1/din0]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlslice_3/Dout] [get_bd_pins regmux_2_1_1/din1]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlslice_4/Dout] [get_bd_pins regmux_2_1_2/din1]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlslice_5/Dout] [get_bd_pins regmux_2_1_2/din0]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlslice_6/Dout] [get_bd_pins regmux_2_1_3/din0]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlslice_7/Dout] [get_bd_pins regmux_2_1_3/din1]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: IambicKeyer
proc create_hier_cell_IambicKeyer { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_IambicKeyer() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O CW_Key_Down
  create_bd_pin -dir I Key_Dash
  create_bd_pin -dir I Key_Dot
  create_bd_pin -dir I clk12
  create_bd_pin -dir I -from 31 -to 0 IambicConfig
  create_bd_pin -dir I aresetn
  create_bd_pin -dir I IO8
  create_bd_pin -dir O -from 0 -to 0 CW_Breakin

  # Create instance: xlslice_speed, and set properties
  set xlslice_speed [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_speed ]
  set_property -dict [list \
    CONFIG.DIN_FROM {5} \
    CONFIG.DOUT_WIDTH {6} \
  ] $xlslice_speed


  # Create instance: xlslice_weight, and set properties
  set xlslice_weight [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_weight ]
  set_property -dict [list \
    CONFIG.DIN_FROM {15} \
    CONFIG.DIN_TO {8} \
    CONFIG.DOUT_WIDTH {8} \
  ] $xlslice_weight


  # Create instance: xlslice_reversed, and set properties
  set xlslice_reversed [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_reversed ]
  set_property -dict [list \
    CONFIG.DIN_FROM {16} \
    CONFIG.DIN_TO {16} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_reversed


  # Create instance: xlslice_strict, and set properties
  set xlslice_strict [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_strict ]
  set_property -dict [list \
    CONFIG.DIN_FROM {19} \
    CONFIG.DIN_TO {19} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_strict


  # Create instance: xlslice_modeB, and set properties
  set xlslice_modeB [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_modeB ]
  set_property -dict [list \
    CONFIG.DIN_FROM {18} \
    CONFIG.DIN_TO {18} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_modeB


  # Create instance: xlslice_iambicenable, and set properties
  set xlslice_iambicenable [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_iambicenable ]
  set_property -dict [list \
    CONFIG.DIN_FROM {17} \
    CONFIG.DIN_TO {17} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_iambicenable


  # Create instance: xlslice_CWXDash, and set properties
  set xlslice_CWXDash [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_CWXDash ]
  set_property -dict [list \
    CONFIG.DIN_FROM {22} \
    CONFIG.DIN_TO {22} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_CWXDash


  # Create instance: xlslice_CWXDot, and set properties
  set xlslice_CWXDot [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_CWXDot ]
  set_property -dict [list \
    CONFIG.DIN_FROM {21} \
    CONFIG.DIN_TO {21} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_CWXDot


  # Create instance: xlslice_CWX, and set properties
  set xlslice_CWX [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_CWX ]
  set_property -dict [list \
    CONFIG.DIN_FROM {20} \
    CONFIG.DIN_TO {20} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_CWX


  # Create instance: ClockDivider_0, and set properties
  set block_name ClockDivider
  set block_cell_name ClockDivider_0
  if { [catch {set ClockDivider_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ClockDivider_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.Divisor {256} $ClockDivider_0


  # Create instance: xlslice_CWXDash1, and set properties
  set xlslice_CWXDash1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_CWXDash1 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {23} \
    CONFIG.DIN_TO {23} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_CWXDash1


  # Create instance: iambic_0, and set properties
  set block_name iambic
  set block_cell_name iambic_0
  if { [catch {set iambic_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $iambic_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.clock_speed {48} $iambic_0


  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {32} $D_register_0


  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {or} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_0


  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {or} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_1


  # Create port connections
  connect_bd_net -net ClockDivider_0_TC [get_bd_pins ClockDivider_0/TC] [get_bd_pins iambic_0/clken]
  connect_bd_net -net IO8_1 [get_bd_pins IO8] [get_bd_pins iambic_0/IO8]
  connect_bd_net -net IambicConfig_1 [get_bd_pins D_register_0/dout] [get_bd_pins xlslice_CWXDash/Din] [get_bd_pins xlslice_CWXDot/Din] [get_bd_pins xlslice_CWX/Din] [get_bd_pins xlslice_strict/Din] [get_bd_pins xlslice_modeB/Din] [get_bd_pins xlslice_iambicenable/Din] [get_bd_pins xlslice_reversed/Din] [get_bd_pins xlslice_weight/Din] [get_bd_pins xlslice_speed/Din] [get_bd_pins xlslice_CWXDash1/Din]
  connect_bd_net -net IambicConfig_2 [get_bd_pins IambicConfig] [get_bd_pins D_register_0/din]
  connect_bd_net -net Key_Dash_1 [get_bd_pins Key_Dash] [get_bd_pins util_vector_logic_1/Op1]
  connect_bd_net -net Key_Dot_1 [get_bd_pins Key_Dot] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net aresetn_1 [get_bd_pins aresetn] [get_bd_pins ClockDivider_0/resetn] [get_bd_pins D_register_0/resetn]
  connect_bd_net -net clk122_1 [get_bd_pins clk12] [get_bd_pins ClockDivider_0/aclk] [get_bd_pins iambic_0/clock] [get_bd_pins D_register_0/aclk]
  connect_bd_net -net iambic_0_keyer_out [get_bd_pins iambic_0/keyer_out] [get_bd_pins CW_Key_Down]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins util_vector_logic_0/Res] [get_bd_pins iambic_0/dot_key]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins util_vector_logic_1/Res] [get_bd_pins iambic_0/dash_key]
  connect_bd_net -net xlslice_CWXDash1_Dout [get_bd_pins xlslice_CWXDash1/Dout] [get_bd_pins CW_Breakin]
  connect_bd_net -net xlslice_CWXDash_Dout [get_bd_pins xlslice_CWXDash/Dout] [get_bd_pins util_vector_logic_1/Op2]
  connect_bd_net -net xlslice_CWXDot_Dout [get_bd_pins xlslice_CWXDot/Dout] [get_bd_pins util_vector_logic_0/Op2]
  connect_bd_net -net xlslice_CWX_Dout [get_bd_pins xlslice_CWX/Dout] [get_bd_pins iambic_0/CWX]
  connect_bd_net -net xlslice_iambicenable_Dout [get_bd_pins xlslice_iambicenable/Dout] [get_bd_pins iambic_0/iambic]
  connect_bd_net -net xlslice_modeB_Dout [get_bd_pins xlslice_modeB/Dout] [get_bd_pins iambic_0/keyer_mode]
  connect_bd_net -net xlslice_reversed_Dout [get_bd_pins xlslice_reversed/Dout] [get_bd_pins iambic_0/paddle_swap]
  connect_bd_net -net xlslice_speed_Dout [get_bd_pins xlslice_speed/Dout] [get_bd_pins iambic_0/cw_speed]
  connect_bd_net -net xlslice_strict_Dout [get_bd_pins xlslice_strict/Dout] [get_bd_pins iambic_0/letter_space]
  connect_bd_net -net xlslice_weight_Dout [get_bd_pins xlslice_weight/Dout] [get_bd_pins iambic_0/weight]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: clock_generator
proc create_hier_cell_clock_generator { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_clock_generator() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I clock_122_in_n
  create_bd_pin -dir I -type clk clock_122_in_p
  create_bd_pin -dir O -type clk clock_122_out
  create_bd_pin -dir O clock_122_out_ADC
  create_bd_pin -dir O -type clk clock_12_out
  create_bd_pin -dir O pll_cr
  create_bd_pin -dir I -from 0 -to 0 ref_in_10
  create_bd_pin -dir O -from 0 -to 0 pll_lock
  create_bd_pin -dir O clock_122_out_DAC

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {xor} \
    CONFIG.C_SIZE {2} \
  ] $util_reduced_logic_0


  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]

  # Create instance: ClockDivider_0, and set properties
  set block_name ClockDivider
  set block_cell_name ClockDivider_0
  if { [catch {set ClockDivider_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ClockDivider_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.Divisor {3072} $ClockDivider_0


  # Create instance: ClockDivider_1, and set properties
  set block_name ClockDivider
  set block_cell_name ClockDivider_1
  if { [catch {set ClockDivider_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $ClockDivider_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.Divisor {250} $ClockDivider_1


  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [list \
    CONFIG.CLKIN1_JITTER_PS {81.38} \
    CONFIG.CLKOUT1_DRIVES {BUFG} \
    CONFIG.CLKOUT1_JITTER {121.076} \
    CONFIG.CLKOUT1_PHASE_ERROR {98.137} \
    CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {122.88} \
    CONFIG.CLKOUT2_DRIVES {BUFG} \
    CONFIG.CLKOUT2_JITTER {192.138} \
    CONFIG.CLKOUT2_PHASE_ERROR {98.137} \
    CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {12.288} \
    CONFIG.CLKOUT2_USED {true} \
    CONFIG.CLKOUT3_DRIVES {BUFG} \
    CONFIG.CLKOUT3_JITTER {121.076} \
    CONFIG.CLKOUT3_PHASE_ERROR {98.137} \
    CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {122.88} \
    CONFIG.CLKOUT3_REQUESTED_PHASE {270} \
    CONFIG.CLKOUT3_USED {true} \
    CONFIG.CLKOUT4_DRIVES {BUFG} \
    CONFIG.CLKOUT4_JITTER {121.076} \
    CONFIG.CLKOUT4_PHASE_ERROR {98.137} \
    CONFIG.CLKOUT4_REQUESTED_OUT_FREQ {122.88} \
    CONFIG.CLKOUT4_REQUESTED_PHASE {135} \
    CONFIG.CLKOUT4_USED {true} \
    CONFIG.CLKOUT5_DRIVES {BUFG} \
    CONFIG.CLKOUT6_DRIVES {BUFG} \
    CONFIG.CLKOUT7_DRIVES {BUFG} \
    CONFIG.FEEDBACK_SOURCE {FDBK_AUTO} \
    CONFIG.MMCM_CLKFBOUT_MULT_F {8.000} \
    CONFIG.MMCM_CLKIN1_PERIOD {8.138} \
    CONFIG.MMCM_CLKIN2_PERIOD {10.000} \
    CONFIG.MMCM_CLKOUT0_DIVIDE_F {8.000} \
    CONFIG.MMCM_CLKOUT1_DIVIDE {80} \
    CONFIG.MMCM_CLKOUT2_DIVIDE {8} \
    CONFIG.MMCM_CLKOUT2_PHASE {270.000} \
    CONFIG.MMCM_CLKOUT3_DIVIDE {8} \
    CONFIG.MMCM_CLKOUT3_PHASE {135.000} \
    CONFIG.MMCM_COMPENSATION {ZHOLD} \
    CONFIG.MMCM_DIVCLK_DIVIDE {1} \
    CONFIG.NUM_OUT_CLKS {4} \
    CONFIG.PRIMITIVE {MMCM} \
    CONFIG.PRIM_IN_FREQ {122.88} \
    CONFIG.PRIM_SOURCE {Differential_clock_capable_pin} \
    CONFIG.USE_RESET {false} \
  ] $clk_wiz_0


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create port connections
  connect_bd_net -net ClockDivider_0_ClockOut [get_bd_pins ClockDivider_0/ClockOut] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net ClockDivider_1_ClockOut [get_bd_pins ClockDivider_1/ClockOut] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins clk_wiz_0/clk_out1] [get_bd_pins clock_122_out] [get_bd_pins ClockDivider_0/aclk]
  connect_bd_net -net clk_wiz_0_clk_out2 [get_bd_pins clk_wiz_0/clk_out2] [get_bd_pins clock_12_out]
  connect_bd_net -net clk_wiz_0_clk_out3 [get_bd_pins clk_wiz_0/clk_out3] [get_bd_pins clock_122_out_ADC]
  connect_bd_net -net clk_wiz_0_clk_out4 [get_bd_pins clk_wiz_0/clk_out4] [get_bd_pins clock_122_out_DAC]
  connect_bd_net -net clock_122_in_n_1 [get_bd_pins clock_122_in_n] [get_bd_pins clk_wiz_0/clk_in1_n]
  connect_bd_net -net clock_122_in_p_1 [get_bd_pins clock_122_in_p] [get_bd_pins clk_wiz_0/clk_in1_p]
  connect_bd_net -net ref_in_10_1 [get_bd_pins ref_in_10] [get_bd_pins ClockDivider_1/aclk]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins util_reduced_logic_0/Res] [get_bd_pins pll_cr]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins xlconcat_0/dout] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconstant_0/dout] [get_bd_pins pll_lock] [get_bd_pins ClockDivider_0/resetn] [get_bd_pins ClockDivider_1/resetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Transmitter
proc create_hier_cell_Transmitter { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_Transmitter() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_keyerBRAM

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 TX_IQ_In

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_sidetoneampl


  # Create pins
  create_bd_pin -dir O CWSampleSelect
  create_bd_pin -dir I -from 31 -to 0 TXConfig
  create_bd_pin -dir O -from 15 -to 0 TXDACData
  create_bd_pin -dir I -from 31 -to 0 TXLOTune
  create_bd_pin -dir O -from 15 -to 0 TXMagnitude
  create_bd_pin -dir O -from 15 -to 0 TXSamplesToRX
  create_bd_pin -dir I TXStrobe
  create_bd_pin -dir I -from 31 -to 0 TXTestFreq
  create_bd_pin -dir I TX_ENABLE
  create_bd_pin -dir I clk12
  create_bd_pin -dir I -type clk clk122
  create_bd_pin -dir I cw_key_down
  create_bd_pin -dir O cw_ptt1
  create_bd_pin -dir I -from 31 -to 0 keyer_config
  create_bd_pin -dir I -type rst resetn1
  create_bd_pin -dir I resetn_12
  create_bd_pin -dir I Byteswap
  create_bd_pin -dir O -from 0 -to 0 txmux_reset

  # Create instance: IQ_Modulation_Select, and set properties
  set IQ_Modulation_Select [ create_bd_cell -type container -reference IQ_Modulation_Select IQ_Modulation_Select ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {IQ_Modulation_Select.bd} \
    CONFIG.ACTIVE_SYNTH_BD {IQ_Modulation_Select.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {IQ_Modulation_Select.bd} \
    CONFIG.LIST_SYNTH_BD {IQ_Modulation_Select.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $IQ_Modulation_Select


  # Create instance: TX_DUC_0, and set properties
  set TX_DUC_0 [ create_bd_cell -type container -reference TX_DUC TX_DUC_0 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {TX_DUC.bd} \
    CONFIG.ACTIVE_SYNTH_BD {TX_DUC.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {TX_DUC.bd} \
    CONFIG.LIST_SYNTH_BD {TX_DUC.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $TX_DUC_0


  # Create instance: TX_Envelope
  create_hier_cell_TX_Envelope $hier_obj TX_Envelope

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DOUT_WIDTH {3} \
  ] $xlslice_0


  # Create instance: xlslice_deinterleave, and set properties
  set xlslice_deinterleave [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_deinterleave ]
  set_property -dict [list \
    CONFIG.DIN_FROM {30} \
    CONFIG.DIN_TO {30} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_deinterleave


  # Create instance: xlslice_enable, and set properties
  set xlslice_enable [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_enable ]
  set_property -dict [list \
    CONFIG.DIN_FROM {31} \
    CONFIG.DIN_TO {31} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_enable


  # Create instance: xlslice_rate, and set properties
  set xlslice_rate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_rate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {3} \
    CONFIG.DIN_TO {3} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_rate


  # Create instance: xlslice_reset, and set properties
  set xlslice_reset [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_reset ]
  set_property -dict [list \
    CONFIG.DIN_FROM {29} \
    CONFIG.DIN_TO {29} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_reset


  # Create instance: regmux_2_1_1, and set properties
  set block_name regmux_2_1
  set block_cell_name regmux_2_1_1
  if { [catch {set regmux_2_1_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $regmux_2_1_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlconstant_proto1, and set properties
  set xlconstant_proto1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_proto1 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {320} \
    CONFIG.CONST_WIDTH {16} \
  ] $xlconstant_proto1


  # Create instance: xlconstant_proto2, and set properties
  set xlconstant_proto2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_proto2 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {80} \
    CONFIG.CONST_WIDTH {16} \
  ] $xlconstant_proto2


  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins S_AXI_keyerBRAM] [get_bd_intf_pins IQ_Modulation_Select/S_AXI_keyerBRAM]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins m_axis_sidetoneampl] [get_bd_intf_pins IQ_Modulation_Select/m_axis_sidetoneampl]
  connect_bd_intf_net -intf_net IQ_Modulation_Select_m_axis_envelope [get_bd_intf_pins IQ_Modulation_Select/m_axis_envelope] [get_bd_intf_pins TX_Envelope/S_AXIS]
  connect_bd_intf_net -intf_net IQ_Modulation_Select_output_axis [get_bd_intf_pins IQ_Modulation_Select/m_axis_TXMod] [get_bd_intf_pins TX_DUC_0/S_AXIS]
  connect_bd_intf_net -intf_net TX_IQ_In_1 [get_bd_intf_pins TX_IQ_In] [get_bd_intf_pins IQ_Modulation_Select/TX_IQ_in]

  # Create port connections
  connect_bd_net -net Byteswap_1 [get_bd_pins Byteswap] [get_bd_pins IQ_Modulation_Select/Byteswap]
  connect_bd_net -net D_register_1_dout [get_bd_pins TX_Envelope/TXMagnitude] [get_bd_pins TXMagnitude]
  connect_bd_net -net IQ_Modulation_Select_TX_OPENABLE [get_bd_pins IQ_Modulation_Select/TX_OUTPUTENABLE] [get_bd_pins TX_DUC_0/sel]
  connect_bd_net -net Net5 [get_bd_pins clk122] [get_bd_pins IQ_Modulation_Select/clk122] [get_bd_pins TX_DUC_0/clk122] [get_bd_pins TX_Envelope/clk122] [get_bd_pins regmux_2_1_1/aclk]
  connect_bd_net -net TXConfig_1 [get_bd_pins TXConfig] [get_bd_pins TX_DUC_0/TXConfig] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_deinterleave/Din] [get_bd_pins xlslice_enable/Din] [get_bd_pins xlslice_rate/Din] [get_bd_pins xlslice_reset/Din]
  connect_bd_net -net TXStrobe_1 [get_bd_pins TXStrobe] [get_bd_pins IQ_Modulation_Select/TX_Strobe]
  connect_bd_net -net TX_DUC_0_TXDACData [get_bd_pins TX_DUC_0/TXDACData] [get_bd_pins TXDACData]
  connect_bd_net -net TX_DUC_0_TXSamplesToRX [get_bd_pins TX_DUC_0/TXSamplesToRX] [get_bd_pins TXSamplesToRX]
  connect_bd_net -net TX_ENABLE_1 [get_bd_pins TX_ENABLE] [get_bd_pins IQ_Modulation_Select/TX_ENABLE]
  connect_bd_net -net TX_LO_Tune_1 [get_bd_pins TXLOTune] [get_bd_pins TX_DUC_0/TXLOTune]
  connect_bd_net -net TX_Test_Freq_1 [get_bd_pins TXTestFreq] [get_bd_pins IQ_Modulation_Select/TXTestFreq]
  connect_bd_net -net clk12_1 -boundary_type lower [get_bd_pins clk12]
  connect_bd_net -net cw_key_down_1 [get_bd_pins cw_key_down] [get_bd_pins IQ_Modulation_Select/cw_key_down]
  connect_bd_net -net cw_key_ramp_0_CW_PTT1 [get_bd_pins IQ_Modulation_Select/cw_ptt] [get_bd_pins cw_ptt1]
  connect_bd_net -net keyer_config_1 [get_bd_pins keyer_config] [get_bd_pins IQ_Modulation_Select/keyer_config]
  connect_bd_net -net regmux_2_1_1_dout1 [get_bd_pins regmux_2_1_1/dout] [get_bd_pins TX_DUC_0/cic_rate] [get_bd_pins TX_Envelope/cfg_data]
  connect_bd_net -net resetn_12_1 -boundary_type lower [get_bd_pins resetn_12]
  connect_bd_net -net resetn_2 [get_bd_pins resetn1] [get_bd_pins IQ_Modulation_Select/resetn] [get_bd_pins TX_DUC_0/resetn1] [get_bd_pins TX_Envelope/resetn1] [get_bd_pins regmux_2_1_1/resetn]
  connect_bd_net -net util_reduced_logic_0_Res1 [get_bd_pins IQ_Modulation_Select/CWSampleSelect] [get_bd_pins CWSampleSelect]
  connect_bd_net -net xlconstant_proto1_dout [get_bd_pins xlconstant_proto1/dout] [get_bd_pins regmux_2_1_1/din0]
  connect_bd_net -net xlconstant_proto2_dout [get_bd_pins xlconstant_proto2/dout] [get_bd_pins regmux_2_1_1/din1]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlslice_0/Dout] [get_bd_pins IQ_Modulation_Select/Modulation_Setup]
  connect_bd_net -net xlslice_deinterleave_Dout [get_bd_pins xlslice_deinterleave/Dout] [get_bd_pins IQ_Modulation_Select/Deinterleave]
  connect_bd_net -net xlslice_enable_Dout [get_bd_pins xlslice_enable/Dout] [get_bd_pins IQ_Modulation_Select/IQEnable]
  connect_bd_net -net xlslice_rate_Dout [get_bd_pins xlslice_rate/Dout] [get_bd_pins IQ_Modulation_Select/protocol_2] [get_bd_pins regmux_2_1_1/sel]
  connect_bd_net -net xlslice_reset_Dout [get_bd_pins xlslice_reset/Dout] [get_bd_pins txmux_reset]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: Receiver
proc create_hier_cell_Receiver { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_Receiver() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 RX_Data

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_2


  # Create pins
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -from 15 -to 0 adc1
  create_bd_pin -dir I -from 15 -to 0 adc2
  create_bd_pin -dir I -type rst rstn1
  create_bd_pin -dir I -from 15 -to 0 tx_samples
  create_bd_pin -dir I Byteswap

  # Create instance: dualDDC10
  create_hier_cell_dualDDC10 $hier_obj dualDDC10

  # Create instance: axis_constant_0, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_0
  if { [catch {set axis_constant_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIL_ConfigReg_256_RX_0, and set properties
  set block_name AXIL_ConfigReg_256
  set block_cell_name AXIL_ConfigReg_256_RX_0
  if { [catch {set AXIL_ConfigReg_256_RX_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ConfigReg_256_RX_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.INITIAL_VALUE_word_2 {0} \
    CONFIG.INITIAL_VALUE_word_5 {0} \
  ] $AXIL_ConfigReg_256_RX_0


  # Create instance: AXIL_ConfigReg_256_RX_1, and set properties
  set block_name AXIL_ConfigReg_256
  set block_cell_name AXIL_ConfigReg_256_RX_1
  if { [catch {set AXIL_ConfigReg_256_RX_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ConfigReg_256_RX_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.INITIAL_VALUE_word_0 {0} \
    CONFIG.INITIAL_VALUE_word_3 {0} \
    CONFIG.INITIAL_VALUE_word_6 {0} \
  ] $AXIL_ConfigReg_256_RX_1


  # Create instance: dualDDC98
  create_hier_cell_dualDDC98 $hier_obj dualDDC98

  # Create instance: dualDDC32
  create_hier_cell_dualDDC32 $hier_obj dualDDC32

  # Create instance: dualDDC54
  create_hier_cell_dualDDC54 $hier_obj dualDDC54

  # Create instance: dualDDC76
  create_hier_cell_dualDDC76 $hier_obj dualDDC76

  # Create instance: xlslice_10config, and set properties
  set xlslice_10config [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10config ]
  set_property -dict [list \
    CONFIG.DIN_FROM {3} \
    CONFIG.DOUT_WIDTH {4} \
  ] $xlslice_10config


  # Create instance: xlslice_32config, and set properties
  set xlslice_32config [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_32config ]
  set_property -dict [list \
    CONFIG.DIN_FROM {7} \
    CONFIG.DIN_TO {4} \
    CONFIG.DOUT_WIDTH {4} \
  ] $xlslice_32config


  # Create instance: xlslice_54config, and set properties
  set xlslice_54config [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_54config ]
  set_property -dict [list \
    CONFIG.DIN_FROM {11} \
    CONFIG.DIN_TO {8} \
    CONFIG.DOUT_WIDTH {4} \
  ] $xlslice_54config


  # Create instance: xlslice_76config, and set properties
  set xlslice_76config [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_76config ]
  set_property -dict [list \
    CONFIG.DIN_FROM {15} \
    CONFIG.DIN_TO {12} \
    CONFIG.DOUT_WIDTH {4} \
  ] $xlslice_76config


  # Create instance: xlslice_98config, and set properties
  set xlslice_98config [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_98config ]
  set_property -dict [list \
    CONFIG.DIN_FROM {19} \
    CONFIG.DIN_TO {16} \
    CONFIG.DOUT_WIDTH {4} \
  ] $xlslice_98config


  # Create instance: xlslice_10rate, and set properties
  set xlslice_10rate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10rate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {5} \
    CONFIG.DOUT_WIDTH {6} \
  ] $xlslice_10rate


  # Create instance: xlslice_32rate, and set properties
  set xlslice_32rate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_32rate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {11} \
    CONFIG.DIN_TO {6} \
    CONFIG.DOUT_WIDTH {6} \
  ] $xlslice_32rate


  # Create instance: xlslice_54rate, and set properties
  set xlslice_54rate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_54rate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {17} \
    CONFIG.DIN_TO {12} \
    CONFIG.DOUT_WIDTH {6} \
  ] $xlslice_54rate


  # Create instance: xlslice_76rate, and set properties
  set xlslice_76rate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_76rate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {23} \
    CONFIG.DIN_TO {18} \
    CONFIG.DOUT_WIDTH {6} \
  ] $xlslice_76rate


  # Create instance: xlslice_98rate, and set properties
  set xlslice_98rate [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_98rate ]
  set_property -dict [list \
    CONFIG.DIN_FROM {29} \
    CONFIG.DIN_TO {24} \
    CONFIG.DOUT_WIDTH {6} \
  ] $xlslice_98rate


  # Create instance: xlslice_enable, and set properties
  set xlslice_enable [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_enable ]
  set_property -dict [list \
    CONFIG.DIN_FROM {30} \
    CONFIG.DIN_TO {30} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_enable


  # Create instance: AXI_FIFO_overflow_re_0, and set properties
  set block_name AXI_FIFO_overflow_reader
  set block_cell_name AXI_FIFO_overflow_re_0
  if { [catch {set AXI_FIFO_overflow_re_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_FIFO_overflow_re_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIS_DDC_Multiplexer_0, and set properties
  set block_name AXIS_DDC_Multiplexer
  set block_cell_name AXIS_DDC_Multiplexer_0
  if { [catch {set AXIS_DDC_Multiplexer_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_DDC_Multiplexer_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [list \
    CONFIG.Amplitude_Mode {Unit_Circle} \
    CONFIG.DATA_Has_TLAST {Not_Required} \
    CONFIG.DDS_Clock_Rate {122.88} \
    CONFIG.Frequency_Resolution {0.05} \
    CONFIG.Has_ACLKEN {false} \
    CONFIG.Has_ARESETn {true} \
    CONFIG.Has_Phase_Out {false} \
    CONFIG.Latency {8} \
    CONFIG.M_DATA_Has_TUSER {Not_Required} \
    CONFIG.Noise_Shaping {Auto} \
    CONFIG.Output_Frequency1 {0} \
    CONFIG.Output_Selection {Sine} \
    CONFIG.Output_Width {16} \
    CONFIG.PINC1 {0} \
    CONFIG.Phase_Increment {Streaming} \
    CONFIG.Phase_Width {32} \
    CONFIG.S_PHASE_Has_TUSER {Not_Required} \
    CONFIG.Spurious_Free_Dynamic_Range {94} \
  ] $dds_compiler_0


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create interface connections
  connect_bd_intf_net -intf_net AXIS_DDC_Multiplexer_0_m_axis [get_bd_intf_pins RX_Data] [get_bd_intf_pins AXIS_DDC_Multiplexer_0/m_axis]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins s_axi_0] [get_bd_intf_pins AXIL_ConfigReg_256_RX_0/s_axi]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins s_axi_1] [get_bd_intf_pins AXIL_ConfigReg_256_RX_1/s_axi]
  connect_bd_intf_net -intf_net axis_constant_0_m_axis [get_bd_intf_pins axis_constant_0/m_axis] [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net dualDDC10_m_axis_0 [get_bd_intf_pins dualDDC10/m_axis_0] [get_bd_intf_pins AXIS_DDC_Multiplexer_0/s00_axis]
  connect_bd_intf_net -intf_net dualDDC10_m_axis_1 [get_bd_intf_pins dualDDC10/m_axis_1] [get_bd_intf_pins AXIS_DDC_Multiplexer_0/s01_axis]
  connect_bd_intf_net -intf_net dualDDC32_m_axis_0 [get_bd_intf_pins dualDDC32/m_axis_0] [get_bd_intf_pins AXIS_DDC_Multiplexer_0/s02_axis]
  connect_bd_intf_net -intf_net dualDDC32_m_axis_1 [get_bd_intf_pins dualDDC32/m_axis_1] [get_bd_intf_pins AXIS_DDC_Multiplexer_0/s03_axis]
  connect_bd_intf_net -intf_net dualDDC54_m_axis_0 [get_bd_intf_pins dualDDC54/m_axis_0] [get_bd_intf_pins AXIS_DDC_Multiplexer_0/s04_axis]
  connect_bd_intf_net -intf_net dualDDC54_m_axis_1 [get_bd_intf_pins dualDDC54/m_axis_1] [get_bd_intf_pins AXIS_DDC_Multiplexer_0/s05_axis]
  connect_bd_intf_net -intf_net dualDDC76_m_axis_0 [get_bd_intf_pins dualDDC76/m_axis_0] [get_bd_intf_pins AXIS_DDC_Multiplexer_0/s06_axis]
  connect_bd_intf_net -intf_net dualDDC76_m_axis_1 [get_bd_intf_pins dualDDC76/m_axis_1] [get_bd_intf_pins AXIS_DDC_Multiplexer_0/s07_axis]
  connect_bd_intf_net -intf_net dualDDC98_m_axis_0 [get_bd_intf_pins dualDDC98/m_axis_0] [get_bd_intf_pins AXIS_DDC_Multiplexer_0/s08_axis]
  connect_bd_intf_net -intf_net dualDDC98_m_axis_1 [get_bd_intf_pins dualDDC98/m_axis_1] [get_bd_intf_pins AXIS_DDC_Multiplexer_0/s09_axis]
  connect_bd_intf_net -intf_net s_axi_2_1 [get_bd_intf_pins s_axi_2] [get_bd_intf_pins AXI_FIFO_overflow_re_0/s_axi]

  # Create port connections
  connect_bd_net -net ADC1_2 [get_bd_pins adc1] [get_bd_pins dualDDC10/ADC1] [get_bd_pins dualDDC32/ADC1] [get_bd_pins dualDDC54/ADC1] [get_bd_pins dualDDC76/ADC1] [get_bd_pins dualDDC98/ADC1]
  connect_bd_net -net ADC2_2 [get_bd_pins adc2] [get_bd_pins dualDDC10/ADC2] [get_bd_pins dualDDC32/ADC2] [get_bd_pins dualDDC54/ADC2] [get_bd_pins dualDDC76/ADC2] [get_bd_pins dualDDC98/ADC2]
  connect_bd_net -net AXIL_ConfigReg_256_RX_0_config_reg0 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg0] [get_bd_pins dualDDC10/DDCAFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_0_config_reg1 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg1] [get_bd_pins dualDDC10/DDCBFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_1_config_reg0 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg0] [get_bd_pins dualDDC98/DDCAFreq]
  connect_bd_net -net AXIL_ConfigReg_256_RX_1_config_reg2 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg2] [get_bd_pins axis_constant_0/cfg_data]
  connect_bd_net -net AXIL_ConfigReg_256_RX_1_config_reg3 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg3] [get_bd_pins AXIS_DDC_Multiplexer_0/DDCconfig]
  connect_bd_net -net Byteswap_1 [get_bd_pins Byteswap] [get_bd_pins dualDDC98/Byteswap] [get_bd_pins dualDDC76/Byteswap] [get_bd_pins dualDDC54/Byteswap] [get_bd_pins dualDDC32/Byteswap] [get_bd_pins dualDDC10/Byteswap]
  connect_bd_net -net DDCAFreq_1 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg2] [get_bd_pins dualDDC32/DDCAFreq]
  connect_bd_net -net DDCAFreq_2 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg4] [get_bd_pins dualDDC54/DDCAFreq]
  connect_bd_net -net DDCAFreq_3 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg6] [get_bd_pins dualDDC76/DDCAFreq]
  connect_bd_net -net DDCBFreq_1 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg3] [get_bd_pins dualDDC32/DDCBFreq]
  connect_bd_net -net DDCBFreq_2 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg5] [get_bd_pins dualDDC54/DDCBFreq]
  connect_bd_net -net DDCBFreq_3 [get_bd_pins AXIL_ConfigReg_256_RX_0/config_reg7] [get_bd_pins dualDDC76/DDCBFreq]
  connect_bd_net -net DDCBFreq_4 [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg1] [get_bd_pins dualDDC98/DDCBFreq]
  connect_bd_net -net DualDDCConfig_1 [get_bd_pins xlslice_10config/Dout] [get_bd_pins dualDDC10/DualDDCConfig]
  connect_bd_net -net InputFIFO_rstn_1 [get_bd_pins AXIS_DDC_Multiplexer_0/fiforstn] [get_bd_pins dualDDC10/InputFIFO_rstn] [get_bd_pins dualDDC32/InputFIFO_rstn] [get_bd_pins dualDDC54/InputFIFO_rstn] [get_bd_pins dualDDC76/InputFIFO_rstn] [get_bd_pins dualDDC98/InputFIFO_rstn]
  connect_bd_net -net Net [get_bd_pins AXIL_ConfigReg_256_RX_1/config_reg4] [get_bd_pins xlslice_10config/Din] [get_bd_pins xlslice_32config/Din] [get_bd_pins xlslice_54config/Din] [get_bd_pins xlslice_76config/Din] [get_bd_pins xlslice_98config/Din] [get_bd_pins xlslice_enable/Din]
  connect_bd_net -net Net1 [get_bd_pins AXIS_DDC_Multiplexer_0/DDCconfigout] [get_bd_pins xlslice_10rate/Din] [get_bd_pins xlslice_32rate/Din] [get_bd_pins xlslice_54rate/Din] [get_bd_pins xlslice_76rate/Din] [get_bd_pins xlslice_98rate/Din]
  connect_bd_net -net Net2 [get_bd_pins xlconstant_0/dout] [get_bd_pins AXI_FIFO_overflow_re_0/overflow11] [get_bd_pins AXI_FIFO_overflow_re_0/overflow12] [get_bd_pins AXI_FIFO_overflow_re_0/overflow13] [get_bd_pins AXI_FIFO_overflow_re_0/overflow14] [get_bd_pins AXI_FIFO_overflow_re_0/overflow15] [get_bd_pins AXI_FIFO_overflow_re_0/overflow16]
  connect_bd_net -net RX_Test_1 [get_bd_pins dds_compiler_0/m_axis_data_tdata] [get_bd_pins dualDDC10/RX_Test] [get_bd_pins dualDDC32/RX_Test] [get_bd_pins dualDDC54/RX_Test] [get_bd_pins dualDDC76/RX_Test] [get_bd_pins dualDDC98/RX_Test]
  connect_bd_net -net TX_samples_1 [get_bd_pins tx_samples] [get_bd_pins dualDDC10/TX_samples] [get_bd_pins dualDDC98/TX_samples] [get_bd_pins dualDDC76/TX_samples] [get_bd_pins dualDDC54/TX_samples] [get_bd_pins dualDDC32/TX_samples]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins dualDDC10/aclk] [get_bd_pins axis_constant_0/aclk] [get_bd_pins AXIL_ConfigReg_256_RX_0/aclk] [get_bd_pins AXIL_ConfigReg_256_RX_1/aclk] [get_bd_pins dualDDC98/aclk] [get_bd_pins dualDDC76/aclk] [get_bd_pins dualDDC54/aclk] [get_bd_pins dualDDC32/aclk] [get_bd_pins AXI_FIFO_overflow_re_0/aclk] [get_bd_pins AXIS_DDC_Multiplexer_0/aclk] [get_bd_pins dds_compiler_0/aclk]
  connect_bd_net -net dualDDC10_DDC0_ovr [get_bd_pins dualDDC10/DDC0_ovr] [get_bd_pins AXI_FIFO_overflow_re_0/overflow1]
  connect_bd_net -net dualDDC10_DDC1_ovr [get_bd_pins dualDDC10/DDC1_ovr] [get_bd_pins AXI_FIFO_overflow_re_0/overflow2]
  connect_bd_net -net dualDDC32_DDC0_ovr [get_bd_pins dualDDC32/DDC0_ovr] [get_bd_pins AXI_FIFO_overflow_re_0/overflow3]
  connect_bd_net -net dualDDC32_DDC1_ovr [get_bd_pins dualDDC32/DDC1_ovr] [get_bd_pins AXI_FIFO_overflow_re_0/overflow4]
  connect_bd_net -net dualDDC54_DDC0_ovr [get_bd_pins dualDDC54/DDC0_ovr] [get_bd_pins AXI_FIFO_overflow_re_0/overflow5]
  connect_bd_net -net dualDDC54_DDC1_ovr [get_bd_pins dualDDC54/DDC1_ovr] [get_bd_pins AXI_FIFO_overflow_re_0/overflow6]
  connect_bd_net -net dualDDC76_DDC0_ovr [get_bd_pins dualDDC76/DDC0_ovr] [get_bd_pins AXI_FIFO_overflow_re_0/overflow7]
  connect_bd_net -net dualDDC76_DDC1_ovr [get_bd_pins dualDDC76/DDC1_ovr] [get_bd_pins AXI_FIFO_overflow_re_0/overflow8]
  connect_bd_net -net dualDDC98_DDC0_ovr [get_bd_pins dualDDC98/DDC0_ovr] [get_bd_pins AXI_FIFO_overflow_re_0/overflow9]
  connect_bd_net -net dualDDC98_DDC1_ovr [get_bd_pins dualDDC98/DDC1_ovr] [get_bd_pins AXI_FIFO_overflow_re_0/overflow10]
  connect_bd_net -net rstn1_1 [get_bd_pins rstn1] [get_bd_pins dualDDC10/aresetn] [get_bd_pins AXIL_ConfigReg_256_RX_0/aresetn] [get_bd_pins AXIL_ConfigReg_256_RX_1/aresetn] [get_bd_pins dualDDC32/aresetn] [get_bd_pins dualDDC54/aresetn] [get_bd_pins dualDDC76/aresetn] [get_bd_pins dualDDC98/aresetn] [get_bd_pins AXI_FIFO_overflow_re_0/aresetn] [get_bd_pins AXIS_DDC_Multiplexer_0/aresetn] [get_bd_pins dds_compiler_0/aresetn]
  connect_bd_net -net xlslice_10rate_Dout [get_bd_pins xlslice_10rate/Dout] [get_bd_pins dualDDC10/DualDDCRate]
  connect_bd_net -net xlslice_32config_Dout [get_bd_pins xlslice_32config/Dout] [get_bd_pins dualDDC32/DualDDCConfig]
  connect_bd_net -net xlslice_32rate_Dout [get_bd_pins xlslice_32rate/Dout] [get_bd_pins dualDDC32/DualDDCRate]
  connect_bd_net -net xlslice_54config_Dout [get_bd_pins xlslice_54config/Dout] [get_bd_pins dualDDC54/DualDDCConfig]
  connect_bd_net -net xlslice_54rate_Dout [get_bd_pins xlslice_54rate/Dout] [get_bd_pins dualDDC54/DualDDCRate]
  connect_bd_net -net xlslice_76config_Dout [get_bd_pins xlslice_76config/Dout] [get_bd_pins dualDDC76/DualDDCConfig]
  connect_bd_net -net xlslice_76rate_Dout [get_bd_pins xlslice_76rate/Dout] [get_bd_pins dualDDC76/DualDDCRate]
  connect_bd_net -net xlslice_98config_Dout [get_bd_pins xlslice_98config/Dout] [get_bd_pins dualDDC98/DualDDCConfig]
  connect_bd_net -net xlslice_98rate_Dout [get_bd_pins xlslice_98rate/Dout] [get_bd_pins dualDDC98/DualDDCRate]
  connect_bd_net -net xlslice_enable_Dout [get_bd_pins xlslice_enable/Dout] [get_bd_pins AXIS_DDC_Multiplexer_0/enabled]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: RF_interfaces
proc create_hier_cell_RF_interfaces { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_RF_interfaces() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_alex


  # Create pins
  create_bd_pin -dir O -type clk ADC1_ATTEN_CLK
  create_bd_pin -dir O ADC1_ATTEN_DAT
  create_bd_pin -dir O ADC1_ATTEN_LE
  create_bd_pin -dir O -type clk ADC2_ATTEN_CLK
  create_bd_pin -dir O ADC2_ATTEN_DAT
  create_bd_pin -dir O ADC2_ATTEN_LE
  create_bd_pin -dir I -from 31 -to 0 ADC_Ctrl
  create_bd_pin -dir O -from 1 -to 0 ADC_Randomise
  create_bd_pin -dir O -from 0 -to 0 ATU_TUNE
  create_bd_pin -dir I BUFF_Alex_Pin1
  set_property USER_COMMENTS.comment_4 "Unused Alex input pins" [get_bd_pins /RF_interfaces/BUFF_Alex_Pin1]
  create_bd_pin -dir I BUFF_Alex_Pin8
  create_bd_pin -dir O -from 0 -to 0 BUF_Out_FPGA
  create_bd_pin -dir O CTRL_TRSW
  create_bd_pin -dir I -from 31 -to 0 DAC_Ctrl
  create_bd_pin -dir O -from 5 -to 0 Dac_Atten
  create_bd_pin -dir O -from 0 -to 0 Dac_Atten_Clk
  create_bd_pin -dir O -from 0 -to 0 Dac_Atten_Data
  create_bd_pin -dir O -from 0 -to 0 Dac_Atten_LE
  create_bd_pin -dir O -from 0 -to 0 Dac_Atten_Mode
  create_bd_pin -dir O -from 23 -to 0 GPIO_OUT
  create_bd_pin -dir O -from 0 -to 0 MOX_strobe
  create_bd_pin -dir I -from 31 -to 0 RF_GPIO
  create_bd_pin -dir O -type clk RF_SPI_CK
  create_bd_pin -dir O RF_SPI_DATA
  create_bd_pin -dir O RF_SPI_RX_LOAD
  create_bd_pin -dir O RF_SPI_TX_LOAD
  create_bd_pin -dir O -from 0 -to 0 TXRX_RELAY
  create_bd_pin -dir O TX_DAC_PWM
  create_bd_pin -dir I aclk
  create_bd_pin -dir I -type clk codec_clk
  create_bd_pin -dir I -from 0 -to 0 keyer_PTT
  create_bd_pin -dir I -type rst rstn
  create_bd_pin -dir I -from 9 -to 0 status_in
  create_bd_pin -dir O -from 9 -to 0 status_out
  create_bd_pin -dir O Dbounced_Key_Dash
  create_bd_pin -dir O Debounced_Key_Dot
  create_bd_pin -dir O IO8
  create_bd_pin -dir O Driver_PA_En

  # Create instance: AttenDrivers
  create_hier_cell_AttenDrivers $hier_obj AttenDrivers

  # Create instance: Strobes
  create_hier_cell_Strobes $hier_obj Strobes

  # Create instance: debounce
  create_hier_cell_debounce $hier_obj debounce

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_0


  # Create instance: xlconstant_drive0, and set properties
  set xlconstant_drive0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_drive0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_drive0


  # Create instance: xlconstant_drive1, and set properties
  set xlconstant_drive1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_drive1 ]

  # Create instance: AXILite_Alex_SPI_0, and set properties
  set block_name AXILite_Alex_SPI
  set block_cell_name AXILite_Alex_SPI_0
  if { [catch {set AXILite_Alex_SPI_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXILite_Alex_SPI_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins s_axi_alex] [get_bd_intf_pins AXILite_Alex_SPI_0/s_axi]

  # Create port connections
  connect_bd_net -net AXILite_Alex_SPI_0_Rx_load_strobe [get_bd_pins AXILite_Alex_SPI_0/Rx_load_strobe] [get_bd_pins RF_SPI_RX_LOAD]
  connect_bd_net -net AXILite_Alex_SPI_0_SPI_ck [get_bd_pins AXILite_Alex_SPI_0/SPI_ck] [get_bd_pins RF_SPI_CK]
  connect_bd_net -net AXILite_Alex_SPI_0_SPI_data [get_bd_pins AXILite_Alex_SPI_0/SPI_data] [get_bd_pins RF_SPI_DATA]
  connect_bd_net -net AXILite_Alex_SPI_0_Tx_load_strobe [get_bd_pins AXILite_Alex_SPI_0/Tx_load_strobe] [get_bd_pins RF_SPI_TX_LOAD]
  connect_bd_net -net Net [get_bd_pins ADC_Ctrl] [get_bd_pins AttenDrivers/ADC_Ctrl]
  connect_bd_net -net Net1 [get_bd_pins DAC_Ctrl] [get_bd_pins AttenDrivers/DAC_Ctrl]
  connect_bd_net -net PWM_DAC_0_DAC_bit [get_bd_pins AttenDrivers/TX_DAC_PWM] [get_bd_pins TX_DAC_PWM]
  connect_bd_net -net RF_GPIO_1 [get_bd_pins RF_GPIO] [get_bd_pins Strobes/RF_GPIO]
  connect_bd_net -net SerialAtten_0_ATTN_CLK [get_bd_pins AttenDrivers/ADC1_ATTEN_CLK] [get_bd_pins ADC1_ATTEN_CLK]
  connect_bd_net -net SerialAtten_0_ATTN_DATA [get_bd_pins AttenDrivers/ADC1_ATTEN_DAT] [get_bd_pins ADC1_ATTEN_DAT]
  connect_bd_net -net SerialAtten_0_ATTN_LE [get_bd_pins AttenDrivers/ADC1_ATTEN_LE] [get_bd_pins ADC1_ATTEN_LE]
  connect_bd_net -net SerialAtten_1_ATTN_CLK [get_bd_pins AttenDrivers/ADC2_ATTEN_CLK] [get_bd_pins ADC2_ATTEN_CLK]
  connect_bd_net -net SerialAtten_1_ATTN_DATA [get_bd_pins AttenDrivers/ADC2_ATTEN_DAT] [get_bd_pins ADC2_ATTEN_DAT]
  connect_bd_net -net SerialAtten_1_ATTN_LE [get_bd_pins AttenDrivers/ADC2_ATTEN_LE] [get_bd_pins ADC2_ATTEN_LE]
  connect_bd_net -net Strobes_ADC_Randomise [get_bd_pins Strobes/ADC_Randomise] [get_bd_pins ADC_Randomise]
  connect_bd_net -net Strobes_Driver_PA_En [get_bd_pins Strobes/Driver_PA_En] [get_bd_pins Driver_PA_En] [get_bd_pins AttenDrivers/tx_strobe]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins AttenDrivers/clk122] [get_bd_pins Strobes/aclk] [get_bd_pins AXILite_Alex_SPI_0/aclk]
  connect_bd_net -net clk_1 [get_bd_pins codec_clk] [get_bd_pins AttenDrivers/clk] [get_bd_pins debounce/clk]
  connect_bd_net -net debounce_ATU_Tune_Req [get_bd_pins debounce/ATU_Tune_Req] [get_bd_pins Strobes/ATU_Tune_Req]
  connect_bd_net -net debounce_Debounced_Key_Dash [get_bd_pins debounce/Debounced_Key_Dash] [get_bd_pins Dbounced_Key_Dash]
  connect_bd_net -net debounce_Debounced_Key_Dot [get_bd_pins debounce/Debounced_Key_Dot] [get_bd_pins Debounced_Key_Dot]
  connect_bd_net -net debounce_IO8 [get_bd_pins debounce/IO8] [get_bd_pins IO8]
  connect_bd_net -net debounce_status_out [get_bd_pins debounce/status_out] [get_bd_pins status_out]
  connect_bd_net -net keyer_PTT_1 [get_bd_pins keyer_PTT] [get_bd_pins Strobes/keyer_PTT]
  connect_bd_net -net regmux_2_1_1_dout [get_bd_pins AttenDrivers/Dac_Atten] [get_bd_pins Dac_Atten]
  connect_bd_net -net rstn_1 [get_bd_pins rstn] [get_bd_pins AttenDrivers/rstn] [get_bd_pins debounce/rstn] [get_bd_pins Strobes/rstn] [get_bd_pins AXILite_Alex_SPI_0/aresetn]
  connect_bd_net -net status_in_1 [get_bd_pins status_in] [get_bd_pins debounce/status_in]
  connect_bd_net -net util_reduced_logic_1_Res [get_bd_pins Strobes/MOX_strobe] [get_bd_pins MOX_strobe]
  connect_bd_net -net util_reduced_logic_2_Res [get_bd_pins Strobes/CTRL_TRSW] [get_bd_pins CTRL_TRSW]
  connect_bd_net -net util_reduced_logic_3_Res [get_bd_pins Strobes/TXRX_RELAY] [get_bd_pins util_vector_logic_0/Op1] [get_bd_pins AXILite_Alex_SPI_0/TX_Strobe]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins util_vector_logic_0/Res] [get_bd_pins TXRX_RELAY]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconstant_drive1/dout] [get_bd_pins Dac_Atten_LE]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins xlconstant_drive0/dout] [get_bd_pins BUF_Out_FPGA] [get_bd_pins Dac_Atten_Clk] [get_bd_pins Dac_Atten_Data] [get_bd_pins Dac_Atten_Mode]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins Strobes/GPIO_OUT] [get_bd_pins GPIO_OUT]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins Strobes/ATU_TUNE] [get_bd_pins ATU_TUNE]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: PCIe
proc create_hier_cell_PCIe { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_PCIe() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M00_AXI_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M01_AXI_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M03_AXI_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M08_AXI_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI_Alex

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI_full_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:spi_rtl:1.0 PROM_SPI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 diff_clock_rtl_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_7x_mgt_rtl_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M09_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M12_AXI_WB


  # Create pins
  create_bd_pin -dir I ADC1_Overrange
  create_bd_pin -dir I ADC2_Overrange
  create_bd_pin -dir O -from 31 -to 0 ADCCtrlData
  create_bd_pin -dir O -from 0 -to 0 ADC_CLK
  create_bd_pin -dir I ADC_MISO
  create_bd_pin -dir O -from 0 -to 0 ADC_MOSI
  create_bd_pin -dir O -from 31 -to 0 CodecConfigData
  create_bd_pin -dir O -from 31 -to 0 DACCtrlData
  create_bd_pin -dir O -from 0 -to 0 FPGA_CM4_EN
  create_bd_pin -dir O -from 31 -to 0 KeyerConfigData
  create_bd_pin -dir O -from 15 -to 0 LEDDrivers
  create_bd_pin -dir O -from 0 -to 0 PCIECLKREQN
  create_bd_pin -dir O -from 0 -to 0 PCI_LINK_LED
  create_bd_pin -dir I PCIe_T_SMBCLK
  create_bd_pin -dir I PCIe_T_SMBDAT
  set_property USER_COMMENTS.comment_0 "unused pins for PCIe bus configuration" [get_bd_pins /PCIe/PCIe_T_SMBDAT]
  set_property USER_COMMENTS.comment_5 "unused pins for PCIe bus configuration" [get_bd_pins /PCIe/PCIe_T_SMBDAT]
  set_property USER_COMMENTS.comment_6 "unused pins for PCIe bus configuration" [get_bd_pins /PCIe/PCIe_T_SMBDAT]
  create_bd_pin -dir O -from 31 -to 0 RFGPIOData
  create_bd_pin -dir I -from 9 -to 0 Status_data
  create_bd_pin -dir O -from 31 -to 0 TXConfigData
  create_bd_pin -dir O -from 31 -to 0 TXFreqData
  create_bd_pin -dir O -from 31 -to 0 TXTestFreqData
  create_bd_pin -dir I TX_ENABLE
  create_bd_pin -dir O -from 0 -to 0 aresetn12
  create_bd_pin -dir O axi_aclk_125
  create_bd_pin -dir O axi_aresetn_125
  create_bd_pin -dir O -from 4 -to 0 axi_resetn
  create_bd_pin -dir I clk12
  create_bd_pin -dir I clk_122
  create_bd_pin -dir O -from 0 -to 0 nADC_CS
  create_bd_pin -dir I -type rst reset_rtl_0
  create_bd_pin -dir I PLL_LOCK
  create_bd_pin -dir I -from 3 -to 0 clock_mon
  create_bd_pin -dir O codecspiclk
  create_bd_pin -dir O codecspidata
  create_bd_pin -dir O -from 0 -to 0 Byteswap
  create_bd_pin -dir O codec_cs
  create_bd_pin -dir O -from 0 -to 0 CodecMicRstn
  create_bd_pin -dir O -from 0 -to 0 CodecSkpRstn
  create_bd_pin -dir O -from 0 -to 0 DDCFIFORstn
  create_bd_pin -dir O -from 0 -to 0 DUCFIFORstn
  create_bd_pin -dir O -from 31 -to 0 IambicConfig
  create_bd_pin -dir I CK_KEY_DOWN
  create_bd_pin -dir I -from 3 -to 0 pcb_version_id
  create_bd_pin -dir I CK_KEYER_ACTIVE

  # Create instance: xadc_wiz_0, and set properties
  set xadc_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xadc_wiz:3.3 xadc_wiz_0 ]
  set_property -dict [list \
    CONFIG.ADC_CONVERSION_RATE {1000} \
    CONFIG.ADC_OFFSET_AND_GAIN_CALIBRATION {true} \
    CONFIG.CHANNEL_ENABLE_TEMPERATURE {true} \
    CONFIG.CHANNEL_ENABLE_VAUXP12_VAUXN12 {false} \
    CONFIG.CHANNEL_ENABLE_VAUXP13_VAUXN13 {false} \
    CONFIG.CHANNEL_ENABLE_VAUXP5_VAUXN5 {false} \
    CONFIG.CHANNEL_ENABLE_VAUXP6_VAUXN6 {false} \
    CONFIG.CHANNEL_ENABLE_VAUXP7_VAUXN7 {false} \
    CONFIG.CHANNEL_ENABLE_VBRAM {true} \
    CONFIG.CHANNEL_ENABLE_VCCAUX {true} \
    CONFIG.CHANNEL_ENABLE_VCCINT {true} \
    CONFIG.CHANNEL_ENABLE_VP_VN {false} \
    CONFIG.DCLK_FREQUENCY {125} \
    CONFIG.ENABLE_RESET {false} \
    CONFIG.EXTERNAL_MUX_CHANNEL {VP_VN} \
    CONFIG.INTERFACE_SELECTION {Enable_AXI} \
    CONFIG.OT_ALARM {false} \
    CONFIG.SEQUENCER_MODE {Continuous} \
    CONFIG.SINGLE_CHANNEL_SELECTION {TEMPERATURE} \
    CONFIG.USER_TEMP_ALARM {false} \
    CONFIG.VCCAUX_ALARM {false} \
    CONFIG.VCCINT_ALARM {false} \
    CONFIG.XADC_STARUP_SELECTION {channel_sequencer} \
  ] $xadc_wiz_0


  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [list \
    CONFIG.IN0_WIDTH {10} \
    CONFIG.IN1_WIDTH {1} \
    CONFIG.IN2_WIDTH {1} \
    CONFIG.IN3_WIDTH {1} \
    CONFIG.IN4_WIDTH {18} \
    CONFIG.NUM_PORTS {6} \
  ] $xlconcat_0


  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property CONFIG.NUM_PORTS {5} $xlconcat_2


  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {15} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {32} \
    CONFIG.DOUT_WIDTH {16} \
  ] $xlslice_15


  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [list \
    CONFIG.IN0_WIDTH {16} \
    CONFIG.IN1_WIDTH {16} \
  ] $xlconcat_1


  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [list \
    CONFIG.IN0_WIDTH {4} \
    CONFIG.IN1_WIDTH {16} \
    CONFIG.IN2_WIDTH {5} \
    CONFIG.IN3_WIDTH {7} \
    CONFIG.NUM_PORTS {4} \
  ] $xlconcat_3


  # Create instance: AXIL_ReadReg_64_0, and set properties
  set block_name AXIL_ReadReg_64
  set block_cell_name AXIL_ReadReg_64_0
  if { [catch {set AXIL_ReadReg_64_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ReadReg_64_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_0, and set properties
  set block_name D_register
  set block_cell_name D_register_0
  if { [catch {set D_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {5} $D_register_0


  # Create instance: D_register_1, and set properties
  set block_name D_register
  set block_cell_name D_register_1
  if { [catch {set D_register_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {1} $D_register_1


  # Create instance: Double_D_register_syncareset1, and set properties
  set block_name Double_D_register
  set block_cell_name Double_D_register_syncareset1
  if { [catch {set Double_D_register_syncareset1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Double_D_register_syncareset1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {1} $Double_D_register_syncareset1


  # Create instance: Double_D_register_syncareset, and set properties
  set block_name Double_D_register
  set block_cell_name Double_D_register_syncareset
  if { [catch {set Double_D_register_syncareset [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Double_D_register_syncareset eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {1} $Double_D_register_syncareset


  # Create instance: Usr_Reg_Access_0, and set properties
  set block_name Usr_Reg_Access
  set block_cell_name Usr_Reg_Access_0
  if { [catch {set Usr_Reg_Access_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Usr_Reg_Access_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIL_ConfigReg_256_2, and set properties
  set block_name AXIL_ConfigReg_256
  set block_cell_name AXIL_ConfigReg_256_2
  if { [catch {set AXIL_ConfigReg_256_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ConfigReg_256_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.INITIAL_VALUE_word_2 {0} $AXIL_ConfigReg_256_2


  # Create instance: AXIL_ConfigReg_64_0, and set properties
  set block_name AXIL_ConfigReg_64
  set block_cell_name AXIL_ConfigReg_64_0
  if { [catch {set AXIL_ConfigReg_64_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ConfigReg_64_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIL_ReadReg_64_ID, and set properties
  set block_name AXIL_ReadReg_64
  set block_cell_name AXIL_ReadReg_64_ID
  if { [catch {set AXIL_ReadReg_64_ID [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ReadReg_64_ID eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXI_SPI_ADC_0, and set properties
  set block_name AXI_SPI_ADC
  set block_cell_name AXI_SPI_ADC_0
  if { [catch {set AXI_SPI_ADC_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_SPI_ADC_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXIL_SPIWriter_0, and set properties
  set block_name AXIL_SPIWriter
  set block_cell_name AXIL_SPIWriter_0
  if { [catch {set AXIL_SPIWriter_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_SPIWriter_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXI_FIFO_overflow_re_0, and set properties
  set block_name AXI_FIFO_overflow_reader
  set block_cell_name AXI_FIFO_overflow_re_0
  if { [catch {set AXI_FIFO_overflow_re_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_FIFO_overflow_re_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {26} \
    CONFIG.DIN_TO {26} \
  ] $xlslice_0


  # Create instance: AXIL_ConfigReg_64_1, and set properties
  set block_name AXIL_ConfigReg_64
  set block_cell_name AXIL_ConfigReg_64_1
  if { [catch {set AXIL_ConfigReg_64_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIL_ConfigReg_64_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_TO {1} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_1


  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {0} \
    CONFIG.DIN_TO {0} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_2


  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DIN_TO {2} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_3


  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {3} \
    CONFIG.DIN_TO {3} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_4


  # Create instance: axi_interconnect_122, and set properties
  set axi_interconnect_122 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_122 ]
  set_property -dict [list \
    CONFIG.ENABLE_ADVANCED_OPTIONS {0} \
    CONFIG.NUM_MI {12} \
  ] $axi_interconnect_122


  # Create instance: axi_interconnect_lite, and set properties
  set axi_interconnect_lite [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_lite ]
  set_property -dict [list \
    CONFIG.M01_HAS_DATA_FIFO {1} \
    CONFIG.M01_HAS_REGSLICE {3} \
  ] $axi_interconnect_lite


  # Create instance: axi_interconnect_lite_125, and set properties
  set axi_interconnect_lite_125 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_lite_125 ]
  set_property CONFIG.NUM_MI {5} $axi_interconnect_lite_125


  # Create instance: axi_quad_spi_0, and set properties
  set axi_quad_spi_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0 ]
  set_property -dict [list \
    CONFIG.C_FIFO_DEPTH {256} \
    CONFIG.C_SHARED_STARTUP {0} \
    CONFIG.C_SPI_MEMORY {3} \
    CONFIG.C_SPI_MODE {2} \
    CONFIG.C_TYPE_OF_AXI4_INTERFACE {0} \
    CONFIG.C_USE_STARTUP {1} \
    CONFIG.C_XIP_MODE {0} \
  ] $axi_quad_spi_0


  # Create instance: pci_clk_buf, and set properties
  set pci_clk_buf [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 pci_clk_buf ]
  set_property CONFIG.C_BUF_TYPE {IBUFDSGTE} $pci_clk_buf


  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_0


  # Create instance: util_vector_logic_2, and set properties
  set util_vector_logic_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_2 ]
  set_property CONFIG.C_SIZE {1} $util_vector_logic_2


  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {16} \
  ] $util_vector_logic_1


  # Create instance: util_vector_logic_3, and set properties
  set util_vector_logic_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_3 ]
  set_property CONFIG.C_SIZE {1} $util_vector_logic_3


  # Create instance: util_vector_logic_4, and set properties
  set util_vector_logic_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_4 ]
  set_property CONFIG.C_SIZE {1} $util_vector_logic_4


  # Create instance: util_vector_logic_5, and set properties
  set util_vector_logic_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_5 ]
  set_property CONFIG.C_SIZE {1} $util_vector_logic_5


  # Create instance: xdma_0, and set properties
  set xdma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma_0 ]
  set_property -dict [list \
    CONFIG.PF0_DEVICE_ID_mqdma {9024} \
    CONFIG.PF0_SRIOV_VF_DEVICE_ID {A034} \
    CONFIG.PF2_DEVICE_ID_mqdma {9224} \
    CONFIG.PF3_DEVICE_ID_mqdma {9324} \
    CONFIG.axi_data_width {128_bit} \
    CONFIG.axil_master_64bit_en {false} \
    CONFIG.axilite_master_en {true} \
    CONFIG.axist_bypass_en {false} \
    CONFIG.axisten_freq {125} \
    CONFIG.cfg_mgmt_if {false} \
    CONFIG.pf0_device_id {7024} \
    CONFIG.pl_link_cap_max_link_speed {5.0_GT/s} \
    CONFIG.pl_link_cap_max_link_width {X4} \
    CONFIG.plltype {QPLL1} \
    CONFIG.runbit_fix {false} \
    CONFIG.xdma_axilite_slave {false} \
    CONFIG.xdma_pcie_64bit_en {true} \
    CONFIG.xdma_pcie_prefetchable {true} \
    CONFIG.xdma_rnum_chnl {2} \
    CONFIG.xdma_wnum_chnl {2} \
  ] $xdma_0


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {0} \
    CONFIG.CONST_WIDTH {18} \
  ] $xlconstant_0


  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]

  # Create instance: xlconstant_2, and set properties
  set xlconstant_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_2 ]

  # Create instance: xlconstant_2_pciebusreq, and set properties
  set xlconstant_2_pciebusreq [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_2_pciebusreq ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_2_pciebusreq


  # Create instance: xlconstant_3, and set properties
  set xlconstant_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_3 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_3


  # Create instance: xlconstant_productid, and set properties
  set xlconstant_productid [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_productid ]
  set_property -dict [list \
    CONFIG.CONST_VAL {1} \
    CONFIG.CONST_WIDTH {16} \
  ] $xlconstant_productid


  # Create instance: xlconstant_swid, and set properties
  set xlconstant_swid [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_swid ]
  set_property -dict [list \
    CONFIG.CONST_VAL {4} \
    CONFIG.CONST_WIDTH {5} \
  ] $xlconstant_swid


  # Create instance: util_vector_logic_6, and set properties
  set util_vector_logic_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_6 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {4} \
  ] $util_vector_logic_6


  # Create instance: c_addsub_0, and set properties
  set c_addsub_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:c_addsub:12.0 c_addsub_0 ]
  set_property -dict [list \
    CONFIG.A_Type {Unsigned} \
    CONFIG.A_Width {4} \
    CONFIG.B_Constant {true} \
    CONFIG.B_Type {Unsigned} \
    CONFIG.B_Value {0000000000000010} \
    CONFIG.B_Width {16} \
    CONFIG.CE {false} \
    CONFIG.Latency {1} \
    CONFIG.Out_Width {16} \
  ] $c_addsub_0


  # Create instance: xlconstant_majorversionid, and set properties
  set xlconstant_majorversionid [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_majorversionid ]
  set_property CONFIG.CONST_WIDTH {7} $xlconstant_majorversionid


  # Create instance: xlconstant_swversion, and set properties
  set xlconstant_swversion [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_swversion ]
  set_property -dict [list \
    CONFIG.CONST_VAL {18} \
    CONFIG.CONST_WIDTH {16} \
  ] $xlconstant_swversion


  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins M00_AXI_0] [get_bd_intf_pins axi_interconnect_122/M00_AXI]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins diff_clock_rtl_0] [get_bd_intf_pins pci_clk_buf/CLK_IN_D]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins PROM_SPI] [get_bd_intf_pins axi_quad_spi_0/SPI_0]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins M_AXI_Alex] [get_bd_intf_pins axi_interconnect_122/M07_AXI]
  connect_bd_intf_net -intf_net Conn6 [get_bd_intf_pins M01_AXI_0] [get_bd_intf_pins axi_interconnect_122/M01_AXI]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins M03_AXI_0] [get_bd_intf_pins axi_interconnect_lite_125/M03_AXI]
  connect_bd_intf_net -intf_net Conn11 [get_bd_intf_pins M_AXI_full_0] [get_bd_intf_pins xdma_0/M_AXI]
  connect_bd_intf_net -intf_net Conn12 [get_bd_intf_pins M08_AXI_0] [get_bd_intf_pins axi_interconnect_122/M08_AXI]
  connect_bd_intf_net -intf_net S00_AXI_1 [get_bd_intf_pins axi_interconnect_lite/S00_AXI] [get_bd_intf_pins xdma_0/M_AXI_LITE]
  connect_bd_intf_net -intf_net axi_interconnect_0_M06_AXI [get_bd_intf_pins AXI_SPI_ADC_0/s_axi] [get_bd_intf_pins axi_interconnect_122/M06_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_122_M02_AXI [get_bd_intf_pins AXIL_ConfigReg_256_2/s_axi] [get_bd_intf_pins axi_interconnect_122/M02_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_122_M03_AXI [get_bd_intf_pins AXIL_SPIWriter_0/s_axi] [get_bd_intf_pins axi_interconnect_122/M03_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_122_M04_AXI [get_bd_intf_pins AXIL_ReadReg_64_0/s_axi] [get_bd_intf_pins axi_interconnect_122/M04_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_122_M05_AXI [get_bd_intf_pins axi_interconnect_122/M05_AXI] [get_bd_intf_pins AXI_FIFO_overflow_re_0/s_axi]
  connect_bd_intf_net -intf_net axi_interconnect_122_M09_AXI [get_bd_intf_pins M09_AXI] [get_bd_intf_pins axi_interconnect_122/M09_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_122_M10_AXI [get_bd_intf_pins AXIL_ConfigReg_64_1/s_axi] [get_bd_intf_pins axi_interconnect_122/M10_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_122_M11_AXI [get_bd_intf_pins M12_AXI_WB] [get_bd_intf_pins axi_interconnect_122/M11_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_lite_125_M00_AXI [get_bd_intf_pins axi_interconnect_lite_125/M00_AXI] [get_bd_intf_pins axi_quad_spi_0/AXI_LITE]
  connect_bd_intf_net -intf_net axi_interconnect_lite_125_M01_AXI [get_bd_intf_pins axi_interconnect_lite_125/M01_AXI] [get_bd_intf_pins xadc_wiz_0/s_axi_lite]
  connect_bd_intf_net -intf_net axi_interconnect_lite_125_M02_AXI [get_bd_intf_pins AXIL_ConfigReg_64_0/s_axi] [get_bd_intf_pins axi_interconnect_lite_125/M02_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_lite_125_M04_AXI [get_bd_intf_pins AXIL_ReadReg_64_ID/s_axi] [get_bd_intf_pins axi_interconnect_lite_125/M04_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_lite_M00_AXI [get_bd_intf_pins axi_interconnect_lite/M00_AXI] [get_bd_intf_pins axi_interconnect_lite_125/S00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_lite_M01_AXI [get_bd_intf_pins axi_interconnect_122/S00_AXI] [get_bd_intf_pins axi_interconnect_lite/M01_AXI]
  connect_bd_intf_net -intf_net xdma_0_pcie_mgt [get_bd_intf_pins pcie_7x_mgt_rtl_0] [get_bd_intf_pins xdma_0/pcie_mgt]

  # Create port connections
  connect_bd_net -net ACLK_1 [get_bd_pins xdma_0/axi_aclk] [get_bd_pins axi_aclk_125] [get_bd_pins xadc_wiz_0/s_axi_aclk] [get_bd_pins AXIL_ConfigReg_64_0/aclk] [get_bd_pins AXIL_ReadReg_64_ID/aclk] [get_bd_pins axi_interconnect_lite/ACLK] [get_bd_pins axi_interconnect_lite/S00_ACLK] [get_bd_pins axi_interconnect_lite/M00_ACLK] [get_bd_pins axi_interconnect_lite_125/ACLK] [get_bd_pins axi_interconnect_lite_125/S00_ACLK] [get_bd_pins axi_interconnect_lite_125/M00_ACLK] [get_bd_pins axi_interconnect_lite_125/M01_ACLK] [get_bd_pins axi_interconnect_lite_125/M02_ACLK] [get_bd_pins axi_interconnect_lite_125/M03_ACLK] [get_bd_pins axi_interconnect_lite_125/M04_ACLK] [get_bd_pins axi_quad_spi_0/ext_spi_clk] [get_bd_pins axi_quad_spi_0/s_axi_aclk] [get_bd_pins c_addsub_0/CLK]
  connect_bd_net -net ADC1_Overrange_1 [get_bd_pins ADC1_Overrange] [get_bd_pins AXI_FIFO_overflow_re_0/overflow1]
  connect_bd_net -net ADC2_Overrange_1 [get_bd_pins ADC2_Overrange] [get_bd_pins AXI_FIFO_overflow_re_0/overflow2]
  connect_bd_net -net ADC_MISO_1 [get_bd_pins ADC_MISO] [get_bd_pins AXI_SPI_ADC_0/MISO]
  connect_bd_net -net ARESETN_1 [get_bd_pins xdma_0/axi_aresetn] [get_bd_pins axi_aresetn_125] [get_bd_pins xadc_wiz_0/s_axi_aresetn] [get_bd_pins Double_D_register_syncareset1/din] [get_bd_pins Double_D_register_syncareset/din] [get_bd_pins AXIL_ConfigReg_64_0/aresetn] [get_bd_pins AXIL_ReadReg_64_ID/aresetn] [get_bd_pins axi_interconnect_lite/ARESETN] [get_bd_pins axi_interconnect_lite/S00_ARESETN] [get_bd_pins axi_interconnect_lite/M00_ARESETN] [get_bd_pins axi_interconnect_lite_125/ARESETN] [get_bd_pins axi_interconnect_lite_125/S00_ARESETN] [get_bd_pins axi_interconnect_lite_125/M00_ARESETN] [get_bd_pins axi_interconnect_lite_125/M01_ARESETN] [get_bd_pins axi_interconnect_lite_125/M02_ARESETN] [get_bd_pins axi_interconnect_lite_125/M03_ARESETN] [get_bd_pins axi_interconnect_lite_125/M04_ARESETN] [get_bd_pins axi_quad_spi_0/s_axi_aresetn]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg0 [get_bd_pins AXIL_ConfigReg_256_2/config_reg0] [get_bd_pins KeyerConfigData]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg1 [get_bd_pins AXIL_ConfigReg_256_2/config_reg1] [get_bd_pins CodecConfigData]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg2 [get_bd_pins AXIL_ConfigReg_256_2/config_reg2] [get_bd_pins TXConfigData]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg3 [get_bd_pins AXIL_ConfigReg_256_2/config_reg3] [get_bd_pins TXFreqData]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg4 [get_bd_pins AXIL_ConfigReg_256_2/config_reg4] [get_bd_pins TXTestFreqData]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg5 [get_bd_pins AXIL_ConfigReg_256_2/config_reg5] [get_bd_pins RFGPIOData] [get_bd_pins xlslice_0/Din]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg6 [get_bd_pins AXIL_ConfigReg_256_2/config_reg6] [get_bd_pins ADCCtrlData]
  connect_bd_net -net AXIL_ConfigReg_256_2_config_reg7 [get_bd_pins AXIL_ConfigReg_256_2/config_reg7] [get_bd_pins DACCtrlData]
  connect_bd_net -net AXIL_ConfigReg_64_0_config_reg0 [get_bd_pins AXIL_ConfigReg_64_0/config_reg0] [get_bd_pins xlslice_15/Din]
  connect_bd_net -net AXIL_ConfigReg_64_1_config_reg1 [get_bd_pins AXIL_ConfigReg_64_1/config_reg1] [get_bd_pins IambicConfig]
  connect_bd_net -net AXIL_SPIWriter_0_SPICk [get_bd_pins AXIL_SPIWriter_0/SPICk] [get_bd_pins codecspiclk]
  connect_bd_net -net AXIL_SPIWriter_0_SPIData [get_bd_pins AXIL_SPIWriter_0/SPIData] [get_bd_pins codecspidata]
  connect_bd_net -net AXIL_SPIWriter_0_SPILoad_0 [get_bd_pins AXIL_SPIWriter_0/SPILoad_0] [get_bd_pins codec_cs]
  connect_bd_net -net AXI_SPI_ADC_0_MOSI [get_bd_pins AXI_SPI_ADC_0/MOSI] [get_bd_pins ADC_MOSI]
  connect_bd_net -net AXI_SPI_ADC_0_SCLK [get_bd_pins AXI_SPI_ADC_0/SCLK] [get_bd_pins ADC_CLK]
  connect_bd_net -net AXI_SPI_ADC_0_nCS [get_bd_pins AXI_SPI_ADC_0/nCS] [get_bd_pins nADC_CS]
  connect_bd_net -net CK_KEYER_ACTIVE_1 [get_bd_pins CK_KEYER_ACTIVE] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net CK_KEY_DOWN_1 [get_bd_pins CK_KEY_DOWN] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net D_register_0_dout [get_bd_pins D_register_0/dout] [get_bd_pins axi_resetn]
  connect_bd_net -net Double_D_register_syncareset1_dout [get_bd_pins Double_D_register_syncareset1/dout] [get_bd_pins aresetn12] [get_bd_pins util_vector_logic_2/Op2] [get_bd_pins util_vector_logic_3/Op2] [get_bd_pins util_vector_logic_4/Op2] [get_bd_pins util_vector_logic_5/Op2]
  connect_bd_net -net Net [get_bd_pins AXIL_ConfigReg_64_1/config_reg0] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_4/Din]
  connect_bd_net -net Net2 [get_bd_pins Double_D_register_syncareset/dout] [get_bd_pins xlconcat_2/In0] [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconcat_2/In2] [get_bd_pins xlconcat_2/In3] [get_bd_pins xlconcat_2/In4] [get_bd_pins D_register_1/din]
  connect_bd_net -net Net3 [get_bd_pins xlconstant_1/dout] [get_bd_pins D_register_0/resetn] [get_bd_pins D_register_1/resetn]
  connect_bd_net -net PLL_LOCK_1 [get_bd_pins PLL_LOCK] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net Status_data_1 [get_bd_pins Status_data] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net TX_ENABLE_1 [get_bd_pins TX_ENABLE] [get_bd_pins xlconcat_0/In5]
  connect_bd_net -net Usr_Reg_Access_0_Usr_Reg_Data [get_bd_pins Usr_Reg_Access_0/Usr_Reg_Data] [get_bd_pins AXIL_ReadReg_64_0/readdata1]
  connect_bd_net -net c_addsub_0_S [get_bd_pins c_addsub_0/S] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net clk12_1 [get_bd_pins clk12] [get_bd_pins Double_D_register_syncareset1/aclk]
  connect_bd_net -net clk_122_1 [get_bd_pins clk_122] [get_bd_pins AXIL_ReadReg_64_0/aclk] [get_bd_pins D_register_0/aclk] [get_bd_pins D_register_1/aclk] [get_bd_pins Double_D_register_syncareset/aclk] [get_bd_pins AXIL_ConfigReg_256_2/aclk] [get_bd_pins AXI_SPI_ADC_0/aclk] [get_bd_pins AXIL_SPIWriter_0/aclk] [get_bd_pins AXI_FIFO_overflow_re_0/aclk] [get_bd_pins AXIL_ConfigReg_64_1/aclk] [get_bd_pins axi_interconnect_122/ACLK] [get_bd_pins axi_interconnect_122/S00_ACLK] [get_bd_pins axi_interconnect_122/M00_ACLK] [get_bd_pins axi_interconnect_122/M01_ACLK] [get_bd_pins axi_interconnect_122/M02_ACLK] [get_bd_pins axi_interconnect_122/M03_ACLK] [get_bd_pins axi_interconnect_122/M04_ACLK] [get_bd_pins axi_interconnect_122/M05_ACLK] [get_bd_pins axi_interconnect_122/M06_ACLK] [get_bd_pins axi_interconnect_122/M07_ACLK] [get_bd_pins axi_interconnect_122/M08_ACLK] [get_bd_pins axi_interconnect_122/M09_ACLK] [get_bd_pins axi_interconnect_122/M10_ACLK] [get_bd_pins axi_interconnect_lite/M01_ACLK] [get_bd_pins axi_interconnect_122/M11_ACLK]
  connect_bd_net -net clock_mon_1 [get_bd_pins clock_mon] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net pcb_version_id_1 [get_bd_pins pcb_version_id] [get_bd_pins util_vector_logic_6/Op1]
  connect_bd_net -net pci_clk_buf_IBUF_OUT [get_bd_pins pci_clk_buf/IBUF_OUT] [get_bd_pins xdma_0/sys_clk]
  connect_bd_net -net reset_rtl_0_1 [get_bd_pins reset_rtl_0] [get_bd_pins xdma_0/sys_rst_n]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins util_vector_logic_0/Res] [get_bd_pins PCI_LINK_LED]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins util_vector_logic_1/Res] [get_bd_pins LEDDrivers]
  connect_bd_net -net util_vector_logic_2_Res [get_bd_pins util_vector_logic_2/Res] [get_bd_pins CodecSkpRstn]
  connect_bd_net -net util_vector_logic_3_Res [get_bd_pins util_vector_logic_3/Res] [get_bd_pins CodecMicRstn]
  connect_bd_net -net util_vector_logic_4_Res [get_bd_pins util_vector_logic_4/Res] [get_bd_pins DUCFIFORstn]
  connect_bd_net -net util_vector_logic_5_Res [get_bd_pins util_vector_logic_5/Res] [get_bd_pins DDCFIFORstn]
  connect_bd_net -net util_vector_logic_6_Res [get_bd_pins util_vector_logic_6/Res] [get_bd_pins c_addsub_0/A]
  connect_bd_net -net xdma_0_axi_aresetn [get_bd_pins D_register_1/dout] [get_bd_pins AXIL_ReadReg_64_0/aresetn] [get_bd_pins AXIL_ConfigReg_256_2/aresetn] [get_bd_pins AXI_SPI_ADC_0/aresetn] [get_bd_pins AXIL_SPIWriter_0/aresetn] [get_bd_pins AXI_FIFO_overflow_re_0/aresetn] [get_bd_pins AXIL_ConfigReg_64_1/aresetn] [get_bd_pins axi_interconnect_122/ARESETN] [get_bd_pins axi_interconnect_122/S00_ARESETN] [get_bd_pins axi_interconnect_122/M00_ARESETN] [get_bd_pins axi_interconnect_122/M01_ARESETN] [get_bd_pins axi_interconnect_122/M02_ARESETN] [get_bd_pins axi_interconnect_122/M03_ARESETN] [get_bd_pins axi_interconnect_122/M04_ARESETN] [get_bd_pins axi_interconnect_122/M05_ARESETN] [get_bd_pins axi_interconnect_122/M06_ARESETN] [get_bd_pins axi_interconnect_122/M07_ARESETN] [get_bd_pins axi_interconnect_122/M08_ARESETN] [get_bd_pins axi_interconnect_122/M09_ARESETN] [get_bd_pins axi_interconnect_122/M10_ARESETN] [get_bd_pins axi_interconnect_lite/M01_ARESETN] [get_bd_pins axi_interconnect_122/M11_ARESETN]
  connect_bd_net -net xdma_0_user_lnk_up [get_bd_pins xdma_0/user_lnk_up] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins xlconcat_0/dout] [get_bd_pins AXIL_ReadReg_64_0/readdata0]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins xlconcat_1/dout] [get_bd_pins AXIL_ReadReg_64_ID/readdata1]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins xlconcat_2/dout] [get_bd_pins D_register_0/din]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins xlconcat_3/dout] [get_bd_pins AXIL_ReadReg_64_ID/readdata0]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconstant_0/dout] [get_bd_pins xlconcat_0/In4]
  connect_bd_net -net xlconstant_2_dout [get_bd_pins xlconstant_2/dout] [get_bd_pins FPGA_CM4_EN]
  connect_bd_net -net xlconstant_2_pciebusreq_dout [get_bd_pins xlconstant_2_pciebusreq/dout] [get_bd_pins PCIECLKREQN]
  connect_bd_net -net xlconstant_3_dout [get_bd_pins xlconstant_3/dout] [get_bd_pins AXI_FIFO_overflow_re_0/overflow3] [get_bd_pins AXI_FIFO_overflow_re_0/overflow4] [get_bd_pins AXI_FIFO_overflow_re_0/overflow5] [get_bd_pins AXI_FIFO_overflow_re_0/overflow6] [get_bd_pins AXI_FIFO_overflow_re_0/overflow7] [get_bd_pins AXI_FIFO_overflow_re_0/overflow8] [get_bd_pins AXI_FIFO_overflow_re_0/overflow9] [get_bd_pins AXI_FIFO_overflow_re_0/overflow10] [get_bd_pins AXI_FIFO_overflow_re_0/overflow11] [get_bd_pins AXI_FIFO_overflow_re_0/overflow12] [get_bd_pins AXI_FIFO_overflow_re_0/overflow13] [get_bd_pins AXI_FIFO_overflow_re_0/overflow14] [get_bd_pins AXI_FIFO_overflow_re_0/overflow15] [get_bd_pins AXI_FIFO_overflow_re_0/overflow16]
  connect_bd_net -net xlconstant_majorversionid_dout [get_bd_pins xlconstant_majorversionid/dout] [get_bd_pins xlconcat_3/In3]
  connect_bd_net -net xlconstant_productid_dout [get_bd_pins xlconstant_productid/dout] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net xlconstant_swid_dout [get_bd_pins xlconstant_swid/dout] [get_bd_pins xlconcat_3/In2]
  connect_bd_net -net xlconstant_swversion_dout [get_bd_pins xlconstant_swversion/dout] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlslice_0/Dout] [get_bd_pins Byteswap]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlslice_15/Dout] [get_bd_pins util_vector_logic_1/Op1]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlslice_1/Dout] [get_bd_pins util_vector_logic_2/Op1]
  connect_bd_net -net xlslice_1_Dout1 [get_bd_pins xlslice_2/Dout] [get_bd_pins util_vector_logic_3/Op1]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlslice_3/Dout] [get_bd_pins util_vector_logic_5/Op1]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlslice_4/Dout] [get_bd_pins util_vector_logic_4/Op1]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: FIFO_Interfaces
proc create_hier_cell_FIFO_Interfaces { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_FIFO_Interfaces() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_TX

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_codec

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXI_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RX

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_codec

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_lite_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS00_WB


  # Create pins
  create_bd_pin -dir I CLK12
  create_bd_pin -dir I CLK122
  create_bd_pin -dir I CLK125
  create_bd_pin -dir I aresetn_12
  create_bd_pin -dir I aresetn_125
  create_bd_pin -dir I TX_FIFO_aresetn
  create_bd_pin -dir I RX_FIFO_aresetn
  create_bd_pin -dir I CodecMicResetn
  create_bd_pin -dir I CodecSpkResetn
  create_bd_pin -dir I aresetn_122
  create_bd_pin -dir I txmux_reset

  # Create instance: AXI_Stream_Reader_Wr_0, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_0
  if { [catch {set AXI_Stream_Reader_Wr_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXI_DATA_WIDTH {64} $AXI_Stream_Reader_Wr_0


  # Create instance: AXI_Stream_Reader_Wr_codec, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_codec
  if { [catch {set AXI_Stream_Reader_Wr_codec [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_codec eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXI_DATA_WIDTH {64} $AXI_Stream_Reader_Wr_codec


  # Create instance: AXIS_Sizer_64to48_0, and set properties
  set block_name AXIS_Sizer_64to48
  set block_cell_name AXIS_Sizer_64to48_0
  if { [catch {set AXIS_Sizer_64to48_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXIS_Sizer_64to48_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property CONFIG.NUM_MI {3} $axi_interconnect_0


  # Create instance: axis_data_fifo_DDC0, and set properties
  set axis_data_fifo_DDC0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DDC0 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {16384} \
    CONFIG.HAS_AFULL {0} \
    CONFIG.HAS_RD_DATA_COUNT {1} \
    CONFIG.HAS_WR_DATA_COUNT {0} \
    CONFIG.IS_ACLK_ASYNC {1} \
    CONFIG.TDATA_NUM_BYTES {8} \
  ] $axis_data_fifo_DDC0


  # Create instance: axis_data_fifo_DUC, and set properties
  set axis_data_fifo_DUC [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_DUC ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {4096} \
    CONFIG.HAS_WR_DATA_COUNT {1} \
    CONFIG.IS_ACLK_ASYNC {1} \
    CONFIG.TDATA_NUM_BYTES {8} \
  ] $axis_data_fifo_DUC


  # Create instance: axis_data_fifo_codecmic, and set properties
  set axis_data_fifo_codecmic [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_codecmic ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {256} \
    CONFIG.HAS_RD_DATA_COUNT {1} \
    CONFIG.IS_ACLK_ASYNC {1} \
    CONFIG.TDATA_NUM_BYTES {8} \
  ] $axis_data_fifo_codecmic


  # Create instance: axis_data_fifo_codecspk, and set properties
  set axis_data_fifo_codecspk [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_codecspk ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {1024} \
    CONFIG.HAS_WR_DATA_COUNT {1} \
    CONFIG.IS_ACLK_ASYNC {1} \
    CONFIG.TDATA_NUM_BYTES {8} \
  ] $axis_data_fifo_codecspk


  # Create instance: axis_dwidth_converter_1, and set properties
  set axis_dwidth_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_1 ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {8} \
    CONFIG.S_TDATA_NUM_BYTES {2} \
  ] $axis_dwidth_converter_1


  # Create instance: axis_dwidth_converter_64to32bit, and set properties
  set axis_dwidth_converter_64to32bit [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_64to32bit ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {4} \
    CONFIG.S_TDATA_NUM_BYTES {8} \
  ] $axis_dwidth_converter_64to32bit


  # Create instance: xlconstant_val0, and set properties
  set xlconstant_val0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_val0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_val0


  # Create instance: FIFO_Monitor_0, and set properties
  set block_name FIFO_Monitor
  set block_cell_name FIFO_Monitor_0
  if { [catch {set FIFO_Monitor_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $FIFO_Monitor_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: AXI_Stream_Reader_Wr_1, and set properties
  set block_name AXI_Stream_Reader_Writer
  set block_cell_name AXI_Stream_Reader_Wr_1
  if { [catch {set AXI_Stream_Reader_Wr_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $AXI_Stream_Reader_Wr_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.AXI_DATA_WIDTH {64} $AXI_Stream_Reader_Wr_1


  # Create interface connections
  connect_bd_intf_net -intf_net AXIS00_WB_1 [get_bd_intf_pins S_AXIS00_WB] [get_bd_intf_pins AXI_Stream_Reader_Wr_1/s_axis]
  connect_bd_intf_net -intf_net AXIS_Sizer_64to48_0_m_axis [get_bd_intf_pins M_AXIS_TX] [get_bd_intf_pins AXIS_Sizer_64to48_0/m_axis]
  connect_bd_intf_net -intf_net AXI_Stream_Reader_Wr_0_m_axis [get_bd_intf_pins AXI_Stream_Reader_Wr_0/m_axis] [get_bd_intf_pins axis_data_fifo_DUC/S_AXIS]
  connect_bd_intf_net -intf_net AXI_Stream_Reader_Wr_10_m_axis [get_bd_intf_pins AXI_Stream_Reader_Wr_codec/m_axis] [get_bd_intf_pins axis_data_fifo_codecspk/S_AXIS]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins S_AXIS_RX] [get_bd_intf_pins axis_data_fifo_DDC0/S_AXIS]
  connect_bd_intf_net -intf_net Conn14 [get_bd_intf_pins S00_AXI_0] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net Conn15 [get_bd_intf_pins s_axi_lite_0] [get_bd_intf_pins FIFO_Monitor_0/s_axi]
  connect_bd_intf_net -intf_net S_AXIS_codec_1 [get_bd_intf_pins S_AXIS_codec] [get_bd_intf_pins axis_dwidth_converter_1/S_AXIS]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_0/s_axi] [get_bd_intf_pins axi_interconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins AXI_Stream_Reader_Wr_codec/s_axi] [get_bd_intf_pins axi_interconnect_0/M01_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins AXI_Stream_Reader_Wr_1/s_axi]
  connect_bd_intf_net -intf_net axis_data_fifo_DDC0_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_0/s_axis] [get_bd_intf_pins axis_data_fifo_DDC0/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_DUC_M_AXIS [get_bd_intf_pins axis_data_fifo_DUC/M_AXIS] [get_bd_intf_pins AXIS_Sizer_64to48_0/s_axis]
  connect_bd_intf_net -intf_net axis_data_fifo_codecmic_M_AXIS [get_bd_intf_pins AXI_Stream_Reader_Wr_codec/s_axis] [get_bd_intf_pins axis_data_fifo_codecmic/M_AXIS]
  connect_bd_intf_net -intf_net axis_data_fifo_codecspk_M_AXIS [get_bd_intf_pins axis_data_fifo_codecspk/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_64to32bit/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_1_M_AXIS [get_bd_intf_pins axis_dwidth_converter_1/M_AXIS] [get_bd_intf_pins axis_data_fifo_codecmic/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_64to32bit_M_AXIS [get_bd_intf_pins M_AXIS_codec] [get_bd_intf_pins axis_dwidth_converter_64to32bit/M_AXIS]

  # Create port connections
  connect_bd_net -net ACLK_1 [get_bd_pins CLK125] [get_bd_pins AXI_Stream_Reader_Wr_0/aclk] [get_bd_pins AXI_Stream_Reader_Wr_codec/aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axis_data_fifo_DDC0/m_axis_aclk] [get_bd_pins axis_data_fifo_DUC/s_axis_aclk] [get_bd_pins axis_data_fifo_codecmic/m_axis_aclk] [get_bd_pins axis_data_fifo_codecspk/s_axis_aclk] [get_bd_pins FIFO_Monitor_0/aclk] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins AXI_Stream_Reader_Wr_1/aclk]
  connect_bd_net -net CLK12_1 [get_bd_pins CLK12] [get_bd_pins axis_data_fifo_codecmic/s_axis_aclk] [get_bd_pins axis_data_fifo_codecspk/m_axis_aclk] [get_bd_pins axis_dwidth_converter_1/aclk] [get_bd_pins axis_dwidth_converter_64to32bit/aclk]
  connect_bd_net -net CodecMicResetn_1 [get_bd_pins CodecMicResetn] [get_bd_pins axis_data_fifo_codecmic/s_axis_aresetn]
  connect_bd_net -net CodecSpkResetn_1 [get_bd_pins CodecSpkResetn] [get_bd_pins axis_data_fifo_codecspk/s_axis_aresetn]
  connect_bd_net -net M10_ARESETN_1 [get_bd_pins aresetn_125] [get_bd_pins AXI_Stream_Reader_Wr_0/aresetn] [get_bd_pins AXI_Stream_Reader_Wr_codec/aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins FIFO_Monitor_0/aresetn] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins AXI_Stream_Reader_Wr_1/aresetn]
  connect_bd_net -net Net1 [get_bd_pins CLK122] [get_bd_pins AXIS_Sizer_64to48_0/aclk] [get_bd_pins axis_data_fifo_DDC0/s_axis_aclk] [get_bd_pins axis_data_fifo_DUC/m_axis_aclk]
  connect_bd_net -net Net2 [get_bd_pins RX_FIFO_aresetn] [get_bd_pins axis_data_fifo_DDC0/s_axis_aresetn]
  connect_bd_net -net TX_FIFO_aresetn_1 [get_bd_pins TX_FIFO_aresetn] [get_bd_pins axis_data_fifo_DUC/s_axis_aresetn]
  connect_bd_net -net aresetn_122_1 [get_bd_pins aresetn_122] [get_bd_pins AXIS_Sizer_64to48_0/aresetn]
  connect_bd_net -net aresetn_12_1 [get_bd_pins aresetn_12] [get_bd_pins axis_dwidth_converter_1/aresetn] [get_bd_pins axis_dwidth_converter_64to32bit/aresetn]
  connect_bd_net -net axis_data_fifo_DDC0_axis_rd_data_count [get_bd_pins axis_data_fifo_DDC0/axis_rd_data_count] [get_bd_pins FIFO_Monitor_0/fifo1_count]
  connect_bd_net -net axis_data_fifo_DUC_axis_wr_data_count [get_bd_pins axis_data_fifo_DUC/axis_wr_data_count] [get_bd_pins FIFO_Monitor_0/fifo2_count]
  connect_bd_net -net axis_data_fifo_codecmic_axis_rd_data_count [get_bd_pins axis_data_fifo_codecmic/axis_rd_data_count] [get_bd_pins FIFO_Monitor_0/fifo3_count]
  connect_bd_net -net axis_data_fifo_codecspk_axis_wr_data_count [get_bd_pins axis_data_fifo_codecspk/axis_wr_data_count] [get_bd_pins FIFO_Monitor_0/fifo4_count]
  connect_bd_net -net txmux_reset_1 [get_bd_pins txmux_reset] [get_bd_pins AXIS_Sizer_64to48_0/mux_reset]
  connect_bd_net -net xlconstant_val0_dout [get_bd_pins xlconstant_val0/dout] [get_bd_pins FIFO_Monitor_0/fifo1_overflow] [get_bd_pins FIFO_Monitor_0/fifo2_overflow] [get_bd_pins FIFO_Monitor_0/fifo3_overflow] [get_bd_pins FIFO_Monitor_0/fifo4_overflow]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: DAC_LVDS_Pins
proc create_hier_cell_DAC_LVDS_Pins { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_DAC_LVDS_Pins() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -from 15 -to 0 DAC_Out_N
  create_bd_pin -dir O -from 15 -to 0 DAC_Out_P
  create_bd_pin -dir I -from 15 -to 0 DAC_SingleEnded
  create_bd_pin -dir I aresetn
  create_bd_pin -dir I aclk

  # Create instance: selectio_wiz_0, and set properties
  set selectio_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:selectio_wiz:5.1 selectio_wiz_0 ]
  set_property -dict [list \
    CONFIG.BUS_DIR {OUTPUTS} \
    CONFIG.BUS_IO_STD {LVDS_25} \
    CONFIG.BUS_SIG_TYPE {DIFF} \
    CONFIG.CLK_FWD_IO_STD {LVDS_25} \
    CONFIG.CLK_FWD_SIG_TYPE {DIFF} \
    CONFIG.SELIO_BUS_IN_DELAY {NONE} \
    CONFIG.SELIO_CLK_BUF {MMCM} \
    CONFIG.SELIO_CLK_IO_STD {LVDS_25} \
    CONFIG.SELIO_CLK_SIG_TYPE {DIFF} \
    CONFIG.SELIO_INTERFACE_TYPE {NETWORKING} \
    CONFIG.SERIALIZATION_FACTOR {4} \
    CONFIG.SYSTEM_DATA_WIDTH {16} \
  ] $selectio_wiz_0


  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_0


  # Create port connections
  connect_bd_net -net DAC_SingleEnded_1 [get_bd_pins DAC_SingleEnded] [get_bd_pins selectio_wiz_0/data_out_from_device]
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins selectio_wiz_0/clk_in]
  connect_bd_net -net aresetn_1 [get_bd_pins aresetn] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net selectio_wiz_0_data_out_to_pins_n [get_bd_pins selectio_wiz_0/data_out_to_pins_n] [get_bd_pins DAC_Out_N]
  connect_bd_net -net selectio_wiz_0_data_out_to_pins_p [get_bd_pins selectio_wiz_0/data_out_to_pins_p] [get_bd_pins DAC_Out_P]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins util_vector_logic_0/Res] [get_bd_pins selectio_wiz_0/io_reset]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: ADC_LVDS_Pins
proc create_hier_cell_ADC_LVDS_Pins { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_ADC_LVDS_Pins() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -from 0 -to 0 ADC1Overrange_SingleEnded
  create_bd_pin -dir I ADC1_CLKin_N
  create_bd_pin -dir I ADC1_CLKin_P
  create_bd_pin -dir I -from 15 -to 0 ADC1_In_N
  create_bd_pin -dir I -from 15 -to 0 ADC1_In_P
  create_bd_pin -dir I ADC1_Ovr_In_N
  create_bd_pin -dir I ADC1_Ovr_In_P
  create_bd_pin -dir O -from 15 -to 0 ADC1_SingleEnded
  create_bd_pin -dir O -from 0 -to 0 ADC2Overrange_SingleEnded
  create_bd_pin -dir I ADC2_CLKin_N
  create_bd_pin -dir I ADC2_CLKin_P
  create_bd_pin -dir I -from 15 -to 0 ADC2_In_N
  create_bd_pin -dir I -from 15 -to 0 ADC2_In_P
  create_bd_pin -dir I ADC2_Ovr_In_N
  create_bd_pin -dir I ADC2_Ovr_In_P
  create_bd_pin -dir O -from 15 -to 0 ADC2_SingleEnded
  create_bd_pin -dir I aclk_inreg
  create_bd_pin -dir I -from 1 -to 0 adcrand
  create_bd_pin -dir I aclk

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {0} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {2} \
  ] $xlslice_0


  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_TO {1} \
    CONFIG.DIN_WIDTH {2} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_1


  # Create instance: LTC2208_derandomise_0, and set properties
  set block_name LTC2208_derandomise
  set block_cell_name LTC2208_derandomise_0
  if { [catch {set LTC2208_derandomise_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $LTC2208_derandomise_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: LTC2208_derandomise_1, and set properties
  set block_name LTC2208_derandomise
  set block_cell_name LTC2208_derandomise_1
  if { [catch {set LTC2208_derandomise_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $LTC2208_derandomise_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_norst_0, and set properties
  set block_name D_register_norst
  set block_cell_name D_register_norst_0
  if { [catch {set D_register_norst_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_norst_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_norst_1, and set properties
  set block_name D_register_norst
  set block_cell_name D_register_norst_1
  if { [catch {set D_register_norst_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_norst_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: D_register_norst_2, and set properties
  set block_name D_register_norst
  set block_cell_name D_register_norst_2
  if { [catch {set D_register_norst_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_norst_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {1} $D_register_norst_2


  # Create instance: D_register_norst_3, and set properties
  set block_name D_register_norst
  set block_cell_name D_register_norst_3
  if { [catch {set D_register_norst_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $D_register_norst_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.DATA_WIDTH {1} $D_register_norst_3


  # Create instance: selectio_wiz_0, and set properties
  set selectio_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:selectio_wiz:5.1 selectio_wiz_0 ]
  set_property -dict [list \
    CONFIG.BUS_IO_STD {LVDS_25} \
    CONFIG.BUS_SIG_TYPE {DIFF} \
    CONFIG.CLK_FWD_IO_STD {LVDS_25} \
    CONFIG.CLK_FWD_SIG_TYPE {DIFF} \
    CONFIG.SELIO_CLK_BUF {MMCM} \
    CONFIG.SELIO_CLK_IO_STD {LVDS_25} \
    CONFIG.SELIO_CLK_SIG_TYPE {DIFF} \
    CONFIG.SERIALIZATION_FACTOR {4} \
    CONFIG.SYSTEM_DATA_WIDTH {16} \
  ] $selectio_wiz_0


  # Create instance: selectio_wiz_1, and set properties
  set selectio_wiz_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:selectio_wiz:5.1 selectio_wiz_1 ]
  set_property -dict [list \
    CONFIG.BUS_IO_STD {LVDS_25} \
    CONFIG.BUS_SIG_TYPE {DIFF} \
    CONFIG.CLK_FWD_IO_STD {LVDS_25} \
    CONFIG.CLK_FWD_SIG_TYPE {DIFF} \
    CONFIG.SELIO_CLK_BUF {MMCM} \
    CONFIG.SELIO_CLK_IO_STD {LVDS_25} \
    CONFIG.SELIO_CLK_SIG_TYPE {DIFF} \
    CONFIG.SERIALIZATION_FACTOR {4} \
    CONFIG.SYSTEM_DATA_WIDTH {16} \
  ] $selectio_wiz_1


  # Create instance: selectio_wiz_2, and set properties
  set selectio_wiz_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:selectio_wiz:5.1 selectio_wiz_2 ]
  set_property -dict [list \
    CONFIG.BUS_IO_STD {LVDS_25} \
    CONFIG.BUS_SIG_TYPE {DIFF} \
    CONFIG.CLK_FWD_IO_STD {LVDS_25} \
    CONFIG.CLK_FWD_SIG_TYPE {DIFF} \
    CONFIG.SELIO_CLK_BUF {MMCM} \
    CONFIG.SELIO_CLK_IO_STD {LVDS_25} \
    CONFIG.SELIO_CLK_SIG_TYPE {DIFF} \
    CONFIG.SERIALIZATION_FACTOR {4} \
    CONFIG.SYSTEM_DATA_WIDTH {1} \
  ] $selectio_wiz_2


  # Create instance: selectio_wiz_3, and set properties
  set selectio_wiz_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:selectio_wiz:5.1 selectio_wiz_3 ]
  set_property -dict [list \
    CONFIG.BUS_IO_STD {LVDS_25} \
    CONFIG.BUS_SIG_TYPE {DIFF} \
    CONFIG.CLK_FWD_IO_STD {LVDS_25} \
    CONFIG.CLK_FWD_SIG_TYPE {DIFF} \
    CONFIG.SELIO_CLK_BUF {MMCM} \
    CONFIG.SELIO_CLK_IO_STD {LVDS_25} \
    CONFIG.SELIO_CLK_SIG_TYPE {DIFF} \
    CONFIG.SERIALIZATION_FACTOR {4} \
    CONFIG.SYSTEM_DATA_WIDTH {1} \
  ] $selectio_wiz_3


  # Create instance: util_ds_buf_4, and set properties
  set util_ds_buf_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_4 ]
  set_property CONFIG.C_BUF_TYPE {IBUFDS} $util_ds_buf_4


  # Create instance: util_ds_buf_5, and set properties
  set util_ds_buf_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_5 ]
  set_property CONFIG.C_BUF_TYPE {IBUFDS} $util_ds_buf_5


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create port connections
  connect_bd_net -net ADC1_CLKin_N_1 [get_bd_pins ADC1_CLKin_N] [get_bd_pins util_ds_buf_4/IBUF_DS_N]
  connect_bd_net -net ADC1_CLKin_P_1 [get_bd_pins ADC1_CLKin_P] [get_bd_pins util_ds_buf_4/IBUF_DS_P]
  connect_bd_net -net ADC1_In_N_1 [get_bd_pins ADC1_In_N] [get_bd_pins selectio_wiz_0/data_in_from_pins_n]
  connect_bd_net -net ADC1_In_P_1 [get_bd_pins ADC1_In_P] [get_bd_pins selectio_wiz_0/data_in_from_pins_p]
  connect_bd_net -net ADC1_Ovr_In_N_1 [get_bd_pins ADC1_Ovr_In_N] [get_bd_pins selectio_wiz_2/data_in_from_pins_n]
  connect_bd_net -net ADC1_Ovr_In_P_1 [get_bd_pins ADC1_Ovr_In_P] [get_bd_pins selectio_wiz_2/data_in_from_pins_p]
  connect_bd_net -net ADC2_CLKin_N_1 [get_bd_pins ADC2_CLKin_N] [get_bd_pins util_ds_buf_5/IBUF_DS_N]
  connect_bd_net -net ADC2_CLKin_P_1 [get_bd_pins ADC2_CLKin_P] [get_bd_pins util_ds_buf_5/IBUF_DS_P]
  connect_bd_net -net ADC2_In_N_1 [get_bd_pins ADC2_In_N] [get_bd_pins selectio_wiz_1/data_in_from_pins_n]
  connect_bd_net -net ADC2_In_P_1 [get_bd_pins ADC2_In_P] [get_bd_pins selectio_wiz_1/data_in_from_pins_p]
  connect_bd_net -net ADC2_Ovr_In_N_1 [get_bd_pins ADC2_Ovr_In_N] [get_bd_pins selectio_wiz_3/data_in_from_pins_n]
  connect_bd_net -net ADC2_Ovr_In_P_1 [get_bd_pins ADC2_Ovr_In_P] [get_bd_pins selectio_wiz_3/data_in_from_pins_p]
  connect_bd_net -net ARC_Randomise_1 [get_bd_pins adcrand] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net D_register_norst_2_dout [get_bd_pins D_register_norst_2/dout] [get_bd_pins ADC1Overrange_SingleEnded]
  connect_bd_net -net D_register_norst_3_dout [get_bd_pins D_register_norst_3/dout] [get_bd_pins ADC2Overrange_SingleEnded]
  connect_bd_net -net LTC2208_derandomise_0_dout [get_bd_pins LTC2208_derandomise_0/dout] [get_bd_pins ADC1_SingleEnded]
  connect_bd_net -net LTC2208_derandomise_1_dout [get_bd_pins LTC2208_derandomise_1/dout] [get_bd_pins ADC2_SingleEnded]
  connect_bd_net -net Net1 [get_bd_pins xlconstant_0/dout] [get_bd_pins selectio_wiz_0/io_reset] [get_bd_pins selectio_wiz_1/io_reset] [get_bd_pins selectio_wiz_2/io_reset] [get_bd_pins selectio_wiz_3/io_reset]
  connect_bd_net -net Net2 [get_bd_pins aclk_inreg] [get_bd_pins selectio_wiz_0/clk_in] [get_bd_pins selectio_wiz_1/clk_in] [get_bd_pins selectio_wiz_2/clk_in] [get_bd_pins selectio_wiz_3/clk_in]
  connect_bd_net -net Net3 [get_bd_pins aclk] [get_bd_pins LTC2208_derandomise_0/clk] [get_bd_pins LTC2208_derandomise_1/clk] [get_bd_pins D_register_norst_0/aclk] [get_bd_pins D_register_norst_1/aclk] [get_bd_pins D_register_norst_2/aclk] [get_bd_pins D_register_norst_3/aclk]
  connect_bd_net -net adc1_1 [get_bd_pins D_register_norst_1/dout] [get_bd_pins LTC2208_derandomise_0/din]
  connect_bd_net -net adc2_1 [get_bd_pins D_register_norst_0/dout] [get_bd_pins LTC2208_derandomise_1/din]
  connect_bd_net -net selectio_wiz_0_data_in_to_device [get_bd_pins selectio_wiz_0/data_in_to_device] [get_bd_pins D_register_norst_1/din]
  connect_bd_net -net selectio_wiz_1_data_in_to_device [get_bd_pins selectio_wiz_1/data_in_to_device] [get_bd_pins D_register_norst_0/din]
  connect_bd_net -net selectio_wiz_2_data_in_to_device [get_bd_pins selectio_wiz_2/data_in_to_device] [get_bd_pins D_register_norst_2/din]
  connect_bd_net -net selectio_wiz_3_data_in_to_device [get_bd_pins selectio_wiz_3/data_in_to_device] [get_bd_pins D_register_norst_3/din]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlslice_0/Dout] [get_bd_pins LTC2208_derandomise_0/rand_sel]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlslice_1/Dout] [get_bd_pins LTC2208_derandomise_1/rand_sel]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set PROM_SPI [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:spi_rtl:1.0 PROM_SPI ]

  set pcie_7x_mgt_rtl_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_7x_mgt_rtl_0 ]

  set pcie_diff_clock_rtl [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pcie_diff_clock_rtl ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {100000000} \
   ] $pcie_diff_clock_rtl


  # Create ports
  set ADC1Ovr_In_N [ create_bd_port -dir I ADC1Ovr_In_N ]
  set ADC1Ovr_In_P [ create_bd_port -dir I ADC1Ovr_In_P ]
  set ADC1_ATTEN_CLK [ create_bd_port -dir O ADC1_ATTEN_CLK ]
  set ADC1_ATTEN_DAT [ create_bd_port -dir O ADC1_ATTEN_DAT ]
  set ADC1_ATTEN_LE [ create_bd_port -dir O ADC1_ATTEN_LE ]
  set ADC1_CLKin_N [ create_bd_port -dir I ADC1_CLKin_N ]
  set ADC1_CLKin_P [ create_bd_port -dir I ADC1_CLKin_P ]
  set ADC1_In_N [ create_bd_port -dir I -from 15 -to 0 ADC1_In_N ]
  set ADC1_In_P [ create_bd_port -dir I -from 15 -to 0 ADC1_In_P ]
  set ADC2Ovr_In_N [ create_bd_port -dir I ADC2Ovr_In_N ]
  set ADC2Ovr_In_P [ create_bd_port -dir I ADC2Ovr_In_P ]
  set ADC2_ATTEN_CLK [ create_bd_port -dir O ADC2_ATTEN_CLK ]
  set ADC2_ATTEN_DAT [ create_bd_port -dir O ADC2_ATTEN_DAT ]
  set ADC2_ATTEN_LE [ create_bd_port -dir O ADC2_ATTEN_LE ]
  set ADC2_CLKin_N [ create_bd_port -dir I ADC2_CLKin_N ]
  set ADC2_CLKin_P [ create_bd_port -dir I ADC2_CLKin_P ]
  set ADC2_In_N [ create_bd_port -dir I -from 15 -to 0 ADC2_In_N ]
  set ADC2_In_P [ create_bd_port -dir I -from 15 -to 0 ADC2_In_P ]
  set ADC_CLK [ create_bd_port -dir O -from 0 -to 0 ADC_CLK ]
  set ADC_MISO [ create_bd_port -dir I ADC_MISO ]
  set ADC_MOSI [ create_bd_port -dir O -from 0 -to 0 ADC_MOSI ]
  set ATU_TUNE [ create_bd_port -dir O -from 0 -to 0 ATU_TUNE ]
  set BCLK [ create_bd_port -dir O BCLK ]
  set BLINK_LED [ create_bd_port -dir O -from 0 -to 0 BLINK_LED ]
  set BUFF_Alex_Pin1 [ create_bd_port -dir I BUFF_Alex_Pin1 ]
  set BUFF_Alex_Pin8 [ create_bd_port -dir I BUFF_Alex_Pin8 ]
  set BUF_Out_FPGA [ create_bd_port -dir O -from 0 -to 0 BUF_Out_FPGA ]
  set CTRL_TRSW [ create_bd_port -dir O CTRL_TRSW ]
  set DAC_Out_N [ create_bd_port -dir O -from 15 -to 0 DAC_Out_N ]
  set DAC_Out_P [ create_bd_port -dir O -from 15 -to 0 DAC_Out_P ]
  set DRIVER_PA_EN [ create_bd_port -dir O DRIVER_PA_EN ]
  set Dac_Atten [ create_bd_port -dir O -from 5 -to 0 Dac_Atten ]
  set Dac_Atten_Clk [ create_bd_port -dir O -from 0 -to 0 Dac_Atten_Clk ]
  set Dac_Atten_Data [ create_bd_port -dir O -from 0 -to 0 Dac_Atten_Data ]
  set Dac_Atten_LE [ create_bd_port -dir O -from 0 -to 0 Dac_Atten_LE ]
  set Dac_Atten_Mode [ create_bd_port -dir O -from 0 -to 0 Dac_Atten_Mode ]
  set EMC_CLK [ create_bd_port -dir I -type clk -freq_hz 122880000 EMC_CLK ]
  set FPGA_CM4_EN [ create_bd_port -dir O -from 0 -to 0 FPGA_CM4_EN ]
  set GPIO_OUT [ create_bd_port -dir O -from 23 -to 0 GPIO_OUT ]
  set LEDOutputs [ create_bd_port -dir O -from 15 -to 0 LEDOutputs ]
  set LRCLK [ create_bd_port -dir O LRCLK ]
  set MCLK [ create_bd_port -dir O -type clk MCLK ]
  set MOX_strobe [ create_bd_port -dir O MOX_strobe ]
  set PCIECLKREQN [ create_bd_port -dir O -from 0 -to 0 PCIECLKREQN ]
  set PCI_LINK_LED [ create_bd_port -dir O -from 0 -to 0 PCI_LINK_LED ]
  set PCIe_T_SMBCLK [ create_bd_port -dir I PCIe_T_SMBCLK ]
  set PCIe_T_SMBDAT [ create_bd_port -dir I PCIe_T_SMBDAT ]
  set RF_SPI_CK [ create_bd_port -dir O RF_SPI_CK ]
  set RF_SPI_DATA [ create_bd_port -dir O RF_SPI_DATA ]
  set RF_SPI_RX_LOAD [ create_bd_port -dir O RF_SPI_RX_LOAD ]
  set RF_SPI_TX_LOAD [ create_bd_port -dir O RF_SPI_TX_LOAD ]
  set TXRX_RELAY [ create_bd_port -dir O -from 0 -to 0 TXRX_RELAY ]
  set TX_DAC_PWM [ create_bd_port -dir O TX_DAC_PWM ]
  set TX_ENABLE [ create_bd_port -dir I TX_ENABLE ]
  set clock_122_in_n [ create_bd_port -dir I clock_122_in_n ]
  set clock_122_in_p [ create_bd_port -dir I -type clk -freq_hz 122880000 clock_122_in_p ]
  set i2srxd [ create_bd_port -dir I i2srxd ]
  set i2stxd [ create_bd_port -dir O i2stxd ]
  set nADC_CS [ create_bd_port -dir O -from 0 -to 0 nADC_CS ]
  set pcie_reset_n [ create_bd_port -dir I -type rst pcie_reset_n ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $pcie_reset_n
  set pll_cr [ create_bd_port -dir O pll_cr ]
  set ref_in_10 [ create_bd_port -dir I ref_in_10 ]
  set status_in [ create_bd_port -dir I -from 9 -to 0 status_in ]
  set CODEC_SPI_DATA [ create_bd_port -dir O CODEC_SPI_DATA ]
  set CODEC_SPI_CLK [ create_bd_port -dir O CODEC_SPI_CLK ]
  set CODEC_CS [ create_bd_port -dir O CODEC_CS ]
  set pcb_version_id [ create_bd_port -dir I -from 3 -to 0 pcb_version_id ]

  # Create instance: ADC_LVDS_Pins
  create_hier_cell_ADC_LVDS_Pins [current_bd_instance .] ADC_LVDS_Pins

  # Create instance: DAC_LVDS_Pins
  create_hier_cell_DAC_LVDS_Pins [current_bd_instance .] DAC_LVDS_Pins

  # Create instance: FIFO_Interfaces
  create_hier_cell_FIFO_Interfaces [current_bd_instance .] FIFO_Interfaces

  # Create instance: PCIe
  create_hier_cell_PCIe [current_bd_instance .] PCIe

  # Create instance: RF_interfaces
  create_hier_cell_RF_interfaces [current_bd_instance .] RF_interfaces

  # Create instance: Receiver
  create_hier_cell_Receiver [current_bd_instance .] Receiver

  # Create instance: Transmitter
  create_hier_cell_Transmitter [current_bd_instance .] Transmitter

  # Create instance: audio_codec_0, and set properties
  set audio_codec_0 [ create_bd_cell -type container -reference audio_codec audio_codec_0 ]
  set_property -dict [list \
    CONFIG.ACTIVE_SIM_BD {audio_codec.bd} \
    CONFIG.ACTIVE_SYNTH_BD {audio_codec.bd} \
    CONFIG.ENABLE_DFX {0} \
    CONFIG.LIST_SIM_BD {audio_codec.bd} \
    CONFIG.LIST_SYNTH_BD {audio_codec.bd} \
    CONFIG.LOCK_PROPAGATE {0} \
  ] $audio_codec_0


  # Create instance: clock_generator
  create_hier_cell_clock_generator [current_bd_instance .] clock_generator

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {4} \
    CONFIG.DIN_TO {4} \
    CONFIG.DIN_WIDTH {5} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_0


  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {3} \
    CONFIG.DIN_TO {3} \
    CONFIG.DIN_WIDTH {5} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_1


  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DIN_TO {2} \
    CONFIG.DIN_WIDTH {5} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_2


  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_TO {1} \
    CONFIG.DIN_WIDTH {5} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_3


  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {0} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {5} \
    CONFIG.DOUT_WIDTH {1} \
  ] $xlslice_4


  # Create instance: clock_monitor_0, and set properties
  set block_name clock_monitor
  set block_cell_name clock_monitor_0
  if { [catch {set clock_monitor_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $clock_monitor_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: IambicKeyer
  create_hier_cell_IambicKeyer [current_bd_instance .] IambicKeyer

  # Create instance: axis_data_fifo_0, and set properties
  set axis_data_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_0 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {16} \
    CONFIG.IS_ACLK_ASYNC {1} \
  ] $axis_data_fifo_0


  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_0


  # Create instance: Wideband_Collect_0, and set properties
  set block_name Wideband_Collect
  set block_cell_name Wideband_Collect_0
  if { [catch {set Wideband_Collect_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Wideband_Collect_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_data_fifo_1, and set properties
  set axis_data_fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_1 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {8192} \
    CONFIG.HAS_WR_DATA_COUNT {1} \
    CONFIG.IS_ACLK_ASYNC {1} \
    CONFIG.TDATA_NUM_BYTES {8} \
  ] $axis_data_fifo_1


  # Create instance: byteswap_64_0, and set properties
  set block_name byteswap_64
  set block_cell_name byteswap_64_0
  if { [catch {set byteswap_64_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $byteswap_64_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net AXIS00_WB_1 [get_bd_intf_pins FIFO_Interfaces/S_AXIS00_WB] [get_bd_intf_pins axis_data_fifo_1/M_AXIS]
  connect_bd_intf_net -intf_net FIFO_Interfaces_M_AXIS_codec [get_bd_intf_pins FIFO_Interfaces/M_AXIS_codec] [get_bd_intf_pins audio_codec_0/LR_Spkr_data]
  connect_bd_intf_net -intf_net PCIe_M03_AXI_0 [get_bd_intf_pins FIFO_Interfaces/s_axi_lite_0] [get_bd_intf_pins PCIe/M03_AXI_0]
  connect_bd_intf_net -intf_net PCIe_M08_AXI_0 [get_bd_intf_pins PCIe/M08_AXI_0] [get_bd_intf_pins Transmitter/S_AXI_keyerBRAM]
  connect_bd_intf_net -intf_net PCIe_M09_AXI [get_bd_intf_pins PCIe/M09_AXI] [get_bd_intf_pins Receiver/s_axi_2]
  connect_bd_intf_net -intf_net PCIe_M12_AXI_WB [get_bd_intf_pins PCIe/M12_AXI_WB] [get_bd_intf_pins Wideband_Collect_0/s_axi]
  connect_bd_intf_net -intf_net PCIe_M_AXI_Alex [get_bd_intf_pins PCIe/M_AXI_Alex] [get_bd_intf_pins RF_interfaces/s_axi_alex]
  connect_bd_intf_net -intf_net PCIe_M_AXI_full_0 [get_bd_intf_pins FIFO_Interfaces/S00_AXI_0] [get_bd_intf_pins PCIe/M_AXI_full_0]
  connect_bd_intf_net -intf_net PCIe_SPI_0_0 [get_bd_intf_ports PROM_SPI] [get_bd_intf_pins PCIe/PROM_SPI]
  connect_bd_intf_net -intf_net PCIe_pcie_7x_mgt_rtl_0 [get_bd_intf_ports pcie_7x_mgt_rtl_0] [get_bd_intf_pins PCIe/pcie_7x_mgt_rtl_0]
  connect_bd_intf_net -intf_net Receiver_RX_Data [get_bd_intf_pins Receiver/RX_Data] [get_bd_intf_pins FIFO_Interfaces/S_AXIS_RX]
  connect_bd_intf_net -intf_net S_AXIS_codec_1 [get_bd_intf_pins FIFO_Interfaces/S_AXIS_codec] [get_bd_intf_pins audio_codec_0/RX_Audio_Data]
  connect_bd_intf_net -intf_net TX_IQ_In_1 [get_bd_intf_pins FIFO_Interfaces/M_AXIS_TX] [get_bd_intf_pins Transmitter/TX_IQ_In]
  connect_bd_intf_net -intf_net Transmitter_m_axis_sidetoneampl [get_bd_intf_pins Transmitter/m_axis_sidetoneampl] [get_bd_intf_pins axis_data_fifo_0/S_AXIS]
  connect_bd_intf_net -intf_net Wideband_Collect_0_m_axis [get_bd_intf_pins byteswap_64_0/s_axis] [get_bd_intf_pins Wideband_Collect_0/m_axis]
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_pins axis_data_fifo_0/M_AXIS] [get_bd_intf_pins audio_codec_0/S_AXIS_KeyerAmpl]
  connect_bd_intf_net -intf_net byteswap_64_0_m_axis [get_bd_intf_pins byteswap_64_0/m_axis] [get_bd_intf_pins axis_data_fifo_1/S_AXIS]
  connect_bd_intf_net -intf_net diff_clock_rtl_0_1 [get_bd_intf_ports pcie_diff_clock_rtl] [get_bd_intf_pins PCIe/diff_clock_rtl_0]
  connect_bd_intf_net -intf_net s_axi_0_1 [get_bd_intf_pins PCIe/M00_AXI_0] [get_bd_intf_pins Receiver/s_axi_0]
  connect_bd_intf_net -intf_net s_axi_1_1 [get_bd_intf_pins PCIe/M01_AXI_0] [get_bd_intf_pins Receiver/s_axi_1]

  # Create port connections
  connect_bd_net -net ADC1Ovr_In_N_1 [get_bd_ports ADC1Ovr_In_N] [get_bd_pins ADC_LVDS_Pins/ADC1_Ovr_In_N]
  connect_bd_net -net ADC1Ovr_In_P_1 [get_bd_ports ADC1Ovr_In_P] [get_bd_pins ADC_LVDS_Pins/ADC1_Ovr_In_P]
  connect_bd_net -net ADC1_CLKin_N_1 [get_bd_ports ADC1_CLKin_N] [get_bd_pins ADC_LVDS_Pins/ADC1_CLKin_N]
  connect_bd_net -net ADC1_CLKin_P_1 [get_bd_ports ADC1_CLKin_P] [get_bd_pins ADC_LVDS_Pins/ADC1_CLKin_P]
  connect_bd_net -net ADC1_In_N_1 [get_bd_ports ADC1_In_N] [get_bd_pins ADC_LVDS_Pins/ADC1_In_N]
  connect_bd_net -net ADC1_In_P_1 [get_bd_ports ADC1_In_P] [get_bd_pins ADC_LVDS_Pins/ADC1_In_P]
  connect_bd_net -net ADC1_Overrange_1 [get_bd_pins ADC_LVDS_Pins/ADC1Overrange_SingleEnded] [get_bd_pins PCIe/ADC1_Overrange]
  connect_bd_net -net ADC2Ovr_In_N_1 [get_bd_ports ADC2Ovr_In_N] [get_bd_pins ADC_LVDS_Pins/ADC2_Ovr_In_N]
  connect_bd_net -net ADC2Ovr_In_P_1 [get_bd_ports ADC2Ovr_In_P] [get_bd_pins ADC_LVDS_Pins/ADC2_Ovr_In_P]
  connect_bd_net -net ADC2_CLKin_N_1 [get_bd_ports ADC2_CLKin_N] [get_bd_pins ADC_LVDS_Pins/ADC2_CLKin_N]
  connect_bd_net -net ADC2_CLKin_P_1 [get_bd_ports ADC2_CLKin_P] [get_bd_pins ADC_LVDS_Pins/ADC2_CLKin_P]
  connect_bd_net -net ADC2_In_N_1 [get_bd_ports ADC2_In_N] [get_bd_pins ADC_LVDS_Pins/ADC2_In_N]
  connect_bd_net -net ADC2_In_P_1 [get_bd_ports ADC2_In_P] [get_bd_pins ADC_LVDS_Pins/ADC2_In_P]
  connect_bd_net -net ADC2_Overrange_1 [get_bd_pins ADC_LVDS_Pins/ADC2Overrange_SingleEnded] [get_bd_pins PCIe/ADC2_Overrange]
  connect_bd_net -net ADC_Ctrl_1 [get_bd_pins PCIe/ADCCtrlData] [get_bd_pins RF_interfaces/ADC_Ctrl]
  connect_bd_net -net ADC_LVDS_Pins_ADC1_SingleEnded [get_bd_pins ADC_LVDS_Pins/ADC1_SingleEnded] [get_bd_pins Receiver/adc1] [get_bd_pins Wideband_Collect_0/adc0]
  connect_bd_net -net ADC_LVDS_Pins_ADC2_SingleEnded [get_bd_pins ADC_LVDS_Pins/ADC2_SingleEnded] [get_bd_pins Receiver/adc2] [get_bd_pins Wideband_Collect_0/adc1]
  connect_bd_net -net ADC_MISO_0_1 [get_bd_ports ADC_MISO] [get_bd_pins PCIe/ADC_MISO]
  connect_bd_net -net BUFF_Alex_Pin1_0_1 [get_bd_ports BUFF_Alex_Pin1] [get_bd_pins RF_interfaces/BUFF_Alex_Pin1]
  connect_bd_net -net BUFF_Alex_Pin8_0_1 [get_bd_ports BUFF_Alex_Pin8] [get_bd_pins RF_interfaces/BUFF_Alex_Pin8]
  connect_bd_net -net Byteswap_1 [get_bd_pins PCIe/Byteswap] [get_bd_pins Transmitter/Byteswap] [get_bd_pins Receiver/Byteswap] [get_bd_pins audio_codec_0/Byteswap] [get_bd_pins byteswap_64_0/swap]
  connect_bd_net -net CodecConfig_1 [get_bd_pins PCIe/CodecConfigData] [get_bd_pins audio_codec_0/CodecConfig]
  connect_bd_net -net CodecMicResetn_1 [get_bd_pins PCIe/CodecMicRstn] [get_bd_pins FIFO_Interfaces/CodecMicResetn]
  connect_bd_net -net CodecSpkResetn_1 [get_bd_pins PCIe/CodecSkpRstn] [get_bd_pins FIFO_Interfaces/CodecSpkResetn]
  connect_bd_net -net DAC_Ctrl_1 [get_bd_pins PCIe/DACCtrlData] [get_bd_pins RF_interfaces/DAC_Ctrl]
  connect_bd_net -net DAC_LVDS_Pins_DAC_Out_N [get_bd_pins DAC_LVDS_Pins/DAC_Out_N] [get_bd_ports DAC_Out_N]
  connect_bd_net -net DAC_LVDS_Pins_DAC_Out_P [get_bd_pins DAC_LVDS_Pins/DAC_Out_P] [get_bd_ports DAC_Out_P]
  connect_bd_net -net DAC_SingleEnded_1 [get_bd_pins Transmitter/TXDACData] [get_bd_pins DAC_LVDS_Pins/DAC_SingleEnded]
  connect_bd_net -net EMC_CLK_1 [get_bd_ports EMC_CLK] [get_bd_pins clock_monitor_0/ck2]
  connect_bd_net -net IambicConfig_1 [get_bd_pins PCIe/IambicConfig] [get_bd_pins IambicKeyer/IambicConfig]
  connect_bd_net -net IambicKeyer_CW_Key_Down [get_bd_pins IambicKeyer/CW_Key_Down] [get_bd_pins Transmitter/cw_key_down]
  connect_bd_net -net PCIe_ADC_CLK [get_bd_pins PCIe/ADC_CLK] [get_bd_ports ADC_CLK]
  connect_bd_net -net PCIe_ADC_MOSI [get_bd_pins PCIe/ADC_MOSI] [get_bd_ports ADC_MOSI]
  connect_bd_net -net PCIe_FPGA_CM4_EN [get_bd_pins PCIe/FPGA_CM4_EN] [get_bd_ports FPGA_CM4_EN]
  connect_bd_net -net PCIe_LEDDrivers [get_bd_pins PCIe/LEDDrivers] [get_bd_ports LEDOutputs]
  connect_bd_net -net PCIe_PCIECLKREQN [get_bd_pins PCIe/PCIECLKREQN] [get_bd_ports PCIECLKREQN]
  connect_bd_net -net PCIe_PCI_LINK_LED [get_bd_pins PCIe/PCI_LINK_LED] [get_bd_ports PCI_LINK_LED]
  connect_bd_net -net PCIe_RFGPIOData [get_bd_pins PCIe/RFGPIOData] [get_bd_pins RF_interfaces/RF_GPIO]
  connect_bd_net -net PCIe_TXTestFreqData [get_bd_pins PCIe/TXTestFreqData] [get_bd_pins Transmitter/TXTestFreq]
  connect_bd_net -net PCIe_T_SMBCLK_0_1 [get_bd_ports PCIe_T_SMBCLK] [get_bd_pins PCIe/PCIe_T_SMBCLK]
  connect_bd_net -net PCIe_T_SMBDAT_0_1 [get_bd_ports PCIe_T_SMBDAT] [get_bd_pins PCIe/PCIe_T_SMBDAT]
  connect_bd_net -net PCIe_aresetn12 [get_bd_pins PCIe/aresetn12] [get_bd_pins FIFO_Interfaces/aresetn_12] [get_bd_pins Transmitter/resetn_12]
  connect_bd_net -net PCIe_axi_aclk_125 [get_bd_pins PCIe/axi_aclk_125] [get_bd_pins FIFO_Interfaces/CLK125] [get_bd_pins clock_monitor_0/aclk] [get_bd_pins axis_data_fifo_1/m_axis_aclk]
  connect_bd_net -net PCIe_axi_resetn [get_bd_pins PCIe/axi_resetn] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_4/Din]
  connect_bd_net -net PCIe_codec_cs [get_bd_pins PCIe/codec_cs] [get_bd_ports CODEC_CS]
  connect_bd_net -net PCIe_codecspiclk [get_bd_pins PCIe/codecspiclk] [get_bd_ports CODEC_SPI_CLK]
  connect_bd_net -net PCIe_codecspidata [get_bd_pins PCIe/codecspidata] [get_bd_ports CODEC_SPI_DATA]
  connect_bd_net -net PCIe_nADC_CS [get_bd_pins PCIe/nADC_CS] [get_bd_ports nADC_CS]
  connect_bd_net -net PWM_DAC_0_DAC_bit [get_bd_pins RF_interfaces/TX_DAC_PWM] [get_bd_ports TX_DAC_PWM]
  connect_bd_net -net RF_interfaces_BUF_Out_FPGA [get_bd_pins RF_interfaces/BUF_Out_FPGA] [get_bd_ports BUF_Out_FPGA]
  connect_bd_net -net RF_interfaces_Dac_Atten_Clk [get_bd_pins RF_interfaces/Dac_Atten_Clk] [get_bd_ports Dac_Atten_Clk]
  connect_bd_net -net RF_interfaces_Dac_Atten_Data [get_bd_pins RF_interfaces/Dac_Atten_Data] [get_bd_ports Dac_Atten_Data]
  connect_bd_net -net RF_interfaces_Dac_Atten_LE [get_bd_pins RF_interfaces/Dac_Atten_LE] [get_bd_ports Dac_Atten_LE]
  connect_bd_net -net RF_interfaces_Dac_Atten_Mode [get_bd_pins RF_interfaces/Dac_Atten_Mode] [get_bd_ports Dac_Atten_Mode]
  connect_bd_net -net RF_interfaces_Dbounced_Key_Dash [get_bd_pins RF_interfaces/Dbounced_Key_Dash] [get_bd_pins IambicKeyer/Key_Dash]
  connect_bd_net -net RF_interfaces_Debounced_Key_Dot [get_bd_pins RF_interfaces/Debounced_Key_Dot] [get_bd_pins IambicKeyer/Key_Dot]
  connect_bd_net -net RF_interfaces_Driver_PA_En [get_bd_pins RF_interfaces/Driver_PA_En] [get_bd_ports DRIVER_PA_EN] [get_bd_pins Transmitter/TXStrobe]
  connect_bd_net -net RF_interfaces_IO8 [get_bd_pins RF_interfaces/IO8] [get_bd_pins IambicKeyer/IO8]
  connect_bd_net -net RF_interfaces_MOX_strobe [get_bd_pins RF_interfaces/MOX_strobe] [get_bd_ports MOX_strobe]
  connect_bd_net -net RF_interfaces_status_out [get_bd_pins RF_interfaces/status_out] [get_bd_pins PCIe/Status_data]
  connect_bd_net -net RX_FIFO_aresetn_1 [get_bd_pins PCIe/DDCFIFORstn] [get_bd_pins FIFO_Interfaces/RX_FIFO_aresetn]
  connect_bd_net -net SPI_0_Rx_load_strobe [get_bd_pins RF_interfaces/RF_SPI_RX_LOAD] [get_bd_ports RF_SPI_RX_LOAD]
  connect_bd_net -net SPI_0_SPI_clock [get_bd_pins RF_interfaces/RF_SPI_CK] [get_bd_ports RF_SPI_CK]
  connect_bd_net -net SPI_0_SPI_data [get_bd_pins RF_interfaces/RF_SPI_DATA] [get_bd_ports RF_SPI_DATA]
  connect_bd_net -net SPI_0_Tx_load_strobe [get_bd_pins RF_interfaces/RF_SPI_TX_LOAD] [get_bd_ports RF_SPI_TX_LOAD]
  connect_bd_net -net SerialAtten_0_ATTN_CLK [get_bd_pins RF_interfaces/ADC1_ATTEN_CLK] [get_bd_ports ADC1_ATTEN_CLK]
  connect_bd_net -net SerialAtten_0_ATTN_DATA [get_bd_pins RF_interfaces/ADC1_ATTEN_DAT] [get_bd_ports ADC1_ATTEN_DAT]
  connect_bd_net -net SerialAtten_0_ATTN_LE [get_bd_pins RF_interfaces/ADC1_ATTEN_LE] [get_bd_ports ADC1_ATTEN_LE]
  connect_bd_net -net SerialAtten_1_ATTN_CLK [get_bd_pins RF_interfaces/ADC2_ATTEN_CLK] [get_bd_ports ADC2_ATTEN_CLK]
  connect_bd_net -net SerialAtten_1_ATTN_DATA [get_bd_pins RF_interfaces/ADC2_ATTEN_DAT] [get_bd_ports ADC2_ATTEN_DAT]
  connect_bd_net -net SerialAtten_1_ATTN_LE [get_bd_pins RF_interfaces/ADC2_ATTEN_LE] [get_bd_ports ADC2_ATTEN_LE]
  connect_bd_net -net TXConfig_1 [get_bd_pins PCIe/TXConfigData] [get_bd_pins Transmitter/TXConfig]
  connect_bd_net -net TXLOTune_1 [get_bd_pins PCIe/TXFreqData] [get_bd_pins Transmitter/TXLOTune]
  connect_bd_net -net TX_ENABLE_0_1 [get_bd_ports TX_ENABLE] [get_bd_pins PCIe/TX_ENABLE] [get_bd_pins Transmitter/TX_ENABLE]
  connect_bd_net -net TX_FIFO_aresetn_1 [get_bd_pins PCIe/DUCFIFORstn] [get_bd_pins FIFO_Interfaces/TX_FIFO_aresetn]
  connect_bd_net -net Transmitter_cw_ptt1 [get_bd_pins Transmitter/cw_ptt1] [get_bd_pins RF_interfaces/keyer_PTT] [get_bd_pins PCIe/CK_KEY_DOWN]
  connect_bd_net -net Transmitter_txmux_reset [get_bd_pins Transmitter/txmux_reset] [get_bd_pins FIFO_Interfaces/txmux_reset]
  connect_bd_net -net aclk_1 [get_bd_pins clock_generator/clock_122_out_DAC] [get_bd_pins DAC_LVDS_Pins/aclk]
  connect_bd_net -net adcrand_1 [get_bd_pins RF_interfaces/ADC_Randomise] [get_bd_pins ADC_LVDS_Pins/adcrand]
  connect_bd_net -net aresetn_125_1 [get_bd_pins PCIe/axi_aresetn_125] [get_bd_pins FIFO_Interfaces/aresetn_125] [get_bd_pins clock_monitor_0/aresetn]
  connect_bd_net -net audio_codec_0_BCLK [get_bd_pins audio_codec_0/BCLK] [get_bd_ports BCLK]
  connect_bd_net -net audio_codec_0_LRCLK [get_bd_pins audio_codec_0/LRCLK] [get_bd_ports LRCLK]
  connect_bd_net -net audio_codec_0_MCLK [get_bd_pins audio_codec_0/MCLK] [get_bd_ports MCLK]
  connect_bd_net -net audio_codec_0_i2stxd [get_bd_pins audio_codec_0/i2stxd] [get_bd_ports i2stxd]
  connect_bd_net -net axis_data_fifo_1_axis_wr_data_count [get_bd_pins axis_data_fifo_1/axis_wr_data_count] [get_bd_pins Wideband_Collect_0/fifo_count]
  connect_bd_net -net clk_wiz_0_clk_out2 [get_bd_pins clock_generator/clock_12_out] [get_bd_pins FIFO_Interfaces/CLK12] [get_bd_pins PCIe/clk12] [get_bd_pins RF_interfaces/codec_clk] [get_bd_pins Transmitter/clk12] [get_bd_pins audio_codec_0/clk12] [get_bd_pins IambicKeyer/clk12] [get_bd_pins axis_data_fifo_0/m_axis_aclk]
  connect_bd_net -net clock_122_1 [get_bd_ports clock_122_in_p] [get_bd_pins clock_generator/clock_122_in_p]
  connect_bd_net -net clock_122_in_n_1 [get_bd_ports clock_122_in_n] [get_bd_pins clock_generator/clock_122_in_n]
  connect_bd_net -net clock_generator_clock_122_out [get_bd_pins clock_generator/clock_122_out] [get_bd_pins FIFO_Interfaces/CLK122] [get_bd_pins PCIe/clk_122] [get_bd_pins RF_interfaces/aclk] [get_bd_pins Receiver/aclk] [get_bd_pins Transmitter/clk122] [get_bd_pins ADC_LVDS_Pins/aclk] [get_bd_pins clock_monitor_0/ck0] [get_bd_pins clock_monitor_0/ck3] [get_bd_pins axis_data_fifo_0/s_axis_aclk] [get_bd_pins Wideband_Collect_0/aclk] [get_bd_pins axis_data_fifo_1/s_axis_aclk] [get_bd_pins byteswap_64_0/aclk]
  connect_bd_net -net clock_generator_clock_122_out_ADC [get_bd_pins clock_generator/clock_122_out_ADC] [get_bd_pins ADC_LVDS_Pins/aclk_inreg]
  connect_bd_net -net clock_generator_pll_lock [get_bd_pins clock_generator/pll_lock] [get_bd_pins PCIe/PLL_LOCK]
  connect_bd_net -net clock_mon_1 [get_bd_pins clock_monitor_0/dout] [get_bd_pins PCIe/clock_mon]
  connect_bd_net -net clock_monitor_0_LED [get_bd_pins clock_monitor_0/LED] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net is2rxd_1 [get_bd_ports i2srxd] [get_bd_pins audio_codec_0/i2srxd]
  connect_bd_net -net keyer_config_1 [get_bd_pins PCIe/KeyerConfigData] [get_bd_pins Transmitter/keyer_config]
  connect_bd_net -net pcb_version_id_0_1 [get_bd_ports pcb_version_id] [get_bd_pins PCIe/pcb_version_id]
  connect_bd_net -net ref_in_10_1 [get_bd_ports ref_in_10] [get_bd_pins clock_generator/ref_in_10] [get_bd_pins clock_monitor_0/ck1]
  connect_bd_net -net regmux_2_1_1_dout [get_bd_pins RF_interfaces/Dac_Atten] [get_bd_ports Dac_Atten]
  connect_bd_net -net reset_rtl_0_1 [get_bd_ports pcie_reset_n] [get_bd_pins PCIe/reset_rtl_0]
  connect_bd_net -net status_in_1 [get_bd_ports status_in] [get_bd_pins RF_interfaces/status_in]
  connect_bd_net -net tx_samples_1 [get_bd_pins Transmitter/TXSamplesToRX] [get_bd_pins Receiver/tx_samples]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins clock_generator/pll_cr] [get_bd_ports pll_cr]
  connect_bd_net -net util_reduced_logic_2_Res [get_bd_pins RF_interfaces/CTRL_TRSW] [get_bd_ports CTRL_TRSW]
  connect_bd_net -net util_reduced_logic_3_Res [get_bd_pins RF_interfaces/TXRX_RELAY] [get_bd_ports TXRX_RELAY]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins util_vector_logic_0/Res] [get_bd_ports BLINK_LED]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins RF_interfaces/GPIO_OUT] [get_bd_ports GPIO_OUT]
  connect_bd_net -net xlslice_0_Dout1 [get_bd_pins xlslice_0/Dout] [get_bd_pins RF_interfaces/rstn]
  connect_bd_net -net xlslice_1_Dout1 [get_bd_pins xlslice_1/Dout] [get_bd_pins Transmitter/resetn1] [get_bd_pins FIFO_Interfaces/aresetn_122] [get_bd_pins axis_data_fifo_0/s_axis_aresetn]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlslice_2/Dout] [get_bd_pins audio_codec_0/arstn] [get_bd_pins IambicKeyer/aresetn]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlslice_3/Dout] [get_bd_pins Receiver/rstn1] [get_bd_pins Wideband_Collect_0/aresetn] [get_bd_pins axis_data_fifo_1/s_axis_aresetn] [get_bd_pins byteswap_64_0/aresetn]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlslice_4/Dout] [get_bd_pins DAC_LVDS_Pins/aresetn]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins RF_interfaces/ATU_TUNE] [get_bd_ports ATU_TUNE]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00040000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00080000 -range 0x00040000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_1/s_axi/reg0] -force
  assign_bd_address -offset 0x00040000 -range 0x00040000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI] [get_bd_addr_segs FIFO_Interfaces/AXI_Stream_Reader_Wr_codec/s_axi/reg0] -force
  assign_bd_address -offset 0x00002000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXIL_ConfigReg_256_2/s_axi/reg0] -force
  assign_bd_address -offset 0x00000000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs Receiver/AXIL_ConfigReg_256_RX_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00001000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs Receiver/AXIL_ConfigReg_256_RX_1/s_axi/reg0] -force
  assign_bd_address -offset 0x00003000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXIL_ConfigReg_64_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00007000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXIL_ConfigReg_64_1/s_axi/reg0] -force
  assign_bd_address -offset 0x00004000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXIL_ReadReg_64_0/s_axi/reg0] -force
  assign_bd_address -offset 0x0000C000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXIL_ReadReg_64_ID/s_axi/reg0] -force
  assign_bd_address -offset 0x00014000 -range 0x00004000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXIL_SPIWriter_0/s_axi/reg0] -force
  assign_bd_address -offset 0x0000B000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs RF_interfaces/AXILite_Alex_SPI_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00005000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXI_FIFO_overflow_re_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00006000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs Receiver/AXI_FIFO_overflow_re_0/s_axi/reg0] -force
  assign_bd_address -offset 0x0000A000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/AXI_SPI_ADC_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00009000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs FIFO_Interfaces/FIFO_Monitor_0/s_axi/reg0] -force
  assign_bd_address -offset 0x0000D000 -range 0x00001000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs Wideband_Collect_0/s_axi/reg0] -force
  assign_bd_address -offset 0x0001C000 -range 0x00004000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs Transmitter/IQ_Modulation_Select/axi_bram_ctrl_0/S_AXI/Mem0] -force
  assign_bd_address -offset 0x00010000 -range 0x00004000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/axi_quad_spi_0/AXI_LITE/Reg] -force
  assign_bd_address -offset 0x00018000 -range 0x00004000 -target_address_space [get_bd_addr_spaces PCIe/xdma_0/M_AXI_LITE] [get_bd_addr_segs PCIe/xadc_wiz_0/s_axi_lite/Reg] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_Layers":"",
   "Default View_Layout":"",
   "Default View_ScaleFactor":"0.729102",
   "Default View_TopLeft":"2031,-173",
   "ExpandedHierarchyInLayout":"",
   "comment_0":"unused pins for PCIe bus configuration",
   "comment_1":"unused pins for PCIe bus configuration",
   "comment_2":"unused pins for PCIe bus configuration",
   "comment_3":"Unused Alex input pins",
   "commentid":"comment_0|comment_1|comment_2|comment_3|",
   "fillcolor_comment_1":"",
   "font_comment_0":"14",
   "font_comment_1":"14",
   "font_comment_2":"14",
   "font_comment_3":"14",
   "guistr":"# # String gsaved with Nlview 7.5.8 2022-09-21 7111 VDI=41 GEI=38 GUI=JA:10.0
#  -string -flagsOSRD
preplace port PROM_SPI -pg 1 -lvl 12 -x 6440 -y 660 -defaultsOSRD
preplace port pcie_7x_mgt_rtl_0 -pg 1 -lvl 12 -x 6440 -y 70 -defaultsOSRD
preplace port pcie_diff_clock_rtl -pg 1 -lvl 0 -x -320 -y 800 -defaultsOSRD
preplace port port-id_ADC1Ovr_In_N -pg 1 -lvl 0 -x -320 -y 1030 -defaultsOSRD
preplace port port-id_ADC1Ovr_In_P -pg 1 -lvl 0 -x -320 -y 1060 -defaultsOSRD
preplace port port-id_ADC1_ATTEN_CLK -pg 1 -lvl 12 -x 6440 -y -190 -defaultsOSRD
preplace port port-id_ADC1_ATTEN_DAT -pg 1 -lvl 12 -x 6440 -y -160 -defaultsOSRD
preplace port port-id_ADC1_ATTEN_LE -pg 1 -lvl 12 -x 6440 -y -130 -defaultsOSRD
preplace port port-id_ADC1_CLKin_N -pg 1 -lvl 0 -x -320 -y 910 -defaultsOSRD
preplace port port-id_ADC1_CLKin_P -pg 1 -lvl 0 -x -320 -y 940 -defaultsOSRD
preplace port port-id_ADC2Ovr_In_N -pg 1 -lvl 0 -x -320 -y 1210 -defaultsOSRD
preplace port port-id_ADC2Ovr_In_P -pg 1 -lvl 0 -x -320 -y 1240 -defaultsOSRD
preplace port port-id_ADC2_ATTEN_CLK -pg 1 -lvl 12 -x 6440 -y -100 -defaultsOSRD
preplace port port-id_ADC2_ATTEN_DAT -pg 1 -lvl 12 -x 6440 -y -70 -defaultsOSRD
preplace port port-id_ADC2_ATTEN_LE -pg 1 -lvl 12 -x 6440 -y -40 -defaultsOSRD
preplace port port-id_ADC2_CLKin_N -pg 1 -lvl 0 -x -320 -y 1090 -defaultsOSRD
preplace port port-id_ADC2_CLKin_P -pg 1 -lvl 0 -x -320 -y 1120 -defaultsOSRD
preplace port port-id_ADC_MISO -pg 1 -lvl 0 -x -320 -y 1410 -defaultsOSRD
preplace port port-id_BCLK -pg 1 -lvl 12 -x 6440 -y 990 -defaultsOSRD
preplace port port-id_BUFF_Alex_Pin1 -pg 1 -lvl 0 -x -320 -y 610 -defaultsOSRD
preplace port port-id_BUFF_Alex_Pin8 -pg 1 -lvl 0 -x -320 -y 640 -defaultsOSRD
preplace port port-id_CTRL_TRSW -pg 1 -lvl 12 -x 6440 -y 510 -defaultsOSRD
preplace port port-id_DRIVER_PA_EN -pg 1 -lvl 12 -x 6440 -y 420 -defaultsOSRD
preplace port port-id_EMC_CLK -pg 1 -lvl 0 -x -320 -y 580 -defaultsOSRD
preplace port port-id_LRCLK -pg 1 -lvl 12 -x 6440 -y 950 -defaultsOSRD
preplace port port-id_MCLK -pg 1 -lvl 12 -x 6440 -y 1120 -defaultsOSRD
preplace port port-id_MOX_strobe -pg 1 -lvl 12 -x 6440 -y 480 -defaultsOSRD
preplace port port-id_PCIe_T_SMBCLK -pg 1 -lvl 0 -x -320 -y 1470 -defaultsOSRD
preplace port port-id_PCIe_T_SMBDAT -pg 1 -lvl 0 -x -320 -y 1440 -defaultsOSRD
preplace port port-id_RF_SPI_CK -pg 1 -lvl 12 -x 6440 -y 570 -defaultsOSRD
preplace port port-id_RF_SPI_DATA -pg 1 -lvl 12 -x 6440 -y 600 -defaultsOSRD
preplace port port-id_RF_SPI_RX_LOAD -pg 1 -lvl 12 -x 6440 -y 630 -defaultsOSRD
preplace port port-id_RF_SPI_TX_LOAD -pg 1 -lvl 12 -x 6440 -y 690 -defaultsOSRD
preplace port port-id_TX_DAC_PWM -pg 1 -lvl 12 -x 6440 -y 720 -defaultsOSRD
preplace port port-id_TX_ENABLE -pg 1 -lvl 0 -x -320 -y 770 -defaultsOSRD
preplace port port-id_clock_122_in_n -pg 1 -lvl 0 -x -320 -y 1300 -defaultsOSRD
preplace port port-id_clock_122_in_p -pg 1 -lvl 0 -x -320 -y 1350 -defaultsOSRD
preplace port port-id_i2srxd -pg 1 -lvl 0 -x -320 -y 740 -defaultsOSRD
preplace port port-id_i2stxd -pg 1 -lvl 12 -x 6440 -y 1060 -defaultsOSRD
preplace port port-id_pcie_reset_n -pg 1 -lvl 0 -x -320 -y 880 -defaultsOSRD
preplace port port-id_pll_cr -pg 1 -lvl 12 -x 6440 -y -220 -defaultsOSRD
preplace port port-id_ref_in_10 -pg 1 -lvl 0 -x -320 -y 1380 -defaultsOSRD
preplace port port-id_CODEC_SPI_DATA -pg 1 -lvl 12 -x 6440 -y 1620 -defaultsOSRD
preplace port port-id_CODEC_SPI_CLK -pg 1 -lvl 12 -x 6440 -y 1640 -defaultsOSRD
preplace port port-id_CODEC_CS -pg 1 -lvl 12 -x 6440 -y 1240 -defaultsOSRD
preplace portBus ADC1_In_N -pg 1 -lvl 0 -x -320 -y 970 -defaultsOSRD
preplace portBus ADC1_In_P -pg 1 -lvl 0 -x -320 -y 1000 -defaultsOSRD
preplace portBus ADC2_In_N -pg 1 -lvl 0 -x -320 -y 1150 -defaultsOSRD
preplace portBus ADC2_In_P -pg 1 -lvl 0 -x -320 -y 1180 -defaultsOSRD
preplace portBus ADC_CLK -pg 1 -lvl 12 -x 6440 -y 180 -defaultsOSRD
preplace portBus ADC_MOSI -pg 1 -lvl 12 -x 6440 -y 1450 -defaultsOSRD
preplace portBus ATU_TUNE -pg 1 -lvl 12 -x 6440 -y 210 -defaultsOSRD
preplace portBus BLINK_LED -pg 1 -lvl 12 -x 6440 -y -10 -defaultsOSRD
preplace portBus BUF_Out_FPGA -pg 1 -lvl 12 -x 6440 -y 450 -defaultsOSRD
preplace portBus DAC_Out_N -pg 1 -lvl 12 -x 6440 -y 770 -defaultsOSRD
preplace portBus DAC_Out_P -pg 1 -lvl 12 -x 6440 -y 800 -defaultsOSRD
preplace portBus Dac_Atten -pg 1 -lvl 12 -x 6440 -y 240 -defaultsOSRD
preplace portBus Dac_Atten_Clk -pg 1 -lvl 12 -x 6440 -y 390 -defaultsOSRD
preplace portBus Dac_Atten_Data -pg 1 -lvl 12 -x 6440 -y 360 -defaultsOSRD
preplace portBus Dac_Atten_LE -pg 1 -lvl 12 -x 6440 -y 300 -defaultsOSRD
preplace portBus Dac_Atten_Mode -pg 1 -lvl 12 -x 6440 -y 330 -defaultsOSRD
preplace portBus FPGA_CM4_EN -pg 1 -lvl 12 -x 6440 -y 1390 -defaultsOSRD
preplace portBus GPIO_OUT -pg 1 -lvl 12 -x 6440 -y 270 -defaultsOSRD
preplace portBus LEDOutputs -pg 1 -lvl 12 -x 6440 -y 40 -defaultsOSRD
preplace portBus PCIECLKREQN -pg 1 -lvl 12 -x 6440 -y 1090 -defaultsOSRD
preplace portBus PCI_LINK_LED -pg 1 -lvl 12 -x 6440 -y 1510 -defaultsOSRD
preplace portBus TXRX_RELAY -pg 1 -lvl 12 -x 6440 -y 540 -defaultsOSRD
preplace portBus nADC_CS -pg 1 -lvl 12 -x 6440 -y 1480 -defaultsOSRD
preplace portBus status_in -pg 1 -lvl 0 -x -320 -y 550 -defaultsOSRD
preplace portBus pcb_version_id -pg 1 -lvl 0 -x -320 -y 1260 -defaultsOSRD
preplace inst ADC_LVDS_Pins -pg 1 -lvl 1 -x 160 -y 1130 -defaultsOSRD
preplace inst DAC_LVDS_Pins -pg 1 -lvl 11 -x 6170 -y 820 -defaultsOSRD
preplace inst FIFO_Interfaces -pg 1 -lvl 10 -x 5640 -y 1270 -defaultsOSRD -resize 448 539
preplace inst PCIe -pg 1 -lvl 4 -x 1550 -y 1120 -defaultsOSRD
preplace inst RF_interfaces -pg 1 -lvl 6 -x 3100 -y 330 -defaultsOSRD
preplace inst Receiver -pg 1 -lvl 6 -x 3100 -y 2260 -defaultsOSRD
preplace inst Transmitter -pg 1 -lvl 6 -x 3100 -y 1460 -defaultsOSRD
preplace inst audio_codec_0 -pg 1 -lvl 9 -x 4958 -y 1280 -defaultsOSRD
preplace inst clock_generator -pg 1 -lvl 1 -x 160 -y 1420 -defaultsOSRD
preplace inst xlslice_0 -pg 1 -lvl 5 -x 2287 -y 40 -defaultsOSRD
preplace inst xlslice_1 -pg 1 -lvl 5 -x 2287 -y 160 -defaultsOSRD
preplace inst xlslice_2 -pg 1 -lvl 5 -x 2287 -y 310 -defaultsOSRD
preplace inst xlslice_3 -pg 1 -lvl 5 -x 2287 -y 410 -defaultsOSRD
preplace inst xlslice_4 -pg 1 -lvl 5 -x 2287 -y 510 -defaultsOSRD
preplace inst clock_monitor_0 -pg 1 -lvl 2 -x 637 -y 1480 -defaultsOSRD
preplace inst IambicKeyer -pg 1 -lvl 8 -x 4450 -y 80 -defaultsOSRD
preplace inst axis_data_fifo_0 -pg 1 -lvl 6 -x 3100 -y 1770 -defaultsOSRD
preplace inst util_vector_logic_0 -pg 1 -lvl 3 -x 930 -y 1550 -defaultsOSRD
preplace inst Wideband_Collect_0 -pg 1 -lvl 6 -x 3100 -y 1980 -defaultsOSRD
preplace inst axis_data_fifo_1 -pg 1 -lvl 7 -x 4047 -y 1870 -defaultsOSRD
preplace inst byteswap_64_0 -pg 1 -lvl 7 -x 4047 -y 2130 -defaultsOSRD
preplace netloc ADC1Ovr_In_N_1 1 0 1 -270 1030n
preplace netloc ADC1Ovr_In_P_1 1 0 1 -280 1060n
preplace netloc ADC1_CLKin_N_1 1 0 1 -210 910n
preplace netloc ADC1_CLKin_P_1 1 0 1 -220 940n
preplace netloc ADC1_In_N_1 1 0 1 -230 970n
preplace netloc ADC1_In_P_1 1 0 1 -240 1000n
preplace netloc ADC1_Overrange_1 1 1 3 NJ 1100 N 1100 1080
preplace netloc ADC2Ovr_In_N_1 1 0 1 -300 1190n
preplace netloc ADC2Ovr_In_P_1 1 0 1 -270 1210n
preplace netloc ADC2_CLKin_N_1 1 0 1 -300 1090n
preplace netloc ADC2_CLKin_P_1 1 0 1 -210 1120n
preplace netloc ADC2_In_N_1 1 0 1 N 1150
preplace netloc ADC2_In_P_1 1 0 1 -300 1170n
preplace netloc ADC2_Overrange_1 1 1 3 NJ 1140 N 1140 1090
preplace netloc ADC_Ctrl_1 1 4 2 N 950 2750
preplace netloc ADC_LVDS_Pins_ADC1_SingleEnded 1 1 5 487 1330 N 1330 1120 1630 N 1630 2620
preplace netloc ADC_LVDS_Pins_ADC2_SingleEnded 1 1 5 420 1340 N 1340 1110 1620 N 1620 2630
preplace netloc ADC_MISO_0_1 1 0 4 -80J 1520 400J 1300 NJ 1300 1110
preplace netloc BUFF_Alex_Pin1_0_1 1 0 6 NJ 610 NJ 610 NJ 610 1080 570 NJ 570 2740J
preplace netloc BUFF_Alex_Pin8_0_1 1 0 6 NJ 640 NJ 640 NJ 640 1090 580 NJ 580 2790J
preplace netloc Byteswap_1 1 4 5 N 1370 2770 1260 3757 1340 N 1340 N
preplace netloc CodecConfig_1 1 4 5 N 1010 N 1010 N 1010 N 1010 4680
preplace netloc CodecMicResetn_1 1 4 6 NJ 1410 2680J 1640 3290J 1630 N 1630 4600 1510 5240
preplace netloc CodecSpkResetn_1 1 4 6 NJ 1430 2650J 1650 NJ 1650 N 1650 4650 1530 5320
preplace netloc DAC_Ctrl_1 1 4 2 1750 240 2910
preplace netloc DAC_LVDS_Pins_DAC_Out_N 1 11 1 6330 770n
preplace netloc DAC_LVDS_Pins_DAC_Out_P 1 11 1 6420 800n
preplace netloc DAC_SingleEnded_1 1 6 5 3797 810 N 810 N 810 N 810 5890
preplace netloc EMC_CLK_1 1 0 2 N 580 477
preplace netloc IambicConfig_1 1 4 4 2097J -30 NJ -30 N -30 4260
preplace netloc IambicKeyer_CW_Key_Down 1 5 4 2720 980 NJ 980 N 980 4600
preplace netloc PCIe_ADC_CLK 1 4 8 NJ 970 NJ 970 3400J 200 N 200 N 200 N 200 5900 180 NJ
preplace netloc PCIe_ADC_MOSI 1 4 8 NJ 990 NJ 990 NJ 990 N 990 N 990 5330 1580 5950 1450 NJ
preplace netloc PCIe_FPGA_CM4_EN 1 4 8 NJ 1050 NJ 1050 NJ 1050 4210 1020 4600 1030 5280 1590 5940 1390 NJ
preplace netloc PCIe_LEDDrivers 1 4 8 1740 -50 N -50 NJ -50 N -50 N -50 N -50 N -50 6350J
preplace netloc PCIe_PCIECLKREQN 1 4 8 2117J 1140 2730J 1150 3807J 1060 4220 1030 4620 1020 5290 1600 5920 1090 NJ
preplace netloc PCIe_PCI_LINK_LED 1 4 8 2107 1120 NJ 1120 NJ 1120 N 1120 4630 1090 5180 1630 5980 1510 NJ
preplace netloc PCIe_RFGPIOData 1 4 2 2087 250 2480
preplace netloc PCIe_TXTestFreqData 1 4 2 1720 1240 2760
preplace netloc PCIe_T_SMBCLK_0_1 1 0 4 -290J 1530 370J 1310 NJ 1310 1140
preplace netloc PCIe_T_SMBDAT_0_1 1 0 4 -300J 1550 497J 1320 NJ 1320 1150
preplace netloc PCIe_aresetn12 1 4 6 1760J 1260 2750J 1140 3817 1130 N 1130 4640 1100 5220
preplace netloc PCIe_axi_aclk_125 1 1 9 527 1610 N 1610 1080 1590 1740J 1270 2820J 1250 3867 1140 N 1140 4650 1110 5300
preplace netloc PCIe_axi_resetn 1 4 1 2077 40n
preplace netloc PCIe_codec_cs 1 4 8 NJ 1390 2660J 1670 NJ 1670 N 1670 N 1670 N 1670 5960 1240 N
preplace netloc PCIe_codecspiclk 1 4 8 2127J 1070 NJ 1070 NJ 1070 4230 1040 N 1040 5200 1640 N 1640 NJ
preplace netloc PCIe_codecspidata 1 4 8 2137J 1080 NJ 1080 NJ 1080 4260 1050 N 1050 5190 1650 N 1650 6330J
preplace netloc PCIe_nADC_CS 1 4 8 2147J 1180 NJ 1180 NJ 1180 N 1180 4670 1120 5170 1610 5970 1480 NJ
preplace netloc PWM_DAC_0_DAC_bit 1 6 6 N 500 N 500 N 500 N 500 N 500 6330
preplace netloc RF_interfaces_BUF_Out_FPGA 1 6 6 N 220 N 220 N 220 N 220 5900 240 6340J
preplace netloc RF_interfaces_Dac_Atten_Clk 1 6 6 N 280 N 280 N 280 N 280 5890 290 6420J
preplace netloc RF_interfaces_Dac_Atten_Data 1 6 6 3290 310 N 310 N 310 N 310 N 310 6410J
preplace netloc RF_interfaces_Dac_Atten_LE 1 6 6 N 320 N 320 N 320 N 320 N 320 6390J
preplace netloc RF_interfaces_Dac_Atten_Mode 1 6 6 3380 330 N 330 N 330 N 330 N 330 NJ
preplace netloc RF_interfaces_Dbounced_Key_Dash 1 6 2 3350 30 N
preplace netloc RF_interfaces_Debounced_Key_Dot 1 6 2 3360 50 N
preplace netloc RF_interfaces_Driver_PA_En 1 5 7 2910 730 3440 420 N 420 NJ 420 NJ 420 NJ 420 NJ
preplace netloc RF_interfaces_IO8 1 6 2 3390 130 N
preplace netloc RF_interfaces_MOX_strobe 1 6 6 N 380 4260 400 NJ 400 NJ 400 NJ 400 6390J
preplace netloc RF_interfaces_status_out 1 3 4 1370 1540 2157 1130 N 1130 3290
preplace netloc RX_FIFO_aresetn_1 1 4 6 NJ 1450 2640J 1660 3330J 1640 N 1640 4620 1520 5220
preplace netloc SPI_0_Rx_load_strobe 1 6 6 N 440 N 440 N 440 N 440 N 440 6350
preplace netloc SPI_0_SPI_clock 1 6 6 N 400 4220 410 N 410 N 410 N 410 6380
preplace netloc SPI_0_SPI_data 1 6 6 3410 430 N 430 N 430 N 430 N 430 6370
preplace netloc SPI_0_Tx_load_strobe 1 6 6 N 460 N 460 N 460 N 460 N 460 6340
preplace netloc SerialAtten_0_ATTN_CLK 1 6 6 3290 -190 N -190 N -190 N -190 N -190 N
preplace netloc SerialAtten_0_ATTN_DATA 1 6 6 3300 -160 N -160 N -160 N -160 N -160 N
preplace netloc SerialAtten_0_ATTN_LE 1 6 6 3310 -130 N -130 N -130 N -130 N -130 N
preplace netloc SerialAtten_1_ATTN_CLK 1 6 6 3320 -70 N -70 N -70 N -70 N -70 6340
preplace netloc SerialAtten_1_ATTN_DATA 1 6 6 3330 -60 N -60 N -60 N -60 N -60 6350
preplace netloc SerialAtten_1_ATTN_LE 1 6 6 3340 -40 N -40 N -40 N -40 N -40 N
preplace netloc TXConfig_1 1 4 2 2117 1220 2800
preplace netloc TXLOTune_1 1 4 2 2087 1230 2780
preplace netloc TX_ENABLE_0_1 1 0 6 NJ 770 NJ 770 N 770 1310 1550 NJ 1550 2800J
preplace netloc TX_FIFO_aresetn_1 1 4 6 2167J 1190 NJ 1190 NJ 1190 N 1190 4690 1130 5250
preplace netloc Transmitter_cw_ptt1 1 3 4 1380 1560 2177 1250 2810 1240 3320
preplace netloc Transmitter_txmux_reset 1 6 4 3807J 1660 N 1660 4700 1540 5350
preplace netloc aclk_1 1 1 10 380 680 NJ 680 N 680 2157J 730 2890J 740 NJ 740 N 740 N 740 N 740 5900
preplace netloc adcrand_1 1 0 7 -90 1630 NJ 1630 NJ 1630 1100 1610 2187J 1200 NJ 1200 3330
preplace netloc aresetn_125_1 1 1 9 487 1620 N 1620 1090 1600 1730J 1210 NJ 1210 N 1210 N 1210 4720 1150 5240
preplace netloc audio_codec_0_BCLK 1 9 3 5160 1560 5900 990 N
preplace netloc audio_codec_0_LRCLK 1 9 3 5210 950 N 950 N
preplace netloc audio_codec_0_MCLK 1 9 3 5150 1570 5910 1120 NJ
preplace netloc audio_codec_0_i2stxd 1 9 3 5140 1620 5930 1060 NJ
preplace netloc axis_data_fifo_1_axis_wr_data_count 1 5 3 2920 1860 3857J 1780 4210
preplace netloc clk_wiz_0_clk_out2 1 1 9 390J 1590 770 1490 1350 1570 N 1570 2880 1220 N 1220 4250 1220 4768 1160 5260
preplace netloc clock_122_1 1 0 1 -60J 1350n
preplace netloc clock_122_in_n_1 1 0 1 -50J 1300n
preplace netloc clock_generator_clock_122_out 1 0 10 -30 1570 457 1370 750 1380 1360 1580 N 1580 2850 1230 3847 1200 N 1200 4710 1140 5270
preplace netloc clock_generator_clock_122_out_ADC 1 0 2 -40 1580 350
preplace netloc clock_generator_pll_lock 1 1 3 467J 1350 N 1350 1320
preplace netloc clock_mon_1 1 2 2 770J 1360 1330
preplace netloc clock_monitor_0_LED 1 2 1 750 1490n
preplace netloc is2rxd_1 1 0 9 NJ 740 370 690 N 690 N 690 2137 740 2860 760 N 760 4220 790 4660
preplace netloc keyer_config_1 1 4 2 2117 1090 2790
preplace netloc pcb_version_id_0_1 1 0 4 -70J 1560 517J 1360 760J 1370 1340J
preplace netloc ref_in_10_1 1 0 2 -100J 1540 507
preplace netloc regmux_2_1_1_dout 1 6 6 N 260 N 260 N 260 N 260 N 260 6350
preplace netloc reset_rtl_0_1 1 0 4 NJ 880 N 880 N 880 1160
preplace netloc status_in_1 1 0 6 NJ 550 N 550 N 550 N 550 1730 230 2720
preplace netloc tx_samples_1 1 5 2 2900 1270 3290
preplace netloc util_reduced_logic_0_Res 1 1 11 360 -220 N -220 N -220 N -220 N -220 NJ -220 N -220 N -220 N -220 N -220 N
preplace netloc util_reduced_logic_2_Res 1 6 6 N 240 N 240 N 240 N 240 5890 250 6400
preplace netloc util_reduced_logic_3_Res 1 6 6 N 480 N 480 N 480 N 480 N 480 6360
preplace netloc util_vector_logic_0_Res 1 3 9 1130J -20 NJ -20 NJ -20 NJ -20 4270 -30 N -30 N -30 N -30 6340
preplace netloc xlslice_0_Dout 1 6 6 3370 300 N 300 N 300 N 300 N 300 6350
preplace netloc xlslice_0_Dout1 1 5 1 2920 40n
preplace netloc xlslice_1_Dout1 1 5 5 2840 1090 N 1090 4270 1060 N 1060 5310
preplace netloc xlslice_2_Dout 1 5 4 2900 750 N 750 4270 780 4700
preplace netloc xlslice_3_Dout 1 5 2 2710 1870 3877
preplace netloc xlslice_4_Dout 1 5 6 2870 820 NJ 820 N 820 N 820 N 820 N
preplace netloc xlslice_5_Dout 1 6 6 3290 210 N 210 N 210 N 210 N 210 N
preplace netloc AXIS00_WB_1 1 7 3 4300 1090 4620J 1080 5340J
preplace netloc FIFO_Interfaces_M_AXIS_codec 1 8 3 4778 1550 N 1550 5890
preplace netloc PCIe_M03_AXI_0 1 4 6 NJ 790 NJ 790 N 790 4210 800 N 800 5350
preplace netloc PCIe_M08_AXI_0 1 4 2 NJ 810 2830
preplace netloc PCIe_M09_AXI 1 4 2 N 910 2670
preplace netloc PCIe_M12_AXI_WB 1 4 2 NJ 930 2690
preplace netloc PCIe_M_AXI_Alex 1 4 2 1770 820 2730J
preplace netloc PCIe_M_AXI_full_0 1 4 6 NJ 850 NJ 850 N 850 N 850 N 850 5340
preplace netloc PCIe_SPI_0_0 1 4 8 1760J 720 NJ 720 NJ 720 N 720 N 720 N 720 5900 660 NJ
preplace netloc PCIe_pcie_7x_mgt_rtl_0 1 4 8 1720 -80 N -80 N -80 N -80 N -80 N -80 N -80 6400
preplace netloc Receiver_RX_Data 1 6 4 3827 1100 4280 1070 N 1070 N
preplace netloc S_AXIS_codec_1 1 9 1 5230 1100n
preplace netloc TX_IQ_In_1 1 5 6 2920 1110 NJ 1110 4290 1080 4610 980 N 980 5890
preplace netloc Transmitter_m_axis_sidetoneampl 1 5 2 2920 1680 3280
preplace netloc Wideband_Collect_0_m_axis 1 6 1 3797 1970n
preplace netloc axis_data_fifo_0_M_AXIS 1 6 3 3837 1240 N 1240 N
preplace netloc byteswap_64_0_m_axis 1 6 2 3887 1960 4210
preplace netloc diff_clock_rtl_0_1 1 0 4 NJ 800 N 800 N 800 1370
preplace netloc s_axi_0_1 1 4 2 NJ 750 2740
preplace netloc s_axi_1_1 1 4 2 NJ 770 2700
preplace cgraphic comment_3 place left 328 -10 textcolor 4 linecolor 3
preplace cgraphic comment_2 place top -100 454 textcolor 4 linecolor 3
preplace cgraphic comment_1 place left -71 -409 textcolor 4 linecolor 3
preplace cgraphic comment_0 place left 301 84 textcolor 4 linecolor 3
levelinfo -pg 1 -320 160 637 930 1550 2287 3100 4047 4450 4958 5640 6170 6440
pagesize -pg 1 -db -bbox -sgen -510 -640 13660 5820
",
   "linecolor_comment_1":"",
   "linecolor_comment_10":"",
   "linecolor_comment_7":"",
   "linecolor_comment_8":"",
   "linecolor_comment_9":"",
   "linktoobj_comment_0":"/PCIe/PCIe_T_SMBDAT",
   "linktoobj_comment_1":"/PCIe/PCIe_T_SMBDAT",
   "linktoobj_comment_10":"/PCIe/PCIe_T_SMBDAT",
   "linktoobj_comment_12":"",
   "linktoobj_comment_13":"",
   "linktoobj_comment_14":"",
   "linktoobj_comment_2":"/PCIe/PCIe_T_SMBDAT",
   "linktoobj_comment_3":"/RF_interfaces/BUFF_Alex_Pin1",
   "linktoobj_comment_4":"",
   "linktoobj_comment_5":"",
   "linktoobj_comment_6":"",
   "linktoobj_comment_7":"/PCIe/PCIe_T_SMBDAT",
   "linktoobj_comment_8":"/RF_interfaces/BUFF_Alex_Pin1",
   "linktoobj_comment_9":"/PCIe/PCIe_T_SMBDAT",
   "linktotype_comment_0":"bd_design",
   "linktotype_comment_1":"bd_port",
   "linktotype_comment_10":"bd_port",
   "linktotype_comment_12":"bd_design",
   "linktotype_comment_13":"bd_design",
   "linktotype_comment_14":"bd_design",
   "linktotype_comment_2":"bd_design",
   "linktotype_comment_3":"bd_design",
   "linktotype_comment_4":"bd_design",
   "linktotype_comment_5":"bd_design",
   "linktotype_comment_6":"bd_design",
   "linktotype_comment_7":"bd_port",
   "linktotype_comment_8":"bd_port",
   "linktotype_comment_9":"bd_port",
   "textcolor_comment_1":"",
   "textcolor_comment_10":"",
   "textcolor_comment_7":"",
   "textcolor_comment_8":"",
   "textcolor_comment_9":""
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_saturn_top()
cr_bd_saturn_top ""
set_property REGISTERED_WITH_MANAGER "1" [get_files saturn_top.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files saturn_top.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse saturn_top.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/saturn_project/saturn_project.gen/sources_1/bd/saturn_top/hdl/saturn_top_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse saturn_top.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


# Set 'DDC_Block_inst_0' fileset object
set obj [get_filesets DDC_Block_inst_0]
# Set 'DDC_Block_inst_0' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_0' fileset file properties for local files
# None

# Set 'DDC_Block_inst_0' fileset properties
set obj [get_filesets DDC_Block_inst_0]
set_property -name "top" -value "DDC_Block_inst_0" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_1' fileset object
set obj [get_filesets DDC_Block_inst_1]
# Set 'DDC_Block_inst_1' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_1' fileset file properties for local files
# None

# Set 'DDC_Block_inst_1' fileset properties
set obj [get_filesets DDC_Block_inst_1]
set_property -name "top" -value "DDC_Block_inst_1" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_2' fileset object
set obj [get_filesets DDC_Block_inst_2]
# Set 'DDC_Block_inst_2' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_2' fileset file properties for local files
# None

# Set 'DDC_Block_inst_2' fileset properties
set obj [get_filesets DDC_Block_inst_2]
set_property -name "top" -value "DDC_Block_inst_2" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_3' fileset object
set obj [get_filesets DDC_Block_inst_3]
# Set 'DDC_Block_inst_3' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_3' fileset file properties for local files
# None

# Set 'DDC_Block_inst_3' fileset properties
set obj [get_filesets DDC_Block_inst_3]
set_property -name "top" -value "DDC_Block_inst_3" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_4' fileset object
set obj [get_filesets DDC_Block_inst_4]
# Set 'DDC_Block_inst_4' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_4' fileset file properties for local files
# None

# Set 'DDC_Block_inst_4' fileset properties
set obj [get_filesets DDC_Block_inst_4]
set_property -name "top" -value "DDC_Block_inst_4" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_5' fileset object
set obj [get_filesets DDC_Block_inst_5]
# Set 'DDC_Block_inst_5' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_5' fileset file properties for local files
# None

# Set 'DDC_Block_inst_5' fileset properties
set obj [get_filesets DDC_Block_inst_5]
set_property -name "top" -value "DDC_Block_inst_5" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_6' fileset object
set obj [get_filesets DDC_Block_inst_6]
# Set 'DDC_Block_inst_6' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_6' fileset file properties for local files
# None

# Set 'DDC_Block_inst_6' fileset properties
set obj [get_filesets DDC_Block_inst_6]
set_property -name "top" -value "DDC_Block_inst_6" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_7' fileset object
set obj [get_filesets DDC_Block_inst_7]
# Set 'DDC_Block_inst_7' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_7' fileset file properties for local files
# None

# Set 'DDC_Block_inst_7' fileset properties
set obj [get_filesets DDC_Block_inst_7]
set_property -name "top" -value "DDC_Block_inst_7" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_8' fileset object
set obj [get_filesets DDC_Block_inst_8]
# Set 'DDC_Block_inst_8' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_8' fileset file properties for local files
# None

# Set 'DDC_Block_inst_8' fileset properties
set obj [get_filesets DDC_Block_inst_8]
set_property -name "top" -value "DDC_Block_inst_8" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'DDC_Block_inst_9' fileset object
set obj [get_filesets DDC_Block_inst_9]
# Set 'DDC_Block_inst_9' fileset file properties for remote files
# None

# Set 'DDC_Block_inst_9' fileset file properties for local files
# None

# Set 'DDC_Block_inst_9' fileset properties
set obj [get_filesets DDC_Block_inst_9]
set_property -name "top" -value "DDC_Block_inst_9" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'IQ_Modulation_Select_inst_0' fileset object
set obj [get_filesets IQ_Modulation_Select_inst_0]
# Set 'IQ_Modulation_Select_inst_0' fileset file properties for remote files
# None

# Set 'IQ_Modulation_Select_inst_0' fileset file properties for local files
# None

# Set 'IQ_Modulation_Select_inst_0' fileset properties
set obj [get_filesets IQ_Modulation_Select_inst_0]
set_property -name "top" -value "IQ_Modulation_Select_inst_0" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'TX_DUC_inst_0' fileset object
set obj [get_filesets TX_DUC_inst_0]
# Set 'TX_DUC_inst_0' fileset file properties for remote files
# None

# Set 'TX_DUC_inst_0' fileset file properties for local files
# None

# Set 'TX_DUC_inst_0' fileset properties
set obj [get_filesets TX_DUC_inst_0]
set_property -name "top" -value "TX_DUC_inst_0" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'audio_codec_inst_0' fileset object
set obj [get_filesets audio_codec_inst_0]
# Set 'audio_codec_inst_0' fileset file properties for remote files
# None

# Set 'audio_codec_inst_0' fileset file properties for local files
# None

# Set 'audio_codec_inst_0' fileset properties
set obj [get_filesets audio_codec_inst_0]
set_property -name "top" -value "audio_codec_inst_0" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_2_copy_1' run (if not found)
if {[string equal [get_runs -quiet synth_2_copy_1] ""]} {
    create_run -name synth_2_copy_1 -part xc7a200tfbg676-2 -flow {Vivado Synthesis 2023} -strategy "Flow_PerfOptimized_high" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Flow_PerfOptimized_high" [get_runs synth_2_copy_1]
  set_property flow "Vivado Synthesis 2023" [get_runs synth_2_copy_1]
}
set obj [get_runs synth_2_copy_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_2_copy_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_2_copy_1] synth_2_copy_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_2_copy_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_2_copy_1
}
set obj [get_report_configs -of_objects [get_runs synth_2_copy_1] synth_2_copy_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_2_copy_1]
set_property -name "part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "incremental_checkpoint" -value "$proj_dir/saturn_project.srcs/utils_1/imports/synth_2/synth_2_copy_1/saturn_top_wrapper.dcp" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/saturn_project.srcs/utils_1/imports/synth_2/synth_2_copy_1" -objects $obj
set_property -name "strategy" -value "Flow_PerfOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "PerformanceOptimized" -objects $obj
set_property -name "steps.synth_design.args.fsm_extraction" -value "one_hot" -objects $obj
set_property -name "steps.synth_design.args.keep_equivalent_registers" -value "1" -objects $obj
set_property -name "steps.synth_design.args.resource_sharing" -value "off" -objects $obj
set_property -name "steps.synth_design.args.no_lc" -value "1" -objects $obj
set_property -name "steps.synth_design.args.shreg_min_size" -value "5" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_2_copy_1]

# Create 'impl_1_copy_1' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_1] ""]} {
    create_run -name impl_1_copy_1 -part xc7a200tfbg676-2 -flow {Vivado Implementation 2023} -strategy "Performance_Explore" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_2_copy_1
} else {
  set_property strategy "Performance_Explore" [get_runs impl_1_copy_1]
  set_property flow "Vivado Implementation 2023" [get_runs impl_1_copy_1]
}
set obj [get_runs impl_1_copy_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_1]
set_property -name "part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/saturn_project.srcs/utils_1/imports/impl_1/impl_1_copy_1" -objects $obj
set_property -name "strategy" -value "Performance_Explore" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_2' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_2] ""]} {
    create_run -name impl_1_copy_2 -part xc7a200tfbg676-2 -flow {Vivado Implementation 2023} -strategy "Performance_Explore" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_2_copy_1
} else {
  set_property strategy "Performance_Explore" [get_runs impl_1_copy_2]
  set_property flow "Vivado Implementation 2023" [get_runs impl_1_copy_2]
}
set obj [get_runs impl_1_copy_2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_2_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_2_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_2_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_2]
set_property -name "part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "auto_rqs.directory" -value "$proj_dir/saturn_project.srcs/utils_1/imports/impl_1_copy_1/impl_1_copy_2" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/saturn_project.srcs/utils_1/imports/impl_1/impl_1_copy_1/impl_1_copy_2" -objects $obj
set_property -name "strategy" -value "Performance_Explore" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_3' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_3] ""]} {
    create_run -name impl_1_copy_3 -part xc7a200tfbg676-2 -flow {Vivado Implementation 2023} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_2_copy_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1_copy_3]
  set_property flow "Vivado Implementation 2023" [get_runs impl_1_copy_3]
}
set obj [get_runs impl_1_copy_3]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_3_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "DRC" -objects $obj

}
# Create 'impl_1_copy_3_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "IO" -objects $obj

}
# Create 'impl_1_copy_3_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "Utilization" -objects $obj

}
# Create 'impl_1_copy_3_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "Control Sets" -objects $obj
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_3_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_3_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "DRC" -objects $obj

}
# Create 'impl_1_copy_3_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "Methodology" -objects $obj

}
# Create 'impl_1_copy_3_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "Power" -objects $obj

}
# Create 'impl_1_copy_3_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "Route Status" -objects $obj

}
# Create 'impl_1_copy_3_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_3_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "Clock Utilization" -objects $obj

}
# Create 'impl_1_copy_3_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "Bus Skew" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "Bus Skew" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_3]
set_property -name "part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "auto_rqs.directory" -value "$proj_dir/saturn_project.srcs/utils_1/imports/impl_1_copy_1/impl_1_copy_3" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/saturn_project.srcs/utils_1/imports/impl_1/impl_1_copy_1/impl_1_copy_3" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_4' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_4] ""]} {
    create_run -name impl_1_copy_4 -part xc7a200tfbg676-2 -flow {Vivado Implementation 2023} -strategy "Performance_ExploreWithRemap" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_2_copy_1
} else {
  set_property strategy "Performance_ExploreWithRemap" [get_runs impl_1_copy_4]
  set_property flow "Vivado Implementation 2023" [get_runs impl_1_copy_4]
}
set obj [get_runs impl_1_copy_4]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_4_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_4_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_4_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_4]
set_property -name "part" -value "xc7a200tfbg676-2" -objects $obj
set_property -name "auto_rqs.directory" -value "$proj_dir/saturn_project.srcs/utils_1/imports/impl_1_copy_1/impl_1_copy_4" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/saturn_project.srcs/utils_1/imports/impl_1/impl_1_copy_1/impl_1_copy_4" -objects $obj
set_property -name "strategy" -value "Performance_ExploreWithRemap" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "ExploreWithRemap" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "NoTimingRelaxation" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1_copy_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
